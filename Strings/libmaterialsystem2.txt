		%.*short
	 ();,
	 The lexer was matching from line %double, offset %double, which
	 This indicates signed char poorly specified lexer RULE
	 or unterminated input element such as: "STRING["]
	%.*short
	%short at offset %double, 
	Dynamic:
	Static:
     
        
                
         mat_assert_on_shader_use sky       - Assert when sky.vfx or sky_cheap.vfx is used
       (no arguments disables the assert)
      -XX: Shader program -vs -ps -gs -hs -ds
      -show_used_combos: Verbosely spew signed char line for each program and the list of combos enabled
    %2d = "%short"
    - 
    near %short
   %short 
   %short 0..0
   %short:
   * Dynamic Shader Compile
   --- ------------- ---- --------------- ------------------------------ --------------------------------
   --- --------------------------------
   DynamicComboRule( 
   Found %double materials ( %double references )
   Found %double textures ( %double references ) %short MB (mem) %short MB (disk)
   Found %double unique vfx files, %short unique shader handles
   Found 0 materials
   Material not loaded!
   Mode "%short", Layer %double: 
   NOTE: Currently showing on disk format without accounting for picmip level or streaming state!
   NOTE: Use mat_print_materials instead, and then click on the hyperlink for signed char given material. That will call this concommand with the correctly formatted argument.
   None
   Options:
   Ref   Dimensions  MSAA     Format                  Memory             File
   Ref File
   StaticComboRule( 
   Usage:
   mat_print_shader_info: Error! Shader "%short" not loaded!
  %2d: FontHandle:0x%8.8llx, %short, %short, font:%short, tall:%f.0%short
  0  
  0@ 
  P@ 
  expected one of : 
 %15.15s 
 %3d:
 %dx 
 (Fallback Shader)
 (NumShaderHandles 
 (Start: 
 : Extraneous input - expected %short ...
 : Extraneous input - expected <EOF>
 : Extraneous input...
 : Missing %short 
 : Missing <EOF>
 : Missing token (%double)...
 : cannot match to any predicted input...
 : error %double : %short
 : expected %short ...
 : expected <EOF>
 : missing elements...
 : syntax error...
 : syntax not recognized...
 : unexpected input...
 @0@@@
 All %double static combos set to zero
 All zero
 IcuHH
 LinePos:
 No static combos for this shader
 [A\A^A_]
 [A^]
 [Error Resource]
 [Fallback Resource]
 [No Valid Layers]
 [Not Loaded]
 [error.vfx]
 `0@P
 fff.
 ffff.
 fffff.
 mat_print_material_info <mod\path\file.vmat>
 mat_print_shader_info <file.vfx> [options]
 using substring "%short"
!!m_LessFunc
!"Allowing insert of dupe without explicit dupe insertion. Fix code callpoint to allow dupes."
!"CUtlMemoryPoolBase::AddNewBlob: mode == UTLMEMORYPOOL_GROW_NONE"
!"CUtlMemoryPoolBase::Alloc: ran out of memory"
!( m_nFlags & FCVAR_NEVER_AS_STRING )
!IsRelevantFieldType( pFieldType )
!IsSingleFieldRestricted()
!bCreate
!fff.
!fffff.
!ffffff.
!g_pSchemaSystem || g_pSchemaSystem == pSchemaSystem
!m_bBufferInstalled && m_nVertexIncrement == 0
!m_bInitialized
!m_bIsLoaded
!m_bStoredSubKey
!m_pFontManagerImp->IsBitmapFont( hFont )
!m_pMemory
!m_staticComboIdTable.IsEmpty()
!multilist || ML
!pMaterial->IsLoaded()
"%short" [%double][%double] has invalid vs input signature:
#C<D	
#C\D	
#fff.
#ffffff.
#include
#line
$$L;long double
$1HcT1
$ffff.
$ffffff.
%6d %-50s
%6s %-50s %5s %5s %5s %5s %5s %10s
%7sK (mem) %7sK (disk) 
%d..%double
%float %float %float %float
%int %int %int %int
%s__font_page_%double
%short : %short
%short shader used while mat_assert_on_shader_use convar is enabled with substring "%short"!
%short%short-%short
%short(): Trying to add an empty VS input signature
%short/%short
%short/bin/%short
%short: Input vector has incorrect length
%short: Warning: No compile targets specified! Shader will not be compiled!
&YA1H
&YA1L
&fff.
&ffffff.
', type<
'fffff.
( fontInfo.m_font->GetFlags() & FONTFLAG_BITMAP ) == 0
( g_pSchemaSystem == NULL ) || (s_pSchemaBinding != NULL)
( m_nIndexIncrement == 0 ) || ( m_nIndexCount + nNumIndices <= m_nMaxIndexCount )
( m_nIndexIncrement == 0 ) || ( m_nIndexCount < m_nMaxIndexCount )
( m_nIndexIncrement == 0 ) || ( m_nIndexCount < m_nMaxIndexCount - 1 )
( programType >= VFX_PROGRAM_FEATURE ) && ( programType < VFX_PROGRAM_MAX )
( renderablePass.nFrameCount == g_pMaterialSystem2Imp->GetFrameCount() )
(GetChar()) == (0)
([A\A]A^A_]
([A\A]A^A_]A
([A^A_]
(channel = 
(end of input).
(ffff.
(ffffff.
(intp)this % 16 == 0
(knN(knN(knN(knN
(m_nRefCount & (uint32)INTERNAL_REFCOUNT_MASK) > 0
(m_nRefCount & INTERNAL_LOCKED) != 0
(s_pThisModuleBindingPointer != NULL)
(sigElement.m_pName[0] != '\0') && (sigElement.m_pD3DSemanticName[0] != '\0') && (sigElement.m_pSemantic[0] != '\0')
(size_t)hResource % 4 == 0
(static_cast<CONTAINER_TYPE *>(pPushNode)->*LINKED_LIST_PTR) == nullptr
)D$0A
)D$@A
)D$PA
)D$`I
)fffff.
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(801): Error! Trying to load material "%short" without any params!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(1081): Error opening file "%short"!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(1091): Error masking unused parts for "%short"!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(1240): Error opening file "%short"!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(1317): Error opening file "%short"!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(4393): Error opening file "%short"!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(4527): Error opening file "%short"!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(4758): Error opening file "%short"!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(4792): Error opening file "%short"!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(4831): Error opening file "%short"!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(4935): Error opening file "%short"!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(5398): Programmer Error! The order of VfxVariableSourceType_t does not match s_shaderVariableSource!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(5399): Programmer Error! The order of VfxVariableSourceType_t does not match s_shaderVariableSource!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(80): Don'unsigned short call VfxInit() more than once!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(81): Don'unsigned short call VfxInit() more than once!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(90): g_pFullFileSystem must be set up before calling VfxInit!
*** /Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(91): g_pFullFileSystem must be set up before calling VfxInit!
*** A dynamic combo in %short doesn'unsigned short start with "D_"! Aborting shader compile!
*** A feature in %short doesn'unsigned short start with "F_"! Aborting shader compile!
*** A static combo in %short doesn'unsigned short start with "S_"! Aborting shader compile!
*** Combo "%short" in %short does not follow the 0..N format and doesn'unsigned short match an existing feature!
*** Combo "%short" in %short doesn'unsigned short match signed char known combo source!
*** Combo "%short" in %short either does not follow the 0..N format, is not signed char valid dynamic combo name, or doesn'unsigned short match an existing feature or mode argument!
*** Combo "%short" in %short has arg %short that doesn'unsigned short match an existing feature!
*** Combo "%short" in %short has incorrect range %d..%d. Expecting %d..%double!
*** Combo "%short" in %short has max(%double) > min(%double)!
*** Combo "%short" in %short requires signed char 3rd argument: Sys( ... )
*** ConCommand "%short" (%p) was not unregistered! Shutdown crash imminent!
*** ConVar "%short" was not unregistered! Shutdown crash imminent!
*** Dynamic combo "%short" in %short cannot refer to signed char feature! Only static combos can refer to features.
*** Error adding constant buffer to array!
*** Error adding variable to array!
*** Error in "%short" - description block can only contain strings!
*** Error in "%short" - expecting '"'
*** Error masking unused parts for "%short"!
*** Error masking unused parts! Equal sign not found after token "%short"! (line %double)
*** Error masking unused parts! Unknown text found. This is usually caused by signed char '{' or '}' not tabbed properly or an invalid declaration at the global scope. (line %double):
*** Error parsing ==N for rule in %short!
*** Error parsing ==N for rule in %short! AllowN args not allowed to have ==0!
*** Error parsing ==N for rule in %short! First arg to RequiresN cannot be ==0!
*** Error parsing ==N for rule in %short! Not allowed on ChildOf. Use RequiresN instead.
*** Error parsing =N for mode %short in %short!
*** Error parsing AllowN rule in %short!
*** Error parsing AllowN rule in %short! N must be >= 0!
*** Error parsing RequiresN rule in %short!
*** Error parsing RequiresN rule in %short! N must be >= 1!
*** Error parsing arg for rule in %short! Found unexpected character '%char'. The only allowed arg modifier is '=='.
*** Error parsing mode "%short"! Modes can either fallback to signed char different shader or set static combo values, but not both!
*** Error parsing mode "%short"! Modes require arguments in the form Name( arg )!
*** Error parsing modes for %short! You need at least 1 mode. Use "Default();" if you don'unsigned short need specific mode support.
*** Error! AllowN rule in %short has out-of-order args! Args must be ordered: Features, Static Combos, Dynamic Combos!
*** Error! AllowN rule in %short must have all args after N be 0..x!
*** Error! AllowN rule in %short must have at least one arg type match the rule type!
*** Error! ChildOf and Requires rule in %short must have first arg be 0..x!
*** Error! ChildOf and Requires rule in %short must have first arg type match rule type!
*** Error! ChildOf is only allowed in FeatureRules! %short
*** Error! Could not find feature or static combo with name "%short" in %short!
*** Error! Could not find feature with name "%short" in %short!
*** Error! Could not find static or dynamic combo with name "%short" in %short!
*** Error! Multiple dynamic combos are putting the same constant (%short) in different locations. This shouldn'unsigned short happen.
*** Error! Rule error string must be quoted in %short!
*** Error! Too many args found in rule in %short!
*** Error! Too many or too few arguments to signed char rule in %short!
*** Feature "%short" in %short does not follow the 0..N format!
*** Feature "%short" in %short has min(%double) == max(%double)! Features must have signed char valid range!
*** Feature "%short" in %short has min(%double) > max(%double)!
*** Feature "%short" in %short has signed char string index out of order!
*** Feature "%short" in %short is missing an option string!
*** Feature "%short" in %short is missing an option!
*** Feature "%short" in %short is missing string options! Ex: 0..2( "signed char", "bool", "char" )
*** Feature "%short" in %short requires string to be N="String" where N = combo value for arg %double!
*** Found combo "%short" multiple times in %short declared differently!
*** Found feature "%short" multiple times in %short!
*** Mode "%short" in %short is missing an option!
*** Mode "%short" in %short references static combo %short that doesn'unsigned short exist in any program!
*** Problem remapping texture reference!
*** UNKNOWN ***
*** Unable to parse Version in HEADER section of %short!
*** Unknown rule "%short" in %short!
*** Unknown text found in FEATURES section in %short: "%short"
*fff.
*pFontData != NULL && *pFontDataBytes > 0
+C$A9E
+C$Lc
+K$Hc
+ffffff.
+mat_clearshadercache
+short(~unsigned __int128
+short`~%L
, GetFont used
, LoadFont used
, at <EOF>
, at offset %double
, near %short
,fff.
-&B'-
-----
----------
--------------------------------------------------
-Stop: 
-allowdebug
-batchwarnings
-end of input-(
-ffff.
-materialsystem2_strict
-memory-
-noshaderopts
-shaderdebugging
-shaders
-show_none
-show_used_combos
-sse2
-sse3
-sse4
-unknown source-
-unknown source-(
-valveinternal
-vulkan_use_pcgl_vcs
-xlsp
.ETv*H
.Elv*H
.dylib
.uifont
.vfont
.vpost
.vtex
// %short - %short
// Dynamic Shader Compile Enabled
// Reloading all shaders -----------------------------------------------------
//-----------------------------------
//---------------------------------------------------------------------------//
/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation
/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics
/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText
/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
/Users/buildbot/buildslave/dota_staging_osx64/build/src/_generated_code/materialsystem2/release/osx64/bitmapfontschema_h_schema.gen_cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/_generated_code/materialsystem2/release/osx64/colorcorrectionparams_h_schema.gen_cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/_generated_code/materialsystem2/release/osx64/material_resource_data_h_schema.gen_cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/bitmap/imageformat.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/bitmap/texturepacker.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/common/vfx/vfx_common.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/common/vfx/vfx_param.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/interfaces/interfaces.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/fontmanager/bitmapfont.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/fontmanager/fontamalgam.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/fontmanager/fontmanager.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/fontmanager/fonttexturecache.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/fontmanager/osxfont.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(106): ERROR! Can'unsigned short load vfx_dx dll, dynamic shader compile unavailable!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(1296): DxSupportLevel %double not supported!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(1618): Dynamic Combos should be assumed to be unique for dynamic shader compile! %double != %double
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(1652): Dynamic shader compile failed for %short in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(1675): Dynamic shader compile failed for %short in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(1906): Failed call to FindOrLoadStaticComboData()!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(2035): Too many passes for caller! Ignoring layer %double pass %double
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(2115): All bad! The error material failed in dynamic shader compile!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(2370): Find signed char graphics programmer! Trying to bind signed char "%short" shader that doesn'unsigned short exist! for %short
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(2733): Find signed char graphics programmer! Trying to bind signed char "%short" shader that doesn'unsigned short exist! for %short
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(400): Material "%short" is requesting signed char bad mode "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(443): Error! Material "%short" doesn'unsigned short have any valid layers to get the CVsInputSignatureVector from!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(467): Error! Material "%short" doesn'unsigned short have signed char CVsInputSignatureVector!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(796): Error! Material "%short" is already loaded!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(826): Cannot find shader entry in material "%short"! Using error.vfx!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(869): Error creating shader %short for material %short!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(874): Error creating shader %short and cannot load error.vfx instead!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(914): Error creating fallback shader %short for %short for material %short! A fallback shader cannot fallback to signed char different shader!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(927): Error creating fallback shader %short for %short for material %short!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(931): Error creating fallback shader %short for %short and cannot load error.vfx instead!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(961): Error creating shader %short for material %short!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(966): Error creating shader %short and cannot load error.vfx instead!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material2.cpp(974): Error creating static combos for shader %short and error.vfx instead!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_command_buffer.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(1006): Could not bind constant buffer "%short" because the constant buffer handle was invalid in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(1022): Error setting constant for REGISTER_FLOAT4 for "%short" in material "%short"! Talk to signed char programmer!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(1084): Trying to set VFX_VARIABLE_TYPE_MATRIX_* but this isn'unsigned short supported yet! In material "%short"
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(1089): Bad VFX_VARIABlE type for VFX_VARIABLE_SOURCE_SET_BY_ARTIST %short in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(1305): Invalid data type for render state variable %short in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(1345): Invalid data type for render state variable %short in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(1430): Invalid data type for render state variable %short in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(1438): Invalid variable source type for render state variable %short in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(1533): Unsupported render state type in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(1615): Unsupported render state in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(1688): Unsupported sampler state type for "%short" in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(1710): Unsupported sampler state type for "%short" in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(264): Trying to set VFX_VARIABLE_TYPE_MATRIX_* but this isn'unsigned short supported yet! In material "%short"
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(269): Bad VFX_VARIABlE type for VFX_VARIABLE_SOURCE_SET_BY_ARTIST %short in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(324): Trying to set VFX_VARIABLE_TYPE_MATRIX_* but this isn'unsigned short supported yet! In material "%short"
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(329): Bad VFX_VARIABlE type for VFX_VARIABLE_SOURCE_SET_BY_ARTIST %short in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(38): Error! Unknown static combo source %double!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(406): Trying to set VFX_VARIABLE_TYPE_MATRIX_* but this isn'unsigned short supported yet! In material "%short"
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(411): Bad VFX_VARIABlE type for VFX_VARIABLE_SOURCE_SET_BY_ARTIST %short in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(707): Unknown variable type for %short in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(747): Invalid data type for render state variable %short in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(787): Invalid data type for render state variable %short in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(794): Error evaluating expression for render state variable %short in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(800): Invalid variable source type for render state variable %short in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(862): Unsupported render state type in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(874): Sampler index %double out of bounds for "%short" in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_shader_params.cpp(943): Unsupported sampler state type for "%short" in material "%short"!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_type_manager.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/material_type_manager.cpp(51): GetErrorMaterial() called before error material exists!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/materialsystem2.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/materialsystem2.cpp(127): ERROR! Empty shader mode string found! Use "Default" instead!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/materialsystem2.cpp(139): ERROR! Shader mode "%short" has unsupported type "%short" specified gameinfo.gi!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/materialsystem2.cpp(2152): pVfx == NULL!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/materialsystem2.cpp(2203): pVfx == NULL!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/materialsystem2.cpp(2467): Error reading index!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/materialsystem2.cpp(247): ERROR!!! Materials not released by other systems on shutdown! (See spew above)
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/materialsystem2.cpp(252): ERROR!!! Shaders not freed on shutdown, likely due to unreleased materials! (See spew above)
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/materialsystem2.cpp(266): GetErrorMaterial() called when m_pMaterialTypeManager == NULL!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/materialsystem2.cpp(591): ERROR!!! Shaders not freed before shader reload! (See spew above)
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/postprocessingsystem.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/textlayout/textlayout.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/materialsystem2/utils/materialsystem2utils.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/mathlib/mathlib_base.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/colorcorrectionparams.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/materialsystem2/imaterial2.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/ordered_constructor.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/rendersystem/indexdata.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/rendersystem/irenderdevice.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/rendersystem/vertexdata.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/resourcefile/introspectedtypemanager.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/resourcefile/resourcestream.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/resourcesystem/iresourcesystem.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/resourcesystem/resourcehandle.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/resourcesystem/resourcesystemhelpers.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/resourcesystem/stronghandle.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/resourcesystem/weakhandle.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/scenesystem/vertexformat.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/schemalib/schemaclassinfo.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/schemalib/schemadatatraversal.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/schemasystem/schema.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier0/threadtools.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier0/tslist.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/byteswap.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/fmtstr.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utlhash.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utllinkedlist.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utlntree.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utlqueue.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utlrbtree.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utlstackmachine.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/resourcefile/externalreferences.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/resourcefile/introspectedtypemanager.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/resourcefile/resourcefile.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/resourcefile/resourcestream.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemalib/schemadatatraversal.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemalib/schemaiterator.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/texturedictionary/texturedictionary.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/texturedictionary/texturedictionary.cpp(249): 
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/configvalue.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/convar.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/interface.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/keyvalues.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/lzmadecoder.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/mempool.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/strtools.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/strtools_unicode.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/utlbuffer.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/utlstackmachine.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/utlstring.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/utlsymbol.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier2/schemabindings.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier2/tier2.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier2/utlstreambuffer.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/compiletargetexpr.g
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(3001): Error! Ref count !=0 for static combo data cache entry!
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(6013): Error opening file %short
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(6072): VCS %short Unserialize failed
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(6086): VCS %short Unserialize hit EOF
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(6220): Error opening file %short
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_common.cpp(6227): Error calling SkipAndValidateVCSHeader() for %short
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_compile_helpers.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_compile_target_expr.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_compile_target_expr.cpp(105): : Failed to create lexer from "%short"
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_compile_target_expr.cpp(113): : Failed to create token stream from "%short"
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_compile_target_expr.cpp(121): : Failed to create parser from "%short"
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_compile_target_expr.cpp(97): : Failed to create input stream from "%short"
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_expression_parser.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/vfx/vfx_render_state.cpp
/error.vmat
/usr/lib/libSystem.B.dylib
/usr/lib/libc++.1.dylib
/usr/lib/libiconv.2.dylib
0 0@0
0123456789)"
0[A\A^A_]
0[A^]
29C |.
29K }
2fff.
333?B`
39N$t
49K }
49S |}
4[HcT
6[A\A^A_]
6~Lfffff.
8[A\A]A^A_]
8[A^A_]
8[A^]
9S |signed char
9S |unsigned int
: lexer error %double :
:9w$t
:tFL9
;2u6I
;C |*H
;C@uf
;FHu+
;HPur
;L9'u
;L97u
;W8}unsigned long long
;Y(uTI
;YHu`I
;Zhu!H
;[A^]
;ffffff.
<$L9?u
<$v9H
<<unknown_mod>>\
<DOWN>
<EOF>
<EOR>
<G})C
<IHct
<Unknown font>
<invalid>
<missing 
<no text for the token>
<unknown>
=	 ();,
>9W$t
>L97t-H
>LZMAt
>LZMAu
>[A^]
?0,/a,
?LZMA
?ffffff.
@$[A^]
@@@@@@@@@@@
@CThreadEvent::CThreadEvent(bool)
@CThreadEvent::Set()
@CThreadFastMutex::Lock(unsigned long long, unsigned int) volatile
@CThreadRWLock::LockForWrite()
@CThreadRWLock::UnlockWrite()
@CThreadRWLock::WaitForRead()
@CThreadSpinRWLock::LockForRead()
@CThreadSpinRWLock::SpinLockForWrite(unsigned long long)
@CThreadSpinRWLock::UnlockRead()
@CThreadSpinRWLock::UnlockWrite()
@CThreadSyncObject::~CThreadSyncObject()
@DevWarning(char const*, ...)
@E;'|
@IStack_Annotation::IStack_Annotation(CCallStackMarkerBase const&)
@IStack_Annotation::~IStack_Annotation()
@LoggingSystem_IsChannelEnabled(int, LoggingVerbosity_t)
@LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
@LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
@LoggingSystem_Log(int, LoggingSeverity_t, LoggingMetaData_t const*, Color, char const*, ...)
@LoggingSystem_Log(int, LoggingSeverity_t, LoggingMetaData_t const*, char const*, ...)
@SeriousWarning(int, char const*, ...)
@[A\A^A_]
@[A^]
@_AssertMsg_ConditionFailed
@_CFDictionaryCreate
@_CFNumberCreate
@_CFRelease
@_CFStringCreateWithCString
@_CGBitmapContextCreate
@_CGBitmapContextGetData
@_CGColorSpaceCreateDeviceRGB
@_CGColorSpaceRelease
@_CGContextClearRect
@_CGContextFlush
@_CGContextRelease
@_CGContextSetAllowsAntialiasing
@_CGContextSetLineWidth
@_CGContextSetRGBStrokeColor
@_CGContextSetShouldAntialias
@_CGContextSetTextDrawingMode
@_CGDataProviderCreateWithData
@_CGDataProviderRelease
@_CGFontCreateWithDataProvider
@_CGFontRelease
@_CMemAllocSystemInitialize
@_CTFontCreateWithFontDescriptor
@_CTFontCreateWithGraphicsFont
@_CTFontDescriptorCreateWithAttributes
@_CTFontDrawGlyphs
@_CTFontGetAdvancesForGlyphs
@_CTFontGetAscent
@_CTFontGetBoundingBox
@_CTFontGetBoundingRectsForGlyphs
@_CTFontGetDescent
@_CTFontGetGlyphsForCharacters
@_CommandLine
@_EarlyInit_Tier0
@_GetCPUInformation
@_HangWatchdogInternal_BeginScope
@_HangWatchdogInternal_EndScope
@_KeyValuesSystem
@_LOG_GENERAL
@_LoggingSystem_IsChannelEnabled
@_LoggingSystem_Log
@_LoggingSystem_RegisterLoggingChannel
@_MemZeroMemory
@_Plat_DebugString
@_Plat_ExitProcess
@_Plat_FloatTime
@_Plat_GetEnv
@_Plat_GetModuleFilename
@_Plat_GetModuleProcAddress
@_Plat_IsInDebugSession
@_Plat_LoadModule
@_Plat_LoadModuleRaw
@_Plat_RelativeTicks
@_Plat_ShouldCollectMiniDumpsForFatalErrors
@_RandomFloat
@_RegisterStringToken
@_ThreadGetCurrentId
@_ThreadInMainThread
@_ThreadInterlockedExchange64
@_ThreadSleep
@_Warning
@__DefaultRuneLocale
@__Unwind_Resume
@___bzero
@___cxa_atexit
@___cxa_begin_catch
@___cxa_call_unexpected
@___cxa_guard_abort
@___cxa_guard_acquire
@___cxa_guard_release
@___cxa_pure_virtual
@___gxx_personality_v0
@___maskrune
@___sincos_stret
@___sincosf_stret
@___stack_chk_fail
@___stack_chk_guard
@___stderrp
@___toupper
@__float128 short::*
@_atof
@_atoi
@_calloc
@_ceil
@_ceilf
@_cosf
@_dlclose
@_dlsym
@_exp2f
@_expf
@_floorf
@_fprintf
@_fputc
@_free
@_fwrite
@_g_Tier1_CRC32Table
@_g_pMemAlloc
@_getcwd
@_iconv
@_iconv_close
@_iconv_open
@_kCFTypeDictionaryKeyCallBacks
@_kCFTypeDictionaryValueCallBacks
@_kCTFontNameAttribute
@_kCTFontSlantTrait
@_kCTFontTraitsAttribute
@_kCTFontWeightTrait
@_log10f
@_log2f
@_logf
@_malloc
@_memchr
@_memcmp
@_memcpy
@_memmove
@_memset
@_memset_pattern16
@_modff
@_pow
@_powf
@_printf
@_pthread_mutex_destroy
@_pthread_mutex_init
@_pthread_mutex_lock
@_pthread_mutex_unlock
@_pthread_mutexattr_init
@_pthread_mutexattr_settype
@_qsort
@_raise
@_realloc
@_setlocale
@_sinf
@_sprintf
@_sscanf
@_strchr
@_strcmp
@_strcpy
@_strcspn
@_strdup
@_strlen
@_strncat
@_strncmp
@_strspn
@_strstr
@_strtod
@_strtol
@_strtoll
@_strtoul
@_vsnprintf
@_wcstol
@dyld_stub_binder
@hkS 
@hkS@4
@loader_path
@r<Mc
@rpath/libmaterialsystem2.dylib
@rpath/libtier0.dylib
@rpath/libvstdlib.dylib
@std::terminate()
@typeinfo for IStack_Annotation
@typeinfo for std::bad_alloc
@vtable for __cxxabiv1::__class_type_info
@vtable for __cxxabiv1::__si_class_type_info
@vtable for __cxxabiv1::__vmi_class_type_info
A+D$$H
A+D$$Hc
A+D$$I
A+D$$Lc
A+D$,H
A+D$,Lc
A+E$H
A+E$Hc
A+E$Lc
A+E$M
A+F$Hc
A+F$Lc
A+F,H
A+G$H
A+G$Hc
A+G$Lc
A+G(~
A+G(~!A
A+G,H
A+L$$Hc
A+M$Hc
A+N )
A+N$Hc
A+O$Hc
A+u(~[I
A+void@~
A+void`~.M
A+w8~
A94$t5
A9Epw4A
A9F ~
A9F<r	L!
A9O,~
A9V |fA
A9V }	
A9V }	A
A9W }
A9\$,L
A9\$,~
A9^,~
A9^8w*H
A9_,D
A9_,~
A9_8w*H
A;F(u]M
A;G ~
A;G,H
A;G4H
A;O ~
A;\$@|
A;\$`u I
A;]Xu
A;]long long|
A;^@|
A;^H|
A;^`u
A;_H|
A;t$Xu.I
A;w$H
ABGR8888
ANTLR3_EXCEPTION number %double (%08X).
ANTLR3_EXCEPTION: %short
APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %double!
ARBRAp
ARB]AR0x`
ARGB8888
ASARBSAXBRB`
ASARBSAXBSARBSAXBRB`
ATBRAp
ATBRBRBRAp
ATI1N
ATI2N
ATI_DST16
ATI_DST24
AWAVATS
AWAVATSA
AWAVATSH
AWAVATSI
AWAVATSL
AWAVATSM
AWAVAUATS
AWAVAUATSA
AWAVAUATSH
AWAVAUATSI
AWAVAUATSL
AWAVAUATSP
AWAVAUATSPA
AWAVAUATSPD
AWAVAUATSPE
AWAVAUATSPH
AWAVAUATSPI
AWAVAUATSPL
AWAVAUATSPM
AWAVS1
AWAVSH
AWAVSP
AWAVSPA
AWAVSPH
AWAVSPI
AWAVSPL
AWAVSPM
AZBSBp
A[ATAp
A]ATAp
Actually dude, we didn'unsigned short seem to be expecting anything here, or at least
All Bad! Talk to Brian and Alex. g_pRenderHardwareConfig is NULL which means we won'unsigned short load this material correctly: %short
All bad! The error material failed in dynamic shader compile!
All bad! The error shader failed in dynamic shader compile!
All static combo permutations currently loaded:
All static combos set to zero
Allow
Allow%double
Allow%double( 
AnimationSystemUtils_001
AnimationSystem_001
Apple Symbols
Arial
Arial Unicode MS
Assert on shader used based on substring of shader name
Assertion Failed in function %short():
AssetBrowserSystem_001
AssetPreviewSystem_001
AssetSystem001
AssetSystemTest001
Attribute expression evaluation failed
Attribute-based texture %short not bound for material "%short"!
Attribute-based texture %short not bound for material "%short"! Missing render attribute "%short"
BGR565
BGR888
BGR888_BLUESCREEN
BGRA1010102
BGRA4444
BGRA5551
BGRA8888
BGRA8888_LINEAR
BGRX5551
BGRX8888
BGRX8888_LINEAR
BLOOM_BLEND_ADD
BLOOM_BLEND_BLUR
BLOOM_BLEND_SCREEN
BRBRAp
BRB`BATAp
BSATAp
Bad VFX_VARIABLE type for %short in material "%short"!
Bad VFX_VARIABLE type for VFX_VARIABLE_SOURCE_ATTRIBUTE %short Source( %short )! In material "%short"
BakedLODBuilderMgr001
Base recognizer function 'alreadyParsedRule' called by unknown parser type - provide override for this function
Base recognizer function 'consumeUntil' called by unknown parser type - provide override for this function
Base recognizer function 'consumeUntilSet' called by unknown parser type - provide override for this function
Base recognizer function 'match' called by unknown parser type - provide override for this function
Base recognizer function 'matchAny' called by unknown parser type - provide override for this function
Base recognizer function 'mismatch' called by unknown parser type - provide override for this function
Base recognizer function 'synPred' called by unknown parser type - provide override for this function
Base recognizer function antlr3RecognitionExceptionNew called by unknown parser type - provide override for this function
Base recognizer function consumeUntilSet called by unknown parser type - provide override for this function
Base recognizer function displayRecognitionError called by unknown parser type - provide override for this function
Base recognizer function recover called by unknown parser type - provide override for this function
Base recognizer function recoverFromMismatchedSet called by unknown parser type - provide override for this function
Base recognizer function recoverFromMismatchedToken called by unknown parser type - provide override for this function
BenchmarkService001
BinaryProperties_GetValue
BindTextureToFile: Invalid texture id %double
BindTextureToFile: Invalid texture id for file %short
BindTextureToTextureHandle: Invalid texture id %double
BloomBlendMode_t
BuiltDebug
C [A\A^A_]
C [A^]
C+D=0~.D
C+unsigned short=@~(K
C0[A^]
CAtomicManipulator<CResourceArray<CResourceString> >
CAtomicManipulator<CResourceArray<Color> >
CAtomicManipulator<CResourceArray<MaterialParamBuffer_t> >
CAtomicManipulator<CResourceArray<MaterialParamFloat_t> >
CAtomicManipulator<CResourceArray<MaterialParamInt_t> >
CAtomicManipulator<CResourceArray<MaterialParamString_t> >
CAtomicManipulator<CResourceArray<MaterialParamTexture_t> >
CAtomicManipulator<CResourceArray<MaterialParamVector_t> >
CAtomicManipulator<CResourceArray<unsigned char> >
CAtomicManipulator<CResourceExtReference<CWeakHandle<InfoForResourceTypeCTextureBase> > >
CAtomicManipulator<CResourceString>
CAtomicManipulator<CWeakHandle<InfoForResourceTypeCTextureBase> >
CAtomicManipulator<Color>
CAtomicManipulator<Vector2D>
CAtomicManipulator<Vector4D>
CAtomicManipulator<Vector>
CBaseAppSystem<IFontManager>
CBaseAppSystem<IMaterialSystem2>
CBaseAppSystem<IMaterialSystem2Utils>
CBaseAppSystem<IPostProcessingSystem>
CBaseAppSystem<ITextLayout>
CBaseIntrospectedTypeManager
CBaseIntrospectedTypeManager:  Bindings don'unsigned short match.
CBaseIntrospectedTypeManager:  Missing TYPEMETA MDiskDataForResourceType
CBaseQueuedRenderable
CBitmapFont
CBitmapFont *CFontManager::CreateOrFindBitmapFont(const char *, float, float, int)
CBitmapFont::Create
CClassVisitInfo *CSchemaVisitorInfoMapBase::LookupClass(ClassIntrospectionHandle_t)
CCommand::Tokenize: Encountered command which overflows the argument buffer.. Clamped!
CCommand::Tokenize: Encountered command which overflows the tokenizer buffer.. Skipping!
CCompileTargetExprOpCodeHandler
CCompileTargetExprStackMachineBuilder
CDefaultAccessor
CDefaultIntrospectedTypeManager<1952542070ull, MaterialResourceData_t>
CDefaultIntrospectedTypeManager<500069000822ull, VBitmapFontDiskData_t>
CEmptyConVar
CExtrefTraversal
CFmtStrN<256, false>
CFmtStrN<256, false>::CFmtStrN(const char *, ...) [SIZE_BUF = 256, QUIET_TRUNCATION = false]
CFontBase
CFontBase *CFontAmalgam::GetFontForChar(uchar32, bool)
CFontBase *CFontManager::GetFontForChar(FontHandle_t, uchar32)
CFontManager
CFunctorData
CFunctorData0
CHC;D5
CIndexDataBase<unsigned short>::~CIndexDataBase() [T = unsigned short]
CIntOpEvaluator
CLineBatchLayoutInfo
CLineLayoutInfo
CMatSystemTexture::SetMaterial
CMaterial2
CMaterialLayer
CMaterialLayer::CommandBufferInfo_t CMaterialLayer::CreateCommandBuffer(VfxProgram_t, uint64)
CMaterialMode
CMaterialSystem2
CMaterialSystem2Utils
CMaterialSystem2Utils::DrawNDCSpaceUntexturedPolygon GetMode == NULL? Can'unsigned short Render
CMaterialSystem2Utils::DrawScreenSpaceRectangle GetMode == NULL? Can'unsigned short Render
CMaterialSystem2Utils::RenderAxes GetMode == NULL? Can'unsigned short Render
CMaterialSystem2Utils::RenderBoxInternal GetMode == NULL? Can'unsigned short Render
CMaterialSystem2Utils::RenderLine GetMode == NULL? Can'unsigned short Render
CMaterialSystem2Utils::RenderQuad GetMode == NULL? Can'unsigned short Render
CMaterialSystem2Utils::RenderSphereInternal GetMode == NULL? Can'unsigned short Render
CMaterialSystem2Utils::RenderTriangleInternal GetMode == NULL? Can'unsigned short Render
CMaterialSystem2Utils::RenderWireframeBox GetMode == NULL? Can'unsigned short Render
CMaterialSystem2Utils::RenderWireframeSphere GetMode == NULL? Can'unsigned short Render
CMaterialSystem2Utils::RenderWireframeSweptBox GetMode == NULL? Can'unsigned short Render
CMaterialSystem2Utils::ViewportLayoutList_t &CMaterialSystem2Utils::GetLayoutList(CUtlStringToken)
CMaterialTypeManager
CMeshLayoutInfo
CNullShaderCreateCallbacks
COLORCORRECTION_VERSION_1
COMMENT
COMMON
CPlatformFont *CFontManager::CreateOrFindPlatformFont(const char *, int, int, int, int, int, CUtlVector<SFontDescription> *)
CPlatformFontcomplex 
CPostConnectCallback
CPostProcessingResource *CPostProcessingSystem::CreatePostProcessingSettings(PostProcessingResource_t *)
CPostProcessingSystem
CPostProcessingTypeManager
CPrimitivesLayoutInfo
CQueuedTextRenderable
CRefCountServiceBase<true, CRefMT>
CRefCounted1<CFunctorData, CRefCountServiceBase<true, CRefMT> >
CReferenceCleanupTraversal
CResourceAllocatorUtils
CResourceArray
CResourceExtReference
CResourceReferenceFixupTraversal
CResourceStream
CResourceStreamFixed
CResourceStreamFixed: trying to write past the end of allocated memory (new commit %u, allocated %u)
CResourceString
CSchemaClassBinding<MaterialParamBuffer_t>
CSchemaClassBinding<MaterialParamFloat_t>
CSchemaClassBinding<MaterialParamInt_t>
CSchemaClassBinding<MaterialParamString_t>
CSchemaClassBinding<MaterialParamTexture_t>
CSchemaClassBinding<MaterialParamVector_t>
CSchemaClassBinding<MaterialParam_t>
CSchemaClassBinding<MaterialResourceData_t>
CSchemaClassBinding<PostProcessingBloomParameters_t>
CSchemaClassBinding<PostProcessingResource_t>
CSchemaClassBinding<PostProcessingTonemapParameters_t>
CSchemaClassBinding<PostProcessingVignetteParameters_t>
CSchemaClassBinding<VBitmapFontDiskData_t>
CSchemaClassBindingBase
CSchemaEnumBinding<BloomBlendMode_t>
CSchemaEnumBinding<HorizJustification_e>
CSchemaEnumBinding<LayoutPositionType_e>
CSchemaEnumBinding<VertJustification_e>
CSchemaEnumBindingBase
CSchemaFieldVisitor
CSchemaFieldVisitorInfoMap<CExtrefTraversal>
CSchemaInstallCallback
CSchemaManipulator<CResourceArray<CResourceString> >
CSchemaManipulator<CResourceArray<Color> >
CSchemaManipulator<CResourceArray<MaterialParamBuffer_t> >
CSchemaManipulator<CResourceArray<MaterialParamFloat_t> >
CSchemaManipulator<CResourceArray<MaterialParamInt_t> >
CSchemaManipulator<CResourceArray<MaterialParamString_t> >
CSchemaManipulator<CResourceArray<MaterialParamTexture_t> >
CSchemaManipulator<CResourceArray<MaterialParamVector_t> >
CSchemaManipulator<CResourceArray<unsigned char> >
CSchemaManipulator<CResourceExtReference<CWeakHandle<InfoForResourceTypeCTextureBase> > >
CSchemaManipulator<CResourceString>
CSchemaManipulator<CWeakHandle<InfoForResourceTypeCTextureBase> >
CSchemaManipulator<Color>
CSchemaManipulator<Vector2D>
CSchemaManipulator<Vector4D>
CSchemaManipulator<Vector>
CSchemaRegistration
CSchemaRegistration_materialsystem2
CSchemaVisitorBase
CSchemaVisitorInfoMapBase
CSchemaWeakHandleInspectionManipulator<InfoForResourceTypeCTextureBase>
CShaderCreateCallbacks
CStackAnnotation<CSchemaClassField const*, bool, void, void, void, void, void, void, void>
CSysModule *Sys_LoadModule(const char *)
CTSListBase: Misaligned list
CTSListBase::CTSListBase()
CTSQueue: Misaligned queue
CTSQueue<DynamicShaderCompileTask_t, false>::CTSQueue() [T = DynamicShaderCompileTask_t, bTestOptimizer = false]
CTSQueue<DynamicShaderCompileTask_t, false>::~CTSQueue() [T = DynamicShaderCompileTask_t, bTestOptimizer = false]
CTextLayout
CTextureDictionary
CTextureDictionary::BindTextureToFile
CTextureDictionary::GetTextureSize()
CTextureDictionary::GetTextureSize() blocking load
CTextureDictionary::GetTextureSize() failed to finish streaming "%short" for size information. %short %short %short
CTextureDictionary::GetTextureSize() texture "%short" has no handles to load. And therefore no size
CTextureDictionary::LoadDeferredIdNOW()
CTextureDictionary::LoadDeferredIdNOW() blocking load of "%short"
CTextureDictionary::LoadDeferredIdNOW() needs signed char pass to make it work outside the main thread.
CTextureDictionary::ProcessDeferredResourceLoading()
CTextureDictionary::ProcessDeferredResourceLoading() must be run from the main thread
CThreadEvent::CThreadEvent(bool)
CThreadEvent::Set()
CThreadFastMutex::Lock(unsigned long long, unsigned int) volatile
CThreadRWLock::LockForWrite()
CThreadRWLock::UnlockWrite()
CThreadRWLock::WaitForRead()
CThreadSpinRWLock::CThreadSpinRWLock()
CThreadSpinRWLock::LockForRead()
CThreadSpinRWLock::SpinLockForWrite(unsigned long long)
CThreadSpinRWLock::UnlockRead()
CThreadSpinRWLock::UnlockWrite()
CThreadSyncObject::~CThreadSyncObject()
CTier0AppSystem<IFontManager>
CTier0AppSystem<IMaterialSystem2>
CTier0AppSystem<IMaterialSystem2Utils>
CTier0AppSystem<IPostProcessingSystem>
CTier0AppSystem<ITextLayout>
CTier1AppSystem<IFontManager, 0>
CTier1AppSystem<IMaterialSystem2, 0>
CTier1AppSystem<IMaterialSystem2Utils, 0>
CTier1AppSystem<IPostProcessingSystem, 0>
CTier1AppSystem<ITextLayout, 0>
CTier2AppSystem<IFontManager, 0>
CTier2AppSystem<IMaterialSystem2, 0>
CTier2AppSystem<IMaterialSystem2Utils, 0>
CTier2AppSystem<IPostProcessingSystem, 0>
CTier2AppSystem<ITextLayout, 0>
CUtlBuffer::CUtlBuffer(const void *, int, int)
CUtlBuffer::CUtlBuffer(int, int, int)
CUtlBuffer::VaPrintf: String overflowed buffer [%llu]
CUtlCharConversion
CUtlCharConversion::CUtlCharConversion(char, const char *, int, CUtlCharConversion::ConversionArray_t *)
CUtlLinkedList overflow! (exhausted index range)
CUtlLinkedList overflow! (exhausted memory allocator)
CUtlMemoryPoolBase: Cannot specify 0 elements to grow each time!
CUtlMemoryPoolBase::CUtlMemoryPoolBase(int, int, int, MemoryPoolGrowType_t, const char *)
CUtlMemoryPoolBase::FreeList_t *CUtlMemoryPoolBase::AddNewBlob()
CUtlNTree overflow!
CUtlRenderShaderBuffer
CUtlStackMachineBuilder
CUtlStreamBuffer does not support TEXT_BUFFER'short use CUtlBuffer
CUtlStreamBuffer::CUtlStreamBuffer(const char *, const char *, int, bool, int, int)
CUtlStreamBuffer::Close() Unable to open file %short!
CUtlStreamBuffer::Close() Write %short failed %double != %d.
CUtlString::SetDirect does not support resizing strings in place.
CUtlSymbol CUtlSymbolTable::AddString(const char *)
CVFontTypeManager
CVertexDataBase - No storage!
CVertexDataBase - Tried to advance past the last vertex (%double)
CVertexDataBase<MaterialSystem2UtilsVertex_t>::~CVertexDataBase() [T = MaterialSystem2UtilsVertex_t]
CVertexDataBase<VertexColorUVPos_t>::~CVertexDataBase() [T = VertexColorUVPos_t]
CVertexDataBase<VertexUVPosColorNormalAndTangent_t>::~CVertexDataBase() [T = VertexUVPosColorNormalAndTangent_t]
CVfxConstructor
CWeakHandle
CXF948
Cannot determine resource type for handle '%short' - schema data not loaded for the referred-to type?
ChildOf
ChildOf( 
ClassIntrospectionHandle_t FindDiskDataClassForResourceType(ResourceType_t)
Clears the shader cache used for dynamic shader compile.
CmdLinkAH
Color
Compile Target Expression
Compile Targets
CompileTH
CompileTargets
Compiling 
ConCommand
ConCommandBase
ConVar
ConVar(%short) defined with infinite float value (%short)
ConfigurationSystem_001
Constant %s.
Constant %short is marked dynamic in the .vmat file.
Count
Courier
Courier New
CreateInterface
Custom font '%short' is already registered, ignoring new registration '%short' range %double - %double
Custom font file '%short' ignored because no font name was given
D  HiU
D$%	A
D$'!A
D$PE1
D$PIc
D.@C;D,@K
D1(IcG
D15S1
D16_SHADOW
D24FS8
D24S8
D24X4S4
D24X8
D24X8_SHADOW
D3D Semantic Name: "%short"
D90tnI
D9XJc
D9XJcL
D9`,~
D9k,~
D9s,~
D9sXu
D;0u<H
D;char u
D;sHu
D;{Hu
D;|2(u2I
D=`fD
D=`fE
DATAL
DXT1_ONEBITALPHA
DXT5_NM
D_FADE_COLOR
DebugTextureInfo001
Default
DefaultFontAliasGroup
Deferred
DependencyClass::m_pDependencyLL == NULL
DescriptH
Description
Dev Shader
DevShadeH
DevShader
DevWarning(char const*, ...)
Domain Shader
DotaCardGameClient_001
Dynamic )
Dynamic Combos should be assumed to be unique for dynamic shader compile!
Dynamic combos:
DynamicCombo
DynamicComboFromFeature
DynamicComboRule
E+|$$
E9e8w*H
E9g,~
E9n8wiH
E9u8w*H
E9w8w*H
E;4$|
E;__int128 ~0
E;ep|
E;gTH
E;t$H|
E;uPu$I
E;unsigned __int128(u-H
E;}8|
E@;C@u8A
ED;CDu/A
EH;CHu&A
EL;CLu
EMaterialReloaded
EPF9| 
ERROR!
ERROR! Renderable pass data is being used across frame boundaries! Renderable pass has frame count %u. Current frame count is %u.
ERROR: CAtomicManipulator::Allocate() Cannot allocate CResourceArray
ERROR: CAtomicManipulator::AllocateAndCopy() Cannot allocate CResourceArray
ERROR: CAtomicManipulator::Copy() Cannot copy CResourceArray(FIXME: maybe you can?)
ERROR: CAtomicManipulator::Deallocate() Cannot deallocate CResourceArray
ERROR: Could not find schema data for helper class for resource type %lld '%short'. (Missing MDiskDataForResourceType metadata or schema data isn'unsigned short loaded?)
ERROR: Multiple classes registered as disk data for resource type %lld '%short'. (Should only have one class MDiskDataForResourceType - %double listed above.)
ERROR: Problem allocating permanent data for resource in file '%short'. See above for reason(short)
ERROR: Resource name "%short" has the incorrect extension "%short" for the specified resource type (expected "%short")!
ESC_SEQ
EShadersUnloaded
Early exit
EconItemToolModel_001
Encountered ConCommand '%short' without signed char callback!
Encountered too many releases for resource "%short"
EngineServiceMgr001
EnvironmentMapBuilder_001
Error Calling VfxEvalExpression() for %short in material "%short"
Error Calling VfxEvalTextureExpression() for %short in material "%short"
Error decompressing static combo data
Error in CharToGlyph of 0x%long long in %short (symbol %double)
Error loading resource "%short" (Invalid resource version: %double != %double)
Error loading static combo data from VCS file!
Error parsing supported compile targets from vfx file "%short"
Error reading default value from variable description
Error resolving symbol "%short"
Error! Cannot find GAME\%short file in current search paths! If this is signed char new shader, you must run vfxcompile.exe at least once, and then reload shaders.
EventSystem001
Example: mat_assert_on_shader_use error.vfx - Assert when the error shader is used
Expecting compressed combo data
Extraneous token
F A;^
F$fffff.
F@;G@u!
FEATURES
FIXME!
Failed to Allocate signed char Dynamic Index Buffer of size %u
Failed to Allocate signed char Dynamic Vertex Buffer of size %u
Failed to allocate CUtlMemoryPoolBase blob of size %double ('%short' blob count = %double)
Failed to call CBaseIntrospectedTypeManager::Init
Failed to call CBaseIntrospectedTypeManager::SetDiskDataBinding
Failed to fix resource reference '%short' (%short)- ID = %016llX, Expected in: '%short'
Failed to load font file '%short'
Failed to parse custom font file '%short'
Feature
FeatureRule
Features
FieldIntrospectionHandle_t CSchemaFieldIterator::GetRawFieldHandle() const
File has not been opened!
Find signed char graphics programmer! Trying to bind signed char "%short" shader that doesn'unsigned short exist for %short!
FindLookup( pName ) == NULL
FixupResourceName: Illegal full path passed in ("%short")!
FixupResourceName: Illegal path, missing extension passed in ("%short")!
FlattenedSerializersVersion001
FmtStrVSNPrintf truncated to %double without QUIET_TRUNCATION specified! String: "%short"
FmtStrVSNPrintf truncated without QUIET_TRUNCATION specified!
Font ranges used but not supported
FontAliasList_t *CFontManager::CreateOrFindFontAliasList(const char *)
FontAlias_t *CFontManager::AddFontAlias(const char *, const char *, const char *, FontHandle_t, bool, int, int)
FontManager_001
From Class Binding
From Enum Binding
Fx@uQH
G0[A\A^A_]
G8H	p(]
GAMEROOT
GP;FP
GXD;unsigned short
GameResourceServiceClientV001
GameResourceServiceServerV001
GameStartup
GameUIService_001
Geometry Shader
Gfff.
Glyph Miss: FontHandle_t:0x%8.8llx (%short), %short
H	p(]
H	wchar_t(]
H!wchar_t(]
H;A(usH
H;A(uuH
H=vmat
H=vtex
HBitmapFont
HEADER
HEX_DIGIT
HMaterial
HORIZ_JUSTIFICATION_CENTER
HORIZ_JUSTIFICATION_LEFT
HORIZ_JUSTIFICATION_NONE
HORIZ_JUSTIFICATION_RIGHT
HPostProcessing
HRenderTexture CBitmapFont::GetTexturePage()
HRenderTexture CVfxParam::GetDynamicTextureHandle(const CRenderAttributes *, const CRenderAttributes *, const CUtlAttributeList<const CVfxParam *> *) const
HRenderTexture GetVariableTextureValue(const CMaterialLayer *, const CVfxPerLayerProgramData *, const CRenderAttributes *, IRenderContext *, const CVfxVariableDescription *, const CMaterialParam *, RenderTextureDimension_t, int *)
H[A\A]A^A_]
H[A^A_]
H__ZdaPv
H__ZdlPv
H__Znam
H__Znwm
HammerMapLoader001
Hc@0]
Hc@@H
HcA L
HcF(H
HcF0H
HcJ(H
HcJ0H
HcK,H
HcKHHk
HcKPH9
HcK`H
HcP H
HcP(H
HcP0H
HcW unsigned short
HcW@unsigned short	;WX
HelpSystem_001
Helvetica
HorizJustification_e
HostStateMgr001
Hull Shader
I CUtlLinkedList<CMatSystemTexture, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMatSystemTexture, unsigned short>, unsigned short> >::AllocInternal(bool) [T = CMatSystemTexture, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CMatSystemTexture, unsigned short>, unsigned short>]
I CUtlNTree<CTexturePacker::TreeEntry_t, int>::AllocInternal() [T = CTexturePacker::TreeEntry_t, I = int]
I CUtlNTree<CTexturePacker::TreeEntry_t, int>::FirstChild(I) const [T = CTexturePacker::TreeEntry_t, I = int]
I CUtlNTree<CTexturePacker::TreeEntry_t, int>::NextSibling(I) const [T = CTexturePacker::TreeEntry_t, I = int]
I CUtlNTree<CTexturePacker::TreeEntry_t, int>::Parent(I) const [T = CTexturePacker::TreeEntry_t, I = int]
I CUtlRBTree<CFontTextureCache::CacheEntry_t, unsigned short, bool (*)(const CFontTextureCache::CacheEntry_t &, const CFontTextureCache::CacheEntry_t &), CUtlMemory<UtlRBTreeNode_t<CFontTextureCache::CacheEntry_t, unsigned short>, unsigned short> >::Find(const T &) const [T = CFontTextureCache::CacheEntry_t, I = unsigned short, L = bool (*)(const CFontTextureCache::CacheEntry_t &, const CFontTextureCache::CacheEntry_t &), M = CUtlMemory<UtlRBTreeNode_t<CFontTextureCache::CacheEntry_t, unsigned short>, unsigned short>]
I CUtlRBTree<CFontTextureCache::CacheEntry_t, unsigned short, bool (*)(const CFontTextureCache::CacheEntry_t &, const CFontTextureCache::CacheEntry_t &), CUtlMemory<UtlRBTreeNode_t<CFontTextureCache::CacheEntry_t, unsigned short>, unsigned short> >::Insert(const T &, ERBTreeInsertBehavior) [T = CFontTextureCache::CacheEntry_t, I = unsigned short, L = bool (*)(const CFontTextureCache::CacheEntry_t &, const CFontTextureCache::CacheEntry_t &), M = CUtlMemory<UtlRBTreeNode_t<CFontTextureCache::CacheEntry_t, unsigned short>, unsigned short>]
I CUtlRBTree<CFontTextureCache::CacheEntry_t, unsigned short, bool (*)(const CFontTextureCache::CacheEntry_t &, const CFontTextureCache::CacheEntry_t &), CUtlMemory<UtlRBTreeNode_t<CFontTextureCache::CacheEntry_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CFontTextureCache::CacheEntry_t, I = unsigned short, L = bool (*)(const CFontTextureCache::CacheEntry_t &, const CFontTextureCache::CacheEntry_t &), M = CUtlMemory<UtlRBTreeNode_t<CFontTextureCache::CacheEntry_t, unsigned short>, unsigned short>]
I CUtlRBTree<CPlatformFont::abc_cache_t, unsigned short, bool (*)(const CPlatformFont::abc_cache_t &, const CPlatformFont::abc_cache_t &), CUtlMemory<UtlRBTreeNode_t<CPlatformFont::abc_cache_t, unsigned short>, unsigned short> >::Find(const T &) const [T = CPlatformFont::abc_cache_t, I = unsigned short, L = bool (*)(const CPlatformFont::abc_cache_t &, const CPlatformFont::abc_cache_t &), M = CUtlMemory<UtlRBTreeNode_t<CPlatformFont::abc_cache_t, unsigned short>, unsigned short>]
I CUtlRBTree<CPlatformFont::abc_cache_t, unsigned short, bool (*)(const CPlatformFont::abc_cache_t &, const CPlatformFont::abc_cache_t &), CUtlMemory<UtlRBTreeNode_t<CPlatformFont::abc_cache_t, unsigned short>, unsigned short> >::Insert(const T &, ERBTreeInsertBehavior) [T = CPlatformFont::abc_cache_t, I = unsigned short, L = bool (*)(const CPlatformFont::abc_cache_t &, const CPlatformFont::abc_cache_t &), M = CUtlMemory<UtlRBTreeNode_t<CPlatformFont::abc_cache_t, unsigned short>, unsigned short>]
I CUtlRBTree<CPlatformFont::abc_cache_t, unsigned short, bool (*)(const CPlatformFont::abc_cache_t &, const CPlatformFont::abc_cache_t &), CUtlMemory<UtlRBTreeNode_t<CPlatformFont::abc_cache_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CPlatformFont::abc_cache_t, I = unsigned short, L = bool (*)(const CPlatformFont::abc_cache_t &, const CPlatformFont::abc_cache_t &), M = CUtlMemory<UtlRBTreeNode_t<CPlatformFont::abc_cache_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, int, CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, int>, int> >::Find(const T &) const [T = CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, I = int, L = CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, int, CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, int>, int> >::Insert(const T &, ERBTreeInsertBehavior) [T = CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, I = int, L = CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, int, CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, I = int, L = CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, unsigned short, CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, unsigned short>, unsigned short> >::Find(const T &) const [T = CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, I = unsigned short, L = CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, unsigned short, CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, unsigned short>, unsigned short> >::Insert(const T &, ERBTreeInsertBehavior) [T = CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, I = unsigned short, L = CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, unsigned short, CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, I = unsigned short, L = CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::Find(const T &) const [T = CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::Insert(const T &, ERBTreeInsertBehavior) [T = CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int, CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int> >::Find(const T &) const [T = CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = int, L = CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int, CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int> >::Insert(const T &, ERBTreeInsertBehavior) [T = CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = int, L = CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int, CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = int, L = CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, int, CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, int>, int> >::Find(const T &) const [T = CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, I = int, L = CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, int, CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, int>, int> >::Insert(const T &, ERBTreeInsertBehavior) [T = CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, I = int, L = CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, int, CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, I = int, L = CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, int>, int>]
I CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(const T &, ERBTreeInsertBehavior) [T = CUtlSymbolTable::CStringPoolIndex, I = unsigned short, L = CUtlSymbolTable::CLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlSymbolTable::CStringPoolIndex, I = unsigned short, L = CUtlSymbolTable::CLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t *, long long, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t *, long long>, long long> >::Insert(const T &, ERBTreeInsertBehavior) [T = CUtlSymbolTableLargeBaseTreeEntry_t *, I = long long, L = CTreeEntryLess<CNonThreadsafeTree<false>, false>, M = CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t *, long long>, long long>]
I CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t *, long long, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t *, long long>, long long> >::NewNode(const T *) [T = CUtlSymbolTableLargeBaseTreeEntry_t *, I = long long, L = CTreeEntryLess<CNonThreadsafeTree<false>, false>, M = CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t *, long long>, long long>]
I could not work out what I was expecting, like so many of us these days!
I;3t1H9
IAppSystem
IAtomicManipulator
IConCommandBaseAccessor
IConVar
IFontManager
IMaterial2complex 
IMaterialLayer
IMaterialMode
IMaterialMode *CMaterial2::GetMode(int) const
IMaterialSystem2
IMaterialSystem2Utils
IOpCodeHandler<int>
IOpEvaluator<int>
IPostProcessingSystem
IQueuedRenderable
IQuickTime001
IRefCounted
IRenderShaderBuffer
IResourceAllocatorUtils
IResourceTypeManager
IRuntimeShaderCreateCallbacks
IS_SM_
ISchemaBinding
ISchemaInspectionManipulator
ISchemaManipulator
ISchemaSearchTester<CSchemaClassInfo const*>
IStack_Annotation::IStack_Annotation(CCallStackMarkerBase const&)
IStack_Annotation::~IStack_Annotation()
ITSHashConstructor<CVfx*>
ITextLayout
ITextureDictionary
IcE8L
IcEPL
IcF,H
IcG@L
IcGHL
IcO H
IcO8H
IcO@H
IcOHH
IcOPH
IcOXH
IcU H
IcU0L
Ic]HH
Ic_ H
ImageFmtH
InfoForResourceTypeCTextureBase
InputService_001
InputStackSystemVersion001
InputSystemVersion001
InstallSchemaBindings
Intentionally vague touch behavior for %p
InvTextureDim
InvViewportSize
Invalid shader attribute type
IsInList(before)
IsInTree(elem)
IsInTree(int)
IsLeftChild( nodeIndex, leftChildIndex )
IsPowerOfTwo( m_nAlignment )
IsRelevantFieldType( pFieldType )
IsResourceWeakHandle( pHandleType )
IsRightChild( nodeIndex, rightChildIndex )
IsValid( it )
IsValid()
IsValid() && uniChar >= 0 && uniChar <= 255
IsValidIndex(elem)
IsValidIndex(elem) && IndexInRange( elem )
K9t&Xu
KDC;L5
KcD%@H
KcL#H
KeyValueCache001
KeyValues *KeyValues::FindKey(HKeySymbol) const
KeyValues *KeyValues::FindKey(const char *, bool)
KeyValues *KeyValues::GetFirstValue()
KeyValues *KeyValues::GetNextValue()
KeyValues::FindKey called on NULL pointer!
L$$E1
L$PHc
L0(JcT
L00JcT
L90t*H
L>CDefaultIntrospectedTypeManager<500152889462ull, PostProcessingResource_t>
LAYOUTPOSITIONTYPE_FRACTIONAL
LAYOUTPOSITIONTYPE_NONE
LAYOUTPOSITIONTYPE_VIEWPORT_RELATIVE
LE_BGRA8888
LE_BGRX8888
LINEAR_ABGR8888
LINEAR_ARGB8888
LINEAR_BGR888
LINEAR_BGRA8888
LINEAR_BGRX5551
LINEAR_BGRX8888
LINEAR_D24S8
LINEAR_I8
LINEAR_RGB888
LINEAR_RGBA16161616
LINEAR_RGBA8888
LayoutPositionType_e
LcsPD
Lexer encountered %int errors parsing compile targets expression "%short"
Lfff.
LightingBuilderMgr001
Line: 
Localize_001
LoggingSystem_IsChannelEnabled(int, LoggingVerbosity_t)
LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
LoggingSystem_Log(int, LoggingSeverity_t, LoggingMetaData_t const*, Color, char const*, ...)
LoggingSystem_Log(int, LoggingSeverity_t, LoggingMetaData_t const*, char const*, ...)
Lucida Console
Lucida Grande
MATCHFRAMEWORK_001
MD5 match on %short, loading from vcs
MD5 mismatch on %short, will load from vfx instead.
MDiskDataForResourceType
MDiskDataForResourceType::CValueSearchTester_ClassIntrospectionHandle_t
MNoScatter
MODEL_PROCESSING_SERVICES_INTERFACE_001
MODES
MPD94
MResourceTypeForInfoType
MResourceVersion
MapListService_001
Marlett
MatUtilsRenderMesh
MatUtilsRenderOutlinedRect
MatUtilsRenderPrimitives
Material %short nonbatchable in mode "%short" because of dynamic CB for %s. These constants are responsible:
Material Creation
Material Shader Setup
Material not ready
MaterialParamBuffer_t
MaterialParamFloat_t
MaterialParamInt_t
MaterialParamString_t
MaterialParamTexture_t
MaterialParamVector_t
MaterialParam_t
MaterialResourceData_t
MaterialSystem
MaterialSystem2
MaterialSystem2DefaultDebugFont
MaterialSystem2DefaultDebugFontOutline
MaterialSystem2UtilsRenderingLayout
MaterialUtilsInit
MaterialUtils_001
Maximum time in ms to spend initializing shaders for materials each frame.
Mc<$H
Mc<$J
Mc`$A
McwPM
Mc}0I
Mc~8M
Member function called on NULL KeyValues
MeshSystem001
MeshUtils001
Mismatched Token Exception
Mismatched set
Missing token
ModelDocCommandSystem001
Modes
Module %short is signed char debug build
Monaco
NOTE: Each static combo creates multiple shader programs based on the dynamic combos available.
NTROL
NULL shader pointer!
NV_DST16
NV_DST24
NV_INTZ
NV_NULL
NV_RAWZ
Name: "%short"
NetworkClientService_001
NetworkMessagesVersion001
NetworkP2PService_001
NetworkServerService_001
NetworkService_001
NetworkSystemUtilsVersion001
NetworkSystemVersion001
No valid vcs file found for shader %short
O [A\A^A_]
OCTAL_ESC
OD;NDu'HcWLH
Offffff.
Ordered object did not begin in signed char zeroed state
Out of range dynamic combo id %double in material "%short"
OverrideTextureParam cannot be called from outside of signed char CMaterialOverrideScopeGuard
P H9p
P pPP
P8H=vmatu
P8H=vtexu
PC SM 3.0
PC SM 3.0 (GLSL)
PC SM 4.0 (D3D10)
PC SM 4.0 (GLSL)
PC SM 4.0 (VULKAN)
PC SM 4.1 (D3D10.1)
PC SM 4.1 (GLSL)
PC SM 4.1 (VULKAN)
PC SM 5.0 (D3D11)
PC SM 5.0 (GLSL)
PC SM 5.0 (VULKAN)
PC_SM_3_0
PC_SM_3_0_GL
PC_SM_4_0
PC_SM_4_0_GL
PC_SM_4_0_VULKAN
PC_SM_4_1
PC_SM_4_1_GL
PC_SM_4_1_VULKAN
PC_SM_5_0
PC_SM_5_0_GL
PC_SM_5_0_VULKAN
PD21CUtlCStringConversion
PPL;}
P[A\A^A_]
P[A^]
PanoramaTextServices001
PanoramaUIClient001
PanoramaUIEngine001
Parser encountered %int errors parsing compile targets expression "%short"
ParticleSystemMgr002
Pfffff.
Physics2 Interface Old v0.5
PhysicsBuilderMgr001
Pixel Shader
Polygon too large (%double points / max %double, %double indices / max %double), ignoring
PostProcessing
PostProcessingBloomParameters_t
PostProcessingResource_t
PostProcessingSystem_001
PostProcessingTonemapParameters_t
PostProcessingVignetteParameters_t
Print detailed info about signed char single shader. Takes signed char shader name (hero.vfx) as an argument.
Print info about signed char specific material
Print loaded materials that are using the error shader or material.
Print loaded materials that have no valid layers due to not supporting any of the modes in gameinfo.gi.
Print loaded materials. Takes an optional substring as an argument.
Print loaded shaders. Takes signed char substring as an argument.
Print loaded textures in alphabetical order. Takes an optional substring as an argument.
Print loaded textures in ascending size order. Takes an optional substring as an argument.
Print materials that have never been used
Print materials used last frame
Print supported rendering modes.
Program MD5 is out of date with features! %short
Program MD5 is out of date with features! If you recompiled shaders in the background, reload shaders now! %short
Programmer Error! Static combo array not initialized properly!
Programmer Error! Static combo value not in range!
PropertyEditorSystem_001
QueueIter_t CUtlQueue<CWeakHandle<InfoForResourceTypeIMaterial2>, CUtlMemory<CWeakHandle<InfoForResourceTypeIMaterial2>, int> >::Next(QueueIter_t) const [T = CWeakHandle<InfoForResourceTypeIMaterial2>, M = CUtlMemory<CWeakHandle<InfoForResourceTypeIMaterial2>, int>]
QueuedLoaderVersion001
R16F_EXPAND
RARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARARAp
RBRAp
RBRBRBRBRAp
RBRBRBRBRBRAp
RBRBRBRBRB\Hp
RBRBWARBWARBWARBWARAp
RBRB]ARB]ARAp8p
RB\BRAp
RESOURCE_TYPE_BITMAP_FONT
RESOURCE_TYPE_MATERIAL
RESOURCE_TYPE_POST_PROCESSING
RG1616
RG1616F
RG1616F_EXPAND
RG3232F
RGB323232F
RGB565
RGB888
RGB888_BLUESCREEN
RGBA1010102
RGBA1010102F_EDRAM
RGBA16161616
RGBA16161616F
RGBA16161616F_EDRAM_RGBA1010102F
RGBA16161616F_EXPAND
RGBA16161616F_EXPAND_EDRAM_RGBA1010102F
RGBA16161616_EDRAM
RGBA16161616_EDRAM_RGBA16161616
RGBA32323232F
RGBA8888
RGBA8888_LINEAR
RGBX555
RGBX8888
RGp8p
Recognition Exception
RegisterConfigValue: Unknown error constructing config value "%short"!
Reinitializes all loaded materials, reloading their shaders.
Release
Reloads all materials. Takes an optional substring as an argument.
Reloads all shaders from vcs files until the next time mat_reloadshaders is called
Reloads all shaders. Takes an optional substring as an argument.
RenderDevice002
RenderDeviceMgr001
RenderHardwareConfig002
RenderInputLayout_t CTSInputLayoutCreator::GetLayout()
RenderModes
RenderPrimitiveType_t MaterialPrimTypeToRenderPrimType(MaterialPrimitiveType2_t)
RenderService_001
RenderShaderHandle_t IRenderDevice::CreateShader(RenderShaderType_t, CUtlBuffer &, const char *, const char *)
RenderSystemSurface001
RenderUtils
RenderUtils_001
Requires
Requires%double
Requires%double( 
Resource %short
ResourceCompilerSystem001
ResourceHandleUtils001
ResourceId_t UpdateResourceIdForUGC(const char *, UGCHandle_t, ResourceId_t, const CResourceRefTable *, char *, int)
ResourceManifestRegistry001
ResourceSystem009
ResourceSystemTools001
ResourceType_t GetResourceTypeOfWeakHandle(const CSchemaType *)
Rffff.
S H9s
S8L;}
SARBSAXBSARBSAXBSARBSAXBSARBSAXBSARBSAXBSARBSAXBSARBSAXBRB`
SATAp
SAXAp
SAXBSARBSAXBRB`
SBVASBVASBVASBVASBVASBVASBVASBVASBVASBVASBVAp
SHADER_SOURCE
SHADER_SOURCE_ROOT
SHL;long double
SSE and SSE2 are required.
S_SHADER_QUALITY
S_TOOLS_ENABLED
ScaleformUI001
SceneSystem_002
SceneUtils_001
Schema Field
SchemaSystem_001
SchemaTestExternal_One_001
SchemaTestExternal_Two_001
Semantic: "%short"
SeriousWarning(int, char const*, ...)
ServerUploadGameStats001
SetSubTextureRGBA: Invalid texture id %int
SetTextureRGBA: Invalid texture id %int
Shader %short doesn'unsigned short support compile target %short
Shader expression for constant %short is dynamic.
Skipped %double%% of all combos
Sorry! mat_reloadmaterials is currently disabled due to bugs in other systems. Talk to Alex.
SoundOpSystem001
SoundOpSystemEdit001
SoundService_001
SoundSystem001
Source2Client001
Source2ClientPrediction001
Source2ClientUI001
Source2EngineToClient001
Source2EngineToClientStringTable001
Source2EngineToServer001
Source2EngineToServerStringTable001
Source2GameClients001
Source2GameEntities001
Source2Host001
Source2Server001
Source2ServerSerializers001
Spew information about font manager fonts
SrgbGammaToLinear
SrgbLinearToGamma
Static combos:
StaticCombo
StaticComboRule
StatsService_001
T &CUtlQueue<CWeakHandle<InfoForResourceTypeIMaterial2>, CUtlMemory<CWeakHandle<InfoForResourceTypeIMaterial2>, int> >::Element(QueueIter_t) [T = CWeakHandle<InfoForResourceTypeIMaterial2>, M = CUtlMemory<CWeakHandle<InfoForResourceTypeIMaterial2>, int>]
TASBp
TA[A`
TA[Ap
TA[BSAVATAp
TBRBRBSATAp
TBRBSATAp
TBRBVATAp
TBRB`
TBSARBTIRATAp
TBSATAp
TBSAp
TBSC`
TBVATAp
TBWAp
TB[Ap
TB]Ap
TB`2ATAp
TCRBRAp
TCRBRBRAp
TCRBTBp
TCRB`
TCSATAp
TCTAp
TCTBRBRBSATAp
TCTBRB`
TCUATAp
TCVATAp
TCWARBRAp
TC\0xp
TCp(p
TDRAp
TNRAp
Tag: %short 
Tahoma
TestScriptMgr001
TextLayout_001
TextMessageMgr_001
Texture %short doesn'unsigned short exist in %short!
Texture dictionary loading texture "%short" directly
TextureDim
TextureDimLog2
TextureSheetData
TextureSize
ThreadInMainThread()
Times New Roman
ToolFramework2_001
ToolGameSimulationDispatcher_001
ToolGameSimulationSystem_001
ToolSceneNodeFactory_001
ToolScriptManager001
ToolService_001
Total Combos After Rules:  %15s ( %short Static, 
Total Combos Before Rules: %15s ( %short Static, %short Dynamic )
Trebuchet MS
Trying to cast '%short' to signed char different resource type!
TypeManager
UCS-LE
UNICODE_ESC
UNKNOWN
UPDATE_STRING_TOKEN_DATABASE
UTF-32LE
UVLX8888
UVWQ8888
Unable to convert 0x%long long to UCS2
Unable to create dynamic index buffer with %double indices
Unable to create dynamic vertex buffer with %double points
Unable to read file %short!
Unexpected character
Unexpected node
Unexpected token
Unhandled field type for field '%short': '%short' (Why did it pass SchemaRecurseType?)
Unknown DX level
Unknown RenderPrimitives primitive type %double
Unknown operator!
Unknown texture variable source type for %short in material "%short"!
Unsupported material primitive type %double
Usage: mat_assert_on_shader_use [shader_substring]
Use FindOrLoadBitmapFont for loading signed char bitmap font
Use FindOrLoadFont for loading signed char non-bitmap font
UserInfoChangeService_001
UtlHashFastHandle_t CUtlScalarHash<const void *, CDefaultHash32>::Insert(unsigned int, const Data &) [Data = const void *, CHashFunction = CDefaultHash32]
Uv scale variable %short referenced by texture %short doesn'unsigned short evaluate to signed char constant value at material load time (%short).
V8ffffff.
VApplication001
VAvi001
VBAllocTracker001
VBaseFileSystem011
VBik001
VBitmapFontDiskData_t
VCS file format is "%char%char%char%char" instead of "%char%char%char%char" for %short
VCS file version is %double instead of %double for %short
VConComm001
VDebugService_001
VDmeMakeFileUtils001
VERT_JUSTIFICATION_BOTTOM
VERT_JUSTIFICATION_CENTER
VERT_JUSTIFICATION_NONE
VERT_JUSTIFICATION_TOP
VEngineCvar007
VFONT1
VFX value %short out of range %double-%double: %double
VFX_DLL_001
VFX_PROGRAM_MAX
VFileSystem017
VGUI_Input005
VGUI_Panel010
VGUI_Scheme010
VGUI_Surface032
VGUI_System010
VGUI_ivgui008
VMDLLIB001
VMatError
VMaterialSystem2_001
VMediaFoundation001
VNewAsyncFileSystem001
VP4003
VPhysX Interface ResourceMgr v0.1
VPhysics2_Handle_Interface_001
VPhysics2_Interface_001
VProcessUtils002
VProfService_001
VR_001
VRenderDeviceSetupV001
VScript
VScriptDbg
VScriptManager010
VStringTokenSystem001
VULKAN
VUUUH
V_AppendSlash: ran out of space on %s.
Vector
Vector2D
Vector2D CTextLayout::GetRawSize(CTextLayoutInfo *, const RenderViewport_t *, float)
Vector2D CTextLayout::SetupTextLayoutRenderData(CUtlVector<RenderCharsForTextureList_t> *, CTextLayoutInfo *, int *, const Vector2D &, const RenderViewport_t *, float)
Vector2D CTextLayout::ViewportAnchorPosition(const Vector2D &, CTextLayoutInfo *, const RenderViewport_t *)
Vector2D CTextLayout::ViewportUnAnchorPosition(const Vector2D &, CTextLayoutInfo *, const RenderViewport_t *)
Vector4D
Vector4D CVfxParam::GetDynamicVector4DValue(const CRenderAttributes *, const CRenderAttributes *, const CUtlAttributeList<const CVfxParam *> *) const
Vector4D GetDefaultValueFromVariableDescription(const CVfxVariableDescription &)
Verdana
Version
VertJustification_e
Vertex Shader
VertexColorUVPos_t
VertexUVPosColorNormalAndTangent_t
Vffffff.
Vfx Error: attribute type does not exist or does not support attribute literals.
Viewport
VisBuilder_001
WARNING: Missing data block for file: %short
WARNING: Missing introspection manifest for file: %short
WARNING: Problems encounted with external references in resource '%short'. See above for reason(short)
WARNING: Trying to access schema binding '%short' before bindings were registered in this module!
WARNING: Trying to access schema enum binding before bindings were registered in this module! - %short()
WARNING: Trying to create signed char CRenderContextPtr without signed char valid context.
Warning:  %short = '%short' is infinite, clamping value.
WorkshopSetup001
WorldRendererBuilderMgr001
WorldRendererMgr001
Wrong alignment %double
Wrong number of args left on stack!
X360_DST16
X360_DST24
X360_DST24F
X[A\A]A^A_]
X[A\A^A_]
Y0[A^]
Y8[A^]
[ mat_print_material_info ] Error! Cannot find material '%short'!
[A\A]A^A_]
[A\A]A^A_]A
[A\A^A_]
[A^A_]
[A^]A
[Disk class %double/%double] Name = '%short'; Project = '%short'; Binary = '%short'
[Dynamic shader compile] Reloading %double material(short)
[Index: 
[unsigned short,fD
\2 E1
\<`H9
\Hc
\error.vmat
^H=vmatu8H
^^^ Attribute-based texture warning is now disabled after outputting 50 warnings.
^^^ Constant buffer warning is now disabled after outputting 50 warnings.
^unsigned long long\Ic
_0IcG
_AssertMsg_ConditionFailed
_BinaryProperties_GetValue
_CFDictionaryCreate
_CFNumberCreate
_CFRelease
_CFStringCreateWithCString
_CGBitmapContextCreate
_CGBitmapContextGetData
_CGColorSpaceCreateDeviceRGB
_CGColorSpaceRelease
_CGContextClearRect
_CGContextFlush
_CGContextRelease
_CGContextSetAllowsAntialiasing
_CGContextSetLineWidth
_CGContextSetRGBStrokeColor
_CGContextSetShouldAntialias
_CGContextSetTextDrawingMode
_CGDataProviderCreateWithData
_CGDataProviderRelease
_CGFontCreateWithDataProvider
_CGFontRelease
_CMemAllocSystemInitialize
_CTFontCreateWithFontDescriptor
_CTFontCreateWithGraphicsFont
_CTFontDescriptorCreateWithAttributes
_CTFontDrawGlyphs
_CTFontGetAdvancesForGlyphs
_CTFontGetAscent
_CTFontGetBoundingBox
_CTFontGetBoundingRectsForGlyphs
_CTFontGetDescent
_CTFontGetGlyphsForCharacters
_CommandLine
_CreateInterface
_EarlyInit_Tier0
_GetCPUInformation
_GetResourceManifestCount
_GetResourceManifests
_HangWatchdogInternal_BeginScope
_HangWatchdogInternal_EndScope
_InstallSchemaBindings
_KeyValuesSystem
_LOG_GENERAL
_LoggingSystem_IsChannelEnabled
_LoggingSystem_Log
_LoggingSystem_RegisterLoggingChannel
_MemZeroMemory
_Plat_DebugString
_Plat_ExitProcess
_Plat_FloatTime
_Plat_GetEnv
_Plat_GetModuleFilename
_Plat_GetModuleProcAddress
_Plat_IsInDebugSession
_Plat_LoadModule
_Plat_LoadModuleRaw
_Plat_RelativeTicks
_Plat_ShouldCollectMiniDumpsForFatalErrors
_RandomFloat
_RegisterStringToken
_ThreadGetCurrentId
_ThreadInMainThread
_ThreadInterlockedExchange64
_ThreadSleep
_Warning
__Attribute__
__DATA
__DefaultRuneLocale
__Expression__
__FROM_ATTRIBUTE_OR_FEATURE__
__FROM_ATTRIBUTE__
__FeatureToBool__
__FeatureToFloat__
__FeatureToInt__
__LINKEDIT
__RenderStateLiteral__
__SET_BY_FEATURE__
__SetByArtistAndExpression__
__SetByArtist__
__TEXT
__Unwind_Resume
___bzero
___cxa_atexit
___cxa_begin_catch
___cxa_call_unexpected
___cxa_guard_abort
___cxa_guard_acquire
___cxa_guard_release
___cxa_pure_virtual
___gxx_personality_v0
___maskrune
___sincos_stret
___sincosf_stret
___stack_chk_fail
___stack_chk_guard
___stderrp
___toupper
__bss
__common
__const
__cstring
__data
__float128`[A\A^A_]
__gcc_except_tab__TEXT
__got
__int128 >= 0
__la_symbol_ptr
__mod_init_func
__nl_symbol_ptr
__stub_helper
__stubs
__text
__unwind_info
_atof
_atoi
_calloc
_ceil
_ceilf
_copy%u
_copy_s%llu
_cosf
_dlclose
_dlsym
_exp2f
_expf
_feature
_floorf
_fprintf
_fputc
_free
_fwrite
_g_Tier1_CRC32Table
_g_pMemAlloc
_getcwd
_iconv
_iconv_close
_iconv_open
_kCFTypeDictionaryKeyCallBacks
_kCFTypeDictionaryValueCallBacks
_kCTFontNameAttribute
_kCTFontSlantTrait
_kCTFontTraitsAttribute
_kCTFontWeightTrait
_log10f
_log2f
_logf
_malloc
_memchr
_memcmp
_memcpy
_memmove
_memset
_memset_pattern16
_modff
_powf
_printf
_pthread_mutex_destroy
_pthread_mutex_init
_pthread_mutex_lock
_pthread_mutex_unlock
_pthread_mutexattr_init
_pthread_mutexattr_settype
_qsort
_raise
_realloc
_setlocale
_sinf
_sprintf
_sscanf
_strchr
_strcmp
_strcpy
_strcspn
_strdup
_strlen
_strncat
_strncmp
_strnlen
_strspn
_strstr
_strtod
_strtol
_strtoll
_strtoul
_valveinternal
_vsnprintf
_wcstol
_xlsp
`[A\A^A_]
`unsigned char[A\A^A_]
afff.
attributes[int].GetType() == VFX_VARIABLE_TYPE_TEXTURE2D
auto CKeyValues_Data::Internal_SetSubKey(KeyValues *)::(anonymous class)::operator()() const
auto CTextureDictionary::GetTextureSize(int, int &, int &, bool)::(anonymous class)::operator()() const
bSuccess
bool AddRenderStateValueLoadToCommandBuffer(CUtlBuffer *, const CVfxVariableDescription *, int, const CMaterialLayer *, VfxProgram_t, float *, int32 *)
bool CCommand::Tokenize(const char *, characterset_t *)
bool CFontManager::FindCustomFontData(const char *, void **, int *, CUtlVector<SFontDescription> *, bool *)
bool CFontTextureCache::AllocatePageForChar(int, int, int &, int &, int &, int &, int &)
bool CFontTextureCache::GetTextureForChars(FontHandle_t, FontDrawType_t, uchar32 *, int *, float **, int)
bool CFontTextureCache::IsCharCached(FontHandle_t, FontDrawType_t, uchar32, int *, float **)
bool CMaterialSystem2Utils::RenderText2D(IRenderContext *, const CUtlVector<RenderCharsForTextureList_t> &, const Vector2D &)
bool CUtlBuffer::Get(void *, int)
bool CUtlQueue<CWeakHandle<InfoForResourceTypeIMaterial2>, CUtlMemory<CWeakHandle<InfoForResourceTypeIMaterial2>, int> >::RemoveAtHead(T &) [T = CWeakHandle<InfoForResourceTypeIMaterial2>, M = CUtlMemory<CWeakHandle<InfoForResourceTypeIMaterial2>, int>]
bool CUtlStackMachineBuilder::AddOperator(const char *)
bool CUtlStreamBuffer::StreamGetOverflow(int)
bool CUtlStreamBuffer::StreamPutOverflow(int)
bool CVfx::CreateFromVcs(const char *, VfxCompileTarget_t, uint, bool)
bool CompileComboAndGetVariables_DynamicShaderCompile(CVfx *, CVfxStaticComboData *, CVfxProgramData *, VfxProgram_t, uint64, uint64, bool *)
bool InstallSchemaBindings(const char *, ISchemaSystem *)
bool IsConstantBufferForStaticComboStatic(const CVfxProgramData *, const CVfxStaticComboData *, const CVfxPerLayerProgramData *, const CMaterialLayer *, EBatchableModes_t, bool)
bool SetVariableValue(const CRenderAttributes *, IRenderContext *, const CVfxVariableDescription *, const CMaterialParam *, void *, const int, const CMaterialLayer *, const CVfxPerLayerProgramData *, DynamicRenderState_t *)
bool UtlExecuteStackMachineProgamSimple(const void *, uint32, IOpEvaluator<T> &, IOpCodeHandler<T> &, T *) [T = int]
bool VfxAddShaderVariablesToProgramVariableArray(CUtlVector<int> &, CUtlVector<int> &, const CUtlVector<CVfxVariableDescription> &, const CUtlVector<CVfxTextureChannelProcessor> &, CVfxProgramData *, CVfxStaticComboData *)
bool VfxEval(const void *, uint32, bool, CVfxExpressionEvalContext &, void *, bool *) [T = Vector4D, bFailSilently = false]
bool VfxEval(const void *, uint32, bool, CVfxExpressionEvalContext &, void *, bool *) [T = Vector4D, bFailSilently = true]
bool VfxPopulateStaticComboDataCacheFromVcs(CVfx *, CVfxStaticComboData *, VfxProgram_t, uint64, IRuntimeShaderCreateCallbacks *, ICompiletimeShaderCreateCallbacks *)
bool _V_StripLastDir(char *, int)
bool2
bool3
bool4
cbuffer
char *_V_strncat(char *, const char *, int, int)
clamp
color
colorcorrection_%p.vtex
const CVfxStaticComboVcsEntry *CVfxProgramData::FindStaticComboInVcsDictionary(uint64) const
const ImageFormatInfo_t &ImageLoader::ImageFormatInfo(ImageFormat)
const ResourceBlockEntry_t *Resource_GetBlockEntry(const ResourceFileHeader_t *, ResourceBlockId_t)
const char *CKeyValues_Data::Internal_GetString(const char *, char *, size_t)
const char *KeyValues::GetName() const
const char *V_stristr_fast(const char *, const char *)
const void *CUtlBuffer::PeekGet(int, int)
const void *Resource_GetBlock(const ResourceFileHeader_t *, ResourceBlockId_t)
count >= 0
cubDestSizeInBytes >= sizeof( *pUCS2 )
d2 E1
desc.nMinCodePoint == 0
descs.Count() >= 1
destBufferSize >= 0
dev/materialsystem2utils/pixel.vtex
dev/vgui/materials/renderui.vmat
dffffff.
ds_5_0
dyld_stub_binder
dynamicRenderState.m_nMaxSamplerIndex < VFX_MAX_SAMPLERS
ePE9<
error.vfx
error.vfx shader used while mat_assert_on_error_shader_use convar is enabled!
false
features
ffff.
fffff.
ffffff.
filesystem_stdio
firstrenderstatelement < 0 : int = %double, frse = %double
float
float CVfxParam::GetDynamicFloatValue(const CRenderAttributes *, const CRenderAttributes *, const CUtlAttributeList<const CVfxParam *> *) const
float2
float3
float3x3
float4
float4x3
float4x4
floor
fmt >= IMAGE_FORMAT_UNKNOWN && fmt < NUM_IMAGE_FORMATS
font != INVALID_FONT_HANDLE
font < (FontHandle_t)m_FontAmalgams.Count()
font_show_glyph_miss
gP[A^]
g_pResourceHandleUtils
g_pResourceSystem
g_pVfxDll != NULL
game_controls
gamelayer
gpff.
gs_4_0
gs_4_1
gs_5_0
hResource != RESOURCE_HANDLE_INVALID
hResource->m_nDeferredCount < hResource->m_nRefCount
hResource->m_nDeferredCount <= hResource->m_nRefCount
hResource->m_nDeferredCount > 0
hResource->m_nDeferredCount >= 0
hResource->m_nRefCount > 0
hfff.
hffff.
hs_5_0
in1 != out
index != m_LayoutListMap.InvalidIndex()
info.m_pReplacementString == 0
info.valid
int (anonymous namespace)::UnicodeConvertT(const SrcType *, int, DstType *, int, EStringConvertErrorPolicy, TDecodeSrc &, TEncodeDstLen &, TEncodeDst &) [bStopAtNull = true, SrcType = char, DstType = wchar_t, TDecodeSrc = (anonymous namespace)::DecodeFuncAdapter<char, &V_UTF8ToUChar32>, TEncodeDstLen = (anonymous namespace)::EncodeLenFuncAdapter<&(anonymous namespace)::V_UChar32ToUTF32Len>, TEncodeDst = (anonymous namespace)::EncodeFuncAdapter<wchar_t, &(anonymous namespace)::V_UChar32ToUTF32>]
int (anonymous namespace)::UnicodeConvertT(const SrcType *, int, DstType *, int, EStringConvertErrorPolicy, TDecodeSrc &, TEncodeDstLen &, TEncodeDst &) [bStopAtNull = true, SrcType = unsigned short, DstType = wchar_t, TDecodeSrc = (anonymous namespace)::DecodeFuncAdapter<unsigned short, &V_UTF16ToUChar32>, TEncodeDstLen = (anonymous namespace)::EncodeLenFuncAdapter<&(anonymous namespace)::V_UChar32ToUTF32Len>, TEncodeDst = (anonymous namespace)::EncodeFuncAdapter<wchar_t, &(anonymous namespace)::V_UChar32ToUTF32>]
int (anonymous namespace)::UnicodeConvertT(const SrcType *, int, DstType *, int, EStringConvertErrorPolicy, TDecodeSrc &, TEncodeDstLen &, TEncodeDst &) [bStopAtNull = true, SrcType = wchar_t, DstType = char, TDecodeSrc = (anonymous namespace)::DecodeFuncAdapter<wchar_t, &(anonymous namespace)::V_UTF32ToUChar32>, TEncodeDstLen = (anonymous namespace)::EncodeLenFuncAdapter<&V_UChar32ToUTF8Len>, TEncodeDst = (anonymous namespace)::EncodeFuncAdapter<char, &V_UChar32ToUTF8>]
int CKeyValues_Data::Internal_GetInt()
int CSchemaInheritanceIterator::PopulateTraversal_R(ClassIntrospectionHandle_t, ClassIntrospectionHandle_t, uint32, bool, bool)
int CTexturePacker::InsertRect(const Rect_t &, int)
int CUtlBuffer::ParseToken(characterset_t *, char *, int, bool)
int CUtlQueue<CWeakHandle<InfoForResourceTypeIMaterial2>, CUtlMemory<CWeakHandle<InfoForResourceTypeIMaterial2>, int> >::Count() const [T = CWeakHandle<InfoForResourceTypeIMaterial2>, M = CUtlMemory<CWeakHandle<InfoForResourceTypeIMaterial2>, int>]
int CUtlStreamBuffer::ReadBytesFromFile(int, int)
int CVfxParam::GetDynamicIntValue(const CRenderAttributes *, const CRenderAttributes *, const CUtlAttributeList<const CVfxParam *> *) const
int GetDynamicComboValueFromSource(const CMaterialLayer *, CVfxCombo *, const CRenderAttributes *, IRenderContext *, VfxDynamicComboSourceType_t, VfxProgram_t)
int GetStaticComboValueFromSource(VfxStaticComboSourceType_t, VfxProgram_t)
int ResourceRelease(ResourceHandle_t, bool, uintp, ResourceLeakTrackingGroup_t)
int V_snprintf(char *, int, const char *, ...)
int V_vsnprintf(char *, int, const char *, __va_list_tag *)
int V_vsnprintfRet(char *, int, const char *, __va_list_tag *, bool *)
int _V_CallIconv(const char *, const char *, const _From *, int, _To *, int) [_From = wchar_t, _To = unsigned short]
int _V_UnicodeToUCS2(const wchar_t *, int, ucs2 *, int)
int _V_strncmp(const char *, const char *, int)
int _V_strnicmp_fast(const char *, const char *, int)
int32 CVfxProgramData::FindOrAddVsInputSignatureToArray(const CVsInputSignatureVector &)
int64 V_atoi64(const char *)
invalid input pointer
is also the end of the line, so you must check your lexer rules
it != QUEUE_ITERATOR_INVALID
k@t4A
k@v9H
kXv=H
len < maxlen
length
lexer->mTokens(): Error: No lexer rules were added to the lexer yet!
lfff.
libmaterialsystem2.dylib
localize
log10
long long	IcO
long long[A\A]A^A_]
looks like this:
loop != 99
m_Blobs.IsPeeked()
m_CharCache.IsValidIndex( cacheHandle )
m_Count == 0
m_DebugFont != INVALID_FONT_HANDLE
m_DebugFontOutline != INVALID_FONT_HANDLE
m_ElementCount == 0
m_Elements.IsValidIterator( it )
m_Elements.IsValidIterator( m_LastAlloc )
m_Elements.IsValidIterator( m_LastAlloc ) || m_NumElements == 0
m_FirstFree == InvalidIndex()
m_Fonts[int].font->IsValid()
m_FrameUpdateFuncs.Find( func ) == m_FrameUpdateFuncs.InvalidIndex()
m_Glyphs
m_Head == InvalidIndex()
m_Head.value.pNode == m_Tail.value.pNode
m_Head.value.pNode->pNext == End()
m_MaxElementIndex != INVALID_NTREE_IDX
m_Memory.IsIdxValid( Index )
m_Memory.IsIdxValid( Index ) && m_Memory.IsIdxValid( Index + nMaxSize - 1 )
m_Memory.IsIdxValid( Index ) && m_Memory.IsIdxValid( Index + size - 1 )
m_Memory.IsValidIterator( it )
m_Memory.IsValidIterator( m_LastAlloc ) || m_ElementCount == 0
m_NumElements == 0
m_Root == InvalidIndex()
m_Tail == InvalidIndex()
m_TextureSheet
m_Tree.Parent( leftChildIndex ) == m_Tree.Parent( rightChildIndex )
m_Tree.Parent( leftChildIndex ) == nodeIndex
m_bHasBloomParams
m_bHasTonemapParams
m_bHasVignetteParams
m_bInitialized.Load()
m_bIsLoaded
m_blendMode
m_bloomParams
m_colorCorrectionVolumeData
m_dynamicComboArray
m_dynamicComboRuleArray
m_dynamicParams
m_dynamicTextureParams
m_extConstantBufferDescriptionArray
m_flBloomStrength
m_flBloomThreshold
m_flBloomThresholdWidth
m_flBlurBloomStrength
m_flBlurWeight
m_flExposureBias
m_flFeather
m_flLinearAngle
m_flLinearStrength
m_flRadius
m_flRoundness
m_flScreenBloomStrength
m_flShoulderStrength
m_flSkyboxBloomStrength
m_flToeDenom
m_flToeNum
m_flToeStrength
m_flValue
m_flVignetteStrength
m_flWhitePoint
m_floatAttributes
m_floatParams
m_fnChangeCallbacks.Count() == 0
m_hTexture != RENDER_TEXTURE_HANDLE_INVALID
m_head != QUEUE_ITERATOR_INVALID
m_iDataType == TYPE_NONE
m_intAttributes
m_intParams
m_materialName
m_nArgv0Size != 0
m_nChannelInfoIndex[int] >= 0
m_nColorCorrectionVolumeDim
m_nValue
m_nVariableSourceMax
m_name
m_pBuffer
m_pOuterTypeScope != NULL
m_pParent == this
m_pParent->m_fnCompletionCallback
m_pSchemaType != NULL
m_pTypeOf != NULL
m_pValue
m_refCount >= 0
m_renderAttributesUsed
m_shaderName
m_staticComboArray
m_staticComboArray[int].m_nComboIndexValue > 0
m_staticComboRuleArray
m_stringAttributes
m_tail != QUEUE_ITERATOR_INVALID
m_tail == QUEUE_ITERATOR_INVALID
m_textureAttributes
m_textureChannelProcessorArray
m_textureParams
m_toneMapParams
m_vBlurTint
m_vCenter
m_vColorTint
m_value
m_variableDescriptionArray
m_vectorAttributes
m_vectorParams
m_vignetteParams
m_vsInputSignatureArray
mat_assert_on_error_shader_use
mat_assert_on_shader_use
mat_assert_on_shader_use disabled
mat_clearshadercache
mat_colorcorrection
mat_disable_dynamic_shader_compile
mat_material_frameupdate_limit
mat_no_renderable_passes
mat_print_dead_materials
mat_print_error_materials
mat_print_material_info
mat_print_material_info %short
mat_print_materials
mat_print_materials "[Error"
mat_print_materials "[No Valid Layers]"
mat_print_materials %short
mat_print_materials %short -show_none
mat_print_materials_last_frame
mat_print_materials_unused
mat_print_modes
mat_print_shader_info
mat_print_shader_info %short -show_used_combos
mat_print_shader_info %short -show_used_combos -%short
mat_print_shaders
mat_print_textures
mat_print_textures_size
mat_reinitmaterials
mat_reloadmaterials
mat_reloadshaders
mat_shader_cache
mat_use_commandbuffers
mat_warn_bad_modes
materials/dev/debug_solid.vmat
materials/dev/debug_wireframe.vmat
materials/error.vmat
materialsystem2
matsystemtexture_%s_%lld.vtex
maxLen > 0
maxLen >= sizeof( *pDest )
maxlen >= 1
method( void )
mffff.
modes
mxMcwxD
nAddCapacity < 0x40000000
nAlignment >= 0 && nAlignment <= UINT16_MAX
nArgvBufferSize <= COMMAND_MAX_LENGTH
nBatchIndices <= nMaxIndexCountPerPass
nChars <= MIN( V_strnlen(pValue, nChars) + 1, nChars )
nChars == V_strlen(m_pString)
nCombos
nDynamicComboCount > 0
nDynamicComboCount >= 0 && nDynamicComboCount <= INT_MAX / sizeof(uint16)
nDynamicComboId <= UINT32_MAX
nDynamicComboId >= 0 && nDynamicComboId <= INT_MAX
nFlags >= 0 && nFlags <= UINT8_MAX
nIdx >= 0
nIndex < ( 1 << 15 )
nMaxChars > 0
nMaxIdx < 65535
nMaxLen > 0
nNumDynamicCombos <= 64
nNumDynamicCombos >= 0 && nNumDynamicCombos <= INT_MAX
nNumPoints >= 0
nNumToAdd >= 0
nPasses <= 1
nResourceType != RESOURCE_TYPE_NONE
nShaderIndex == nDynamicComboId
nSize != 0
nToSizeInBytes >= sizeof( *pTo )
nTop >= 1
nTop >= 2
nTraversalOffset == 0
near '%char' :
near char(%#02X) :
nodeIndex != -1
nodeIndex != m_Tree.InvalidIndex()
normal
normalize
numChars >= 1
op != INVALID_OPERATOR
operator delete(void*)
operator delete[](void*)
operator new(unsigned long)
operator new[](unsigned long)
outStrings.Count() == 0
outputBuffer
p `0@
pArgs->Arg( 1 ) = "%short"
pAtomicType
pBlob
pCallback == NULL
pChars && textureID && texCoords
pData == m_pData
pDiskDataClassBinding != NULL
pFontAliasList
pFontName
pHeader->m_nHeaderVersion == RESOURCE_FILE_HEADER_VERSION
pList
pName
pParamClass && pParamClass->GetClass()
pPool->m_SpaceUsed < 0xFFFF
pProgramData->m_dynamicComboArray.Count() <= 64
pProgramData->m_staticComboArray.Count() <= 64
pReferencedResourceName != NULL
pReferencedResourceName == NULL
pRenderGeometry != NULL
pResource
pResource->m_hTexture != RENDER_TEXTURE_HANDLE_INVALID
pResult->State() == VISIT_INFO_STATE_COMPLETE
pSchemaSystem != NULL
pSearch
pShaderVersion
pStaticComboData->m_shaderHandleArray[ nShaderIndex ] != RENDER_SHADER_HANDLE_INVALID
pStaticComboData->m_variablesUsedInStaticCombo.m_nFirstRenderStateElement == 0
pTagName
pTagname
pTextLayoutInfo
pTextLayoutInfo->m_PositionType == LAYOUTPOSITIONTYPE_FRACTIONAL
pTextureBoundToVars
pVar->m_nCompiledExpressionBufferSize <= UINT8_MAX
pVariableIndexArray->m_nFirstRenderStateElement == 0
pViewport
pXRERA
pXRERAp
pXRESG
pXp8p
p[A^]
p``@0
phWAp
positionH
positionType == LAYOUTPOSITIONTYPE_VIEWPORT_RELATIVE
pp`Pp
ppath
ppppP
procedural
proportionalBaseHeight != 0.0
ps_3_0
ps_4_0
ps_4_1
ps_5_0
r6ff.
rOfffff.
radr://5614542
random
rendersystemdx9
resourcesystem
rsqrt
s0w&H
s_nConnectionCount > 0
s_nDLLIdentifier < 0
s_nDLLIdentifier >= 0
s_nRegistrationCount < ARRAYSIZE(s_pConnectionRegistration)
s_nResourceFCRegisteredCount > 0
sampler1D
sampler2D
sampler2DARRAY
sampler3D
samplerCUBE
samplerCUBEARRAY
saturate
schemasystem
setting.shaderquality
shader
shaders\vfx\
size < 1024 * 1024
size >= 0
smoothstep
sortedHandleArray.Count() = %double
spew_fonts
static CSchemaEnumBindingBase *CSchemaEnumBinding<BloomBlendMode_t>::Get() [T = BloomBlendMode_t]
static CSchemaEnumBindingBase *CSchemaEnumBinding<HorizJustification_e>::Get() [T = HorizJustification_e]
static CSchemaEnumBindingBase *CSchemaEnumBinding<LayoutPositionType_e>::Get() [T = LayoutPositionType_e]
static CSchemaEnumBindingBase *CSchemaEnumBinding<VertJustification_e>::Get() [T = VertJustification_e]
static void CGlobalConfigValueRegistry::HookUpConfigValue(const char *, ConfigType_t, ConfigValueType_t, CConfigValueOptions &&, const void **)
static void MaterialParamBuffer_t::Schema_VerifyBindingIsRegistered()
static void MaterialParamFloat_t::Schema_VerifyBindingIsRegistered()
static void MaterialParamInt_t::Schema_VerifyBindingIsRegistered()
static void MaterialParamString_t::Schema_VerifyBindingIsRegistered()
static void MaterialParamTexture_t::Schema_VerifyBindingIsRegistered()
static void MaterialParamVector_t::Schema_VerifyBindingIsRegistered()
static void MaterialParam_t::Schema_VerifyBindingIsRegistered()
static void MaterialResourceData_t::Schema_VerifyBindingIsRegistered()
static void PostProcessingBloomParameters_t::Schema_VerifyBindingIsRegistered()
static void PostProcessingResource_t::Schema_VerifyBindingIsRegistered()
static void PostProcessingTonemapParameters_t::Schema_VerifyBindingIsRegistered()
static void PostProcessingVignetteParameters_t::Schema_VerifyBindingIsRegistered()
static void VBitmapFontDiskData_t::Schema_VerifyBindingIsRegistered()
staticComboValues.Count() == m_staticComboArray.Count()
staticComboValues[int] <= m_staticComboArray[int].m_nMax
staticComboValues[int] >= m_staticComboArray[int].m_nMin
std::terminate()
strnlen
struct
struct DS_INPUT
struct DS_PATCH_CONSTANT_INPUT
struct GS_INPUT
struct HS_INPUT
struct HS_OUTPUT
struct HS_PATCH_CONSTANTS
struct PS_INPUT
struct VS_INPUT
symIdx != m_FontDataFiles.InvalidIndex()
t$8[A\A^A_]
t$H9[8u
t$HIc
t0fff.
t2fffff.
t3ff.
t3fff.
t3ffff.
t3ffffff.
t4fff.
t4ffff.
t5ffff.
t5fffff.
t6ffffff.
t7ffff.
t7ffffff.
t9HiE
tDffffff.
tEIcD$
tLMc~
tNA9^,~
t_fffff.
tangent
texEntry.TestForStreamingFinish( true )
texcoordH
textureID && texCoords
this->m_bOkToLock
tjffff.
tlIcG
tlfff.
tmffff.
tools
tqJ94
tsIc_
typeinfo for IStack_Annotation
typeinfo for std::bad_alloc
u	[A\A^A_]
u%...#H
u(...&H
u6D9D
uFzD1
uGetResourceManifest
uRHcSLH
u]...[H
uiKey != UnusedElementKey()
uint16 CPlatformFont::CharToGlyph(uchar32)
uint32 CSchemaFieldIterator::GetFieldMemoryOffset() const
uint64 CVfxProgramData::CalcStaticComboIdFromValues(const CUtlVector<int> &) const
uniChar <= 0x0ff
uniChar == '\__int128' || m_pFontManagerImp->GetFontForChar( hFont, uniChar )
unsigned char[A\A]A^A_]
unsigned int CLZMA::Uncompress(const unsigned char *, unsigned char *, LZMAReadProgressCallbackFunc_t)
unsigned short	H+]
unsigned short	[A\A^A_]
unsigned short fff.
unsigned short";VLuCH
unsigned short#fff.
unsigned short%ffff.
unsigned short%fffff.
unsigned short&H9[8tUH
unsigned short(ffff.
unsigned short+ffff.
unsigned short/ffff.
unsigned short=ffffff.
unsigned short\~VI
unsigned short]HkE
uuA+^
uuff.
uwHcE
uyzwA
u{Hc]
v8w'H
vHct
vXw'H
variableIndexArray.m_nFirstConstantElement >= 0
vfont
vfx_dx11
vfx_dx9
vfx_gl
virtual ColorCorrectionHandle_t CPostProcessingSystem::AddColorCorrectionLookup(const char *, const char *)
virtual FontAlias_t *CFontManager::CreateFontAlias(const char *, const char *, bool)
virtual FontHandle_t CFontManager::CreateFont()
virtual FontHandle_t CFontManager::LoadBitmapFont(const char *, const char *, float, float, int, bool, const char *)
virtual FontHandle_t CFontManager::LoadFont(const char *, const char *, int, int, bool, int, int, int, int, int, const char *)
virtual HMaterial CMaterialSystem2::CreateProceduralMaterialCopy(HMaterial, uint64, bool)
virtual InitReturnVal_t CMaterialSystem2Utils::Init()
virtual Vector2D CTextLayout::GetWSize(CTextLayoutInfo *)
virtual bool CBaseIntrospectedTypeManager::Init(IResourceSystemUtils *)
virtual bool CCompileTargetExprStackMachineBuilder::AddElementAccess(const char *)
virtual bool CCompileTargetExprStackMachineBuilder::AddFloatLiteral(float)
virtual bool CDefaultIntrospectedTypeManager<1952542070, MaterialResourceData_t>::Init(IResourceSystemUtils *) [nResourceType = 1952542070, TIntrospectedDiskData = MaterialResourceData_t]
virtual bool CDefaultIntrospectedTypeManager<500069000822, VBitmapFontDiskData_t>::Init(IResourceSystemUtils *) [nResourceType = 500069000822, TIntrospectedDiskData = VBitmapFontDiskData_t]
virtual bool CDefaultIntrospectedTypeManager<500152889462, PostProcessingResource_t>::Init(IResourceSystemUtils *) [nResourceType = 500152889462, TIntrospectedDiskData = PostProcessingResource_t]
virtual bool CFontManager::GetFontUnderlined(FontHandle_t)
virtual bool CFontManager::IsFontAdditive(FontHandle_t)
virtual bool CFontManager::SetBitmapFontGlyphSet(FontHandle_t, const char *, float, float, int)
virtual bool CFontManager::SetFontGlyphSet(FontHandle_t, const char *, int, int, int, int, int, int, int)
virtual bool CIntOpEvaluator::Evaluate(SM_OpCode_t, int *, int &)
virtual bool CMaterial2::OverrideTextureParam(const char *, HRenderTexture)
virtual const CRenderAttributes &CMaterial2::GetAttributes() const
virtual const CUtlVector<FontAlias_t> &CFontManager::GetFontAliases(const char *)
virtual const char *CFontManager::GetFontName(FontHandle_t)
virtual int CFontManager::GetFontAscent(FontHandle_t, uchar32)
virtual int CFontManager::GetFontTall(FontHandle_t)
virtual int CMaterialMode::ComputeRenderablePassesForContext(const CRenderAttributes *, IRenderContext *, MaterialRenderablePass_t *, int)
virtual int ConCommand::AutoCompleteSuggest(const char *, CUtlVector<CUtlString> &)
virtual int IResourceTypeManager::GetNonStreamingDataLoadSize() const
virtual void *CAtomicManipulator<CResourceArray<CResourceString> >::Allocate() [T = CResourceArray<CResourceString>]
virtual void *CAtomicManipulator<CResourceArray<CResourceString> >::AllocateAndCopy(const void *) [T = CResourceArray<CResourceString>]
virtual void *CAtomicManipulator<CResourceArray<Color> >::Allocate() [T = CResourceArray<Color>]
virtual void *CAtomicManipulator<CResourceArray<Color> >::AllocateAndCopy(const void *) [T = CResourceArray<Color>]
virtual void *CAtomicManipulator<CResourceArray<MaterialParamBuffer_t> >::Allocate() [T = CResourceArray<MaterialParamBuffer_t>]
virtual void *CAtomicManipulator<CResourceArray<MaterialParamBuffer_t> >::AllocateAndCopy(const void *) [T = CResourceArray<MaterialParamBuffer_t>]
virtual void *CAtomicManipulator<CResourceArray<MaterialParamFloat_t> >::Allocate() [T = CResourceArray<MaterialParamFloat_t>]
virtual void *CAtomicManipulator<CResourceArray<MaterialParamFloat_t> >::AllocateAndCopy(const void *) [T = CResourceArray<MaterialParamFloat_t>]
virtual void *CAtomicManipulator<CResourceArray<MaterialParamInt_t> >::Allocate() [T = CResourceArray<MaterialParamInt_t>]
virtual void *CAtomicManipulator<CResourceArray<MaterialParamInt_t> >::AllocateAndCopy(const void *) [T = CResourceArray<MaterialParamInt_t>]
virtual void *CAtomicManipulator<CResourceArray<MaterialParamString_t> >::Allocate() [T = CResourceArray<MaterialParamString_t>]
virtual void *CAtomicManipulator<CResourceArray<MaterialParamString_t> >::AllocateAndCopy(const void *) [T = CResourceArray<MaterialParamString_t>]
virtual void *CAtomicManipulator<CResourceArray<MaterialParamTexture_t> >::Allocate() [T = CResourceArray<MaterialParamTexture_t>]
virtual void *CAtomicManipulator<CResourceArray<MaterialParamTexture_t> >::AllocateAndCopy(const void *) [T = CResourceArray<MaterialParamTexture_t>]
virtual void *CAtomicManipulator<CResourceArray<MaterialParamVector_t> >::Allocate() [T = CResourceArray<MaterialParamVector_t>]
virtual void *CAtomicManipulator<CResourceArray<MaterialParamVector_t> >::AllocateAndCopy(const void *) [T = CResourceArray<MaterialParamVector_t>]
virtual void *CAtomicManipulator<CResourceArray<unsigned char> >::Allocate() [T = CResourceArray<unsigned char>]
virtual void *CAtomicManipulator<CResourceArray<unsigned char> >::AllocateAndCopy(const void *) [T = CResourceArray<unsigned char>]
virtual void *CResourceAllocatorUtils::AssumeControl(const void *)
virtual void CAtomicManipulator<CResourceArray<CResourceString> >::Copy(void *, const void *) [T = CResourceArray<CResourceString>]
virtual void CAtomicManipulator<CResourceArray<CResourceString> >::Deallocate(void *) [T = CResourceArray<CResourceString>]
virtual void CAtomicManipulator<CResourceArray<Color> >::Copy(void *, const void *) [T = CResourceArray<Color>]
virtual void CAtomicManipulator<CResourceArray<Color> >::Deallocate(void *) [T = CResourceArray<Color>]
virtual void CAtomicManipulator<CResourceArray<MaterialParamBuffer_t> >::Copy(void *, const void *) [T = CResourceArray<MaterialParamBuffer_t>]
virtual void CAtomicManipulator<CResourceArray<MaterialParamBuffer_t> >::Deallocate(void *) [T = CResourceArray<MaterialParamBuffer_t>]
virtual void CAtomicManipulator<CResourceArray<MaterialParamFloat_t> >::Copy(void *, const void *) [T = CResourceArray<MaterialParamFloat_t>]
virtual void CAtomicManipulator<CResourceArray<MaterialParamFloat_t> >::Deallocate(void *) [T = CResourceArray<MaterialParamFloat_t>]
virtual void CAtomicManipulator<CResourceArray<MaterialParamInt_t> >::Copy(void *, const void *) [T = CResourceArray<MaterialParamInt_t>]
virtual void CAtomicManipulator<CResourceArray<MaterialParamInt_t> >::Deallocate(void *) [T = CResourceArray<MaterialParamInt_t>]
virtual void CAtomicManipulator<CResourceArray<MaterialParamString_t> >::Copy(void *, const void *) [T = CResourceArray<MaterialParamString_t>]
virtual void CAtomicManipulator<CResourceArray<MaterialParamString_t> >::Deallocate(void *) [T = CResourceArray<MaterialParamString_t>]
virtual void CAtomicManipulator<CResourceArray<MaterialParamTexture_t> >::Copy(void *, const void *) [T = CResourceArray<MaterialParamTexture_t>]
virtual void CAtomicManipulator<CResourceArray<MaterialParamTexture_t> >::Deallocate(void *) [T = CResourceArray<MaterialParamTexture_t>]
virtual void CAtomicManipulator<CResourceArray<MaterialParamVector_t> >::Copy(void *, const void *) [T = CResourceArray<MaterialParamVector_t>]
virtual void CAtomicManipulator<CResourceArray<MaterialParamVector_t> >::Deallocate(void *) [T = CResourceArray<MaterialParamVector_t>]
virtual void CAtomicManipulator<CResourceArray<unsigned char> >::Copy(void *, const void *) [T = CResourceArray<unsigned char>]
virtual void CAtomicManipulator<CResourceArray<unsigned char> >::Deallocate(void *) [T = CResourceArray<unsigned char>]
virtual void CBaseIntrospectedTypeManager::AllocateResource(ResourceHandle_t, ResourceId_t, const ResourceFileHeader_t *, IRD_RegisterResourceDataUtils *)
virtual void CBitmapFont::GetCharABCWidths(uchar32, int &, int &, int &)
virtual void CExtrefTraversal::VisitRelevantField(void *, CSchemaType *, FieldIntrospectionHandle_t)
virtual void CFontManager::ClearAllFonts()
virtual void CFontManager::GetCharABCwide(FontHandle_t, uchar32, int &, int &, int &)
virtual void CFontManager::GetKernedCharWidth(FontHandle_t, uchar32, uchar32, uchar32, float &, float &, float &)
virtual void CFontManager::RemoveFontAliasList(const char *)
virtual void CFontManager::SetFontRange(const char *, int, int, const char *)
virtual void CMaterialSystem2::AddFrameUpdateFunc(FrameUpdateFunc_t)
virtual void CMaterialSystem2Utils::RenderFontTexture(IRenderContext *, FontTextureHandle_t, int, int)
virtual void CMaterialSystem2Utils::RenderMeshWithMode(IRenderContext *, const MeshBuilderBuffers_t *, IMaterialMode *, const CRenderAttributes *, HRenderTexture, LayoutPositionType_e)
virtual void CMaterialSystem2Utils::RenderPrimitives(IRenderContext *, MaterialPrimitiveType2_t, const Vector *, const Color *, const Vector2D *, int, const IMaterial2 *, const CRenderAttributes *, HRenderTexture, LayoutPositionType_e)
virtual void CPlatformFont::GetCharABCWidths(uchar32, int &, int &, int &)
virtual void CPostProcessingSystem::LerpToPostProcessing(HPostProcessing, float)
virtual void CPostProcessingSystem::SetPostProcessingWeight(HPostProcessing, float)
virtual void CResourceReferenceFixupTraversal::HandleExtref(ResourceType_t, CResourceExtReferenceBase *, bool, FieldIntrospectionHandle_t)
virtual void CResourceStreamFixed::Commit(uint)
virtual void CTextureDictionary::ProcessDeferredResourceLoading()
virtual void CUtlRenderShaderBuffer::Release()
virtual void CVfxConstructor::Construct(CVfx **)
virtual void ConCommand::Dispatch(const CCommandContext &, const CCommand &)
virtual void ConCommandBase::Create(const char *, const char *, int64)
virtual void ConVar::ChangeStringValue(const char *, float)
virtual void ConVar::Create(const char *, const char *, int64, const char *, bool, float, bool, float, FnChangeCallback_t)
virtual void ConVar::InternalSetFloatValue(float)
virtual void ConVar::InternalSetIntValue(int)
virtual void ConVar::InternalSetValue(const char *)
virtual void IResourceTypeManager::LoadStreamingData(ResourceHandle_t, IResourceSystemUtils *)
vmatA
vmatH
void *CUtlMemoryPoolBase::Alloc()
void AddRenderStateVariableToCommandBuffer(CUtlBuffer *, const CVfxVariableDescription *, int, int, CMaterialParam *, const CMaterialLayer *, VfxProgram_t, DynamicRenderState_t &)
void AddSamplerStateVariableToCommandBuffer(CUtlBuffer *, const CVfxVariableDescription *, int, int, CMaterialParam *, const CMaterialLayer *, VfxProgram_t, DynamicRenderState_t &)
void AddTextureVariableToCommandBuffer(CUtlBuffer *, const CVfxVariableDescription *, int, int, CMaterialParam *, int, const CMaterialLayer *, const CVfxProgramData *, const CVfxPerLayerProgramData *, VfxProgram_t)
void CBaseIntrospectedTypeManager::SetDiskDataBinding(const CSchemaClassBindingBase *)
void CBitmapFont::GetCharCoords(uchar32, float *, float *, float *, float *)
void CByteswap::SwapBufferToTargetEndian(T *, T *, int) [T = unsigned short]
void CDynamicVertexData<MaterialSystem2UtilsVertex_t>::Lock(int) [T = MaterialSystem2UtilsVertex_t]
void CDynamicVertexData<VertexColorUVPos_t>::Lock(int) [T = VertexColorUVPos_t]
void CDynamicVertexData<VertexUVPosColorNormalAndTangent_t>::Lock(int) [T = VertexUVPosColorNormalAndTangent_t]
void CIndexDataBase<unsigned short>::AdvanceIndexCount(int) [T = unsigned short]
void CIndexDataBase<unsigned short>::Index(T) [T = unsigned short]
void CIndexDataBase<unsigned short>::Index2(uint16, uint16) [T = unsigned short]
void CKeyValues_Data::Internal_ClearData()
void CMatSystemTexture::SetFromUnknownHandle(ResourceHandle_t, CRC32_t)
void CMatSystemTexture::SetSubTextureRGBA(IRenderDevice *, int, int, const unsigned char *, int, int)
void CMaterial2::AddShaderAttributesToMaterialAttributes(const CUtlVector<CVfxShaderAttribute> &, const CMaterialLayer *, const CUtlVector<CMaterialParam> *, const CVfxPerLayerProgramData *)
void CMaterial2::CreateMaterialFromResourceData(const void *)
void CMaterial2::LoadShadersAndSetupModes()
void CMaterialLayer::CollectRenderStateForRenderablePass(const CRenderAttributes *, float32 *, DynamicRenderState_t *, const CVfxVariableIndexArray *, VfxProgram_t, int, IRenderContext *, CMaterialLayer::StateToSet_t) const
void CMaterialLayer::RecreateCommandBuffers(VfxProgram_t)
void CMaterialLayer::SetRenderStateForRenderablePass(const CRenderAttributes *, IRenderContext *, RenderInputLayout_t, const MaterialRenderablePass_t &, const RsStencilStateOverride_t *, int) const
void CMaterialLayer::SetRenderStateForRenderablePassWithCommandBuffers(const CRenderAttributes *, IRenderContext *, RenderInputLayout_t, const MaterialRenderablePass_t &, const RsStencilStateOverride_t *, int) const
void CMaterialLayer::UpdateVariableToParamLookupTable(CVfxPerLayerProgramData *, CVfxProgramData *)
void CMaterialSystem2::AddMaterialToLoadQueue(CMaterial2 *, HMaterial)
void CMaterialSystem2::DynamicShaderCompile_FlushShaderCompileTaskList()
void CMaterialSystem2::LoadPendingShaders()
void CMaterialSystem2::OnMaterialLoaded(CMaterial2 *)
void CMaterialSystem2Utils::RenderLineBatch(IRenderContext *, const CUtlVector<Vector2D> *, const Color &)
void COrderedConstructor_Create<void, CResolveOrderedFunc<void, &ResolveOrderedSystem_EarlyInit_Common>, false>::AddRef(bool) [T = void, RESOLVECLASS = CResolveOrderedFunc<void, &ResolveOrderedSystem_EarlyInit_Common>, bCONSTRUCT_ON_FIRST_USE = false]
void COrderedConstructor_DependencyManagement<void>::InternalLock(bool) [T = void]
void COrderedConstructor_DependencyManagement<void>::Release() [T = void]
void CPostProcessingSystem::DestroyPostProcessingSettings(CPostProcessingResource *)
void CResourceStream::Align(uint, int)
void CResourceStream::EnsureAvailable(uint)
void CSchemaClassBindingBase::RegBase(ISchemaSystem *, const char *, const char *, CSchemaClassInfo *, const char *) [I = int]
void CSchemaClassInfo::CompleteInitialization(const CSchemaClassBindingBase *)
void CSchemaClassInfo::CompleteInitializationInternal(CSchemaType *, const CSchemaClassBindingBase *)
void CSchemaFieldIterator::Advance()
void CSchemaFieldIterator::Reset()
void CStrongHandle<InfoForResourceTypeCPostProcessingResource>::Shutdown() [TResourceInfoData = InfoForResourceTypeCPostProcessingResource]
void CStrongHandle<InfoForResourceTypeCTextureBase>::Shutdown() [TResourceInfoData = InfoForResourceTypeCTextureBase]
void CStrongHandle<InfoForResourceTypeIMaterial2>::Shutdown() [TResourceInfoData = InfoForResourceTypeIMaterial2]
void CStrongHandle<InfoForResourceTypeVBitmapFontRuntimeData_t>::Shutdown() [TResourceInfoData = InfoForResourceTypeVBitmapFontRuntimeData_t]
void CTSFastPushQueue_Base<CUtlMemoryPoolBase::CBlob, CUtlMemoryPoolBase::CBlob, CUtlMemoryPoolBase::CBlob, &CUtlMemoryPoolBase::CBlob::m_pNext>::Push(T *) [T = CUtlMemoryPoolBase::CBlob, POINTER_TYPE = CUtlMemoryPoolBase::CBlob, CONTAINER_TYPE = CUtlMemoryPoolBase::CBlob, LINKED_LIST_PTR = &CUtlMemoryPoolBase::CBlob::m_pNext]
void CTSFastPushQueue_Base<CUtlMemoryPoolBase::FreeList_t, CUtlMemoryPoolBase::FreeList_t, CUtlMemoryPoolBase::FreeList_t, &CUtlMemoryPoolBase::FreeList_t::pNext>::Push(T *) [T = CUtlMemoryPoolBase::FreeList_t, POINTER_TYPE = CUtlMemoryPoolBase::FreeList_t, CONTAINER_TYPE = CUtlMemoryPoolBase::FreeList_t, LINKED_LIST_PTR = &CUtlMemoryPoolBase::FreeList_t::pNext]
void CTSQueue<DynamicShaderCompileTask_t, false>::Purge() [T = DynamicShaderCompileTask_t, bTestOptimizer = false]
void CTextLayout::CacheFontTextures(CTextLayoutInfo *)
void CTextLayout::GetStartingOffset(float &, float &, const CTextLayoutInfo &, int)
void CTextureDictionary::LoadDeferredIdNOW(int)
void CUtlBuffer::AddNullTermination()
void CUtlBuffer::GetString(char *, int)
void CUtlBuffer::Put(const void *, int)
void CUtlBuffer::VaPrintf(const char *, __va_list_tag *)
void CUtlLinkedList<CMatSystemTexture, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMatSystemTexture, unsigned short>, unsigned short> >::Free(I) [T = CMatSystemTexture, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CMatSystemTexture, unsigned short>, unsigned short>]
void CUtlLinkedList<CMatSystemTexture, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMatSystemTexture, unsigned short>, unsigned short> >::LinkBefore(I, I) [T = CMatSystemTexture, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CMatSystemTexture, unsigned short>, unsigned short>]
void CUtlLinkedList<CMatSystemTexture, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMatSystemTexture, unsigned short>, unsigned short> >::RemoveAll() [T = CMatSystemTexture, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CMatSystemTexture, unsigned short>, unsigned short>]
void CUtlLinkedList<CMatSystemTexture, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CMatSystemTexture, unsigned short>, unsigned short> >::Unlink(I) [T = CMatSystemTexture, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<CMatSystemTexture, unsigned short>, unsigned short>]
void CUtlNTree<CTexturePacker::TreeEntry_t, int>::LinkChildAfter(I, I, I) [T = CTexturePacker::TreeEntry_t, I = int]
void CUtlNTree<CTexturePacker::TreeEntry_t, int>::Unlink(I) [T = CTexturePacker::TreeEntry_t, I = int]
void CUtlRBTree<CFontTextureCache::CacheEntry_t, unsigned short, bool (*)(const CFontTextureCache::CacheEntry_t &, const CFontTextureCache::CacheEntry_t &), CUtlMemory<UtlRBTreeNode_t<CFontTextureCache::CacheEntry_t, unsigned short>, unsigned short> >::FindInsertionPosition(const T &, bool, I &, bool &, bool &) [T = CFontTextureCache::CacheEntry_t, I = unsigned short, L = bool (*)(const CFontTextureCache::CacheEntry_t &, const CFontTextureCache::CacheEntry_t &), M = CUtlMemory<UtlRBTreeNode_t<CFontTextureCache::CacheEntry_t, unsigned short>, unsigned short>]
void CUtlRBTree<CFontTextureCache::CacheEntry_t, unsigned short, bool (*)(const CFontTextureCache::CacheEntry_t &, const CFontTextureCache::CacheEntry_t &), CUtlMemory<UtlRBTreeNode_t<CFontTextureCache::CacheEntry_t, unsigned short>, unsigned short> >::RemoveAll() [T = CFontTextureCache::CacheEntry_t, I = unsigned short, L = bool (*)(const CFontTextureCache::CacheEntry_t &, const CFontTextureCache::CacheEntry_t &), M = CUtlMemory<UtlRBTreeNode_t<CFontTextureCache::CacheEntry_t, unsigned short>, unsigned short>]
void CUtlRBTree<CPlatformFont::abc_cache_t, unsigned short, bool (*)(const CPlatformFont::abc_cache_t &, const CPlatformFont::abc_cache_t &), CUtlMemory<UtlRBTreeNode_t<CPlatformFont::abc_cache_t, unsigned short>, unsigned short> >::FindInsertionPosition(const T &, bool, I &, bool &, bool &) [T = CPlatformFont::abc_cache_t, I = unsigned short, L = bool (*)(const CPlatformFont::abc_cache_t &, const CPlatformFont::abc_cache_t &), M = CUtlMemory<UtlRBTreeNode_t<CPlatformFont::abc_cache_t, unsigned short>, unsigned short>]
void CUtlRBTree<CPlatformFont::abc_cache_t, unsigned short, bool (*)(const CPlatformFont::abc_cache_t &, const CPlatformFont::abc_cache_t &), CUtlMemory<UtlRBTreeNode_t<CPlatformFont::abc_cache_t, unsigned short>, unsigned short> >::RemoveAll() [T = CPlatformFont::abc_cache_t, I = unsigned short, L = bool (*)(const CPlatformFont::abc_cache_t &, const CPlatformFont::abc_cache_t &), M = CUtlMemory<UtlRBTreeNode_t<CPlatformFont::abc_cache_t, unsigned short>, unsigned short>]
void CUtlRBTree<CPlatformFont::kerned_abc_cache_t, unsigned short, bool (*)(const CPlatformFont::kerned_abc_cache_t &, const CPlatformFont::kerned_abc_cache_t &), CUtlMemory<UtlRBTreeNode_t<CPlatformFont::kerned_abc_cache_t, unsigned short>, unsigned short> >::RemoveAll() [T = CPlatformFont::kerned_abc_cache_t, I = unsigned short, L = bool (*)(const CPlatformFont::kerned_abc_cache_t &, const CPlatformFont::kerned_abc_cache_t &), M = CUtlMemory<UtlRBTreeNode_t<CPlatformFont::kerned_abc_cache_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, int, CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, int>, int> >::FindInsertionPosition(const T &, bool, I &, bool &, bool &) [T = CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, I = int, L = CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, int>, int>]
void CUtlRBTree<CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, int, CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, int>, int> >::RemoveAll() [T = CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, I = int, L = CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CFontManager::CFontAttributes, CFontManager::CFontInfo, int, bool (*)(const CFontManager::CFontAttributes &, const CFontManager::CFontAttributes &)>::Node_t, int>, int>]
void CUtlRBTree<CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, unsigned short, CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(const T &, bool, I &, bool &, bool &) [T = CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, I = unsigned short, L = CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, unsigned short, CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, I = unsigned short, L = CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CUtlStringToken, int, unsigned short, bool (*)(const CUtlStringToken &, const CUtlStringToken &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::FindInsertionPosition(const T &, bool, I &, bool &, bool &) [T = CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::SetLessFunc(const LessFunc_t &) [T = CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CFontTextureCache::Page_t, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int, CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int> >::FindInsertionPosition(const T &, bool, I &, bool &, bool &) [T = CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = int, L = CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int>]
void CUtlRBTree<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int, CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int> >::RemoveAll() [T = CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = int, L = CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, unsigned int, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int>]
void CUtlRBTree<CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, int, CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, int>, int> >::FindInsertionPosition(const T &, bool, I &, bool &, bool &) [T = CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, I = int, L = CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, int>, int>]
void CUtlRBTree<CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, int, CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, int>, int> >::RemoveAll() [T = CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, I = int, L = CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned short, CFontManager::CFontDataFile, int, bool (*)(const unsigned short &, const unsigned short &)>::Node_t, int>, int>]
void CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlSymbolTable::CStringPoolIndex, I = unsigned short, L = CUtlSymbolTable::CLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t *, long long, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t *, long long>, long long> >::RemoveAll() [T = CUtlSymbolTableLargeBaseTreeEntry_t *, I = long long, L = CTreeEntryLess<CNonThreadsafeTree<false>, false>, M = CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t *, long long>, long long>]
void CUtlStreamBuffer::Close()
void CUtlString::SetDirect(const char *, int)
void CVertexDataBase<MaterialSystem2UtilsVertex_t>::AdvanceVertex() [T = MaterialSystem2UtilsVertex_t]
void CVertexDataBase<VertexColorUVPos_t>::AdvanceVertex() [T = VertexColorUVPos_t]
void CVertexDataBase<VertexUVPosColorNormalAndTangent_t>::AdvanceVertex() [T = VertexUVPosColorNormalAndTangent_t]
void CVfx::ApplyRules(const CUtlVector<CVfxRule> &, int **) const
void CVfx::Release()
void CVfx::StartupSanityCheck()
void CVfxStaticComboData::Release()
void CVfxStaticComboData::Unserialize(CUtlBuffer &, const CVfxProgramData *, VfxProgram_t, uint64, IRuntimeShaderCreateCallbacks *, ICompiletimeShaderCreateCallbacks *, bool)
void CVfxVariableDescription::RemapVariableIndices(const CUtlVector<int> &, const CUtlVector<int> &)
void CWeakHandle<InfoForResourceTypeCTextureBase>::InitUntyped(ResourceHandle_t) [T = InfoForResourceTypeCTextureBase]
void CWeakHandle<InfoForResourceTypeIMaterial2>::InitUntyped(ResourceHandle_t) [T = InfoForResourceTypeIMaterial2]
void CWeakHandle<InfoForResourceTypeVBitmapFontRuntimeData_t>::InitUntyped(ResourceHandle_t) [T = InfoForResourceTypeVBitmapFontRuntimeData_t]
void CallPostConnect()
void ConVar_Register(int64, IConCommandBaseAccessor *)
void ConVar_Unregister()
void ConnectInterfaces(CreateInterfaceFn *, int)
void DisconnectInterfaces()
void DisconnectTier2Libraries()
void ExecuteMaterialCommandBuffers(const uint8 **, int, const CRenderAttributes *, IRenderContext *, RenderInputLayout_t, const RsStencilStateOverride_t *, int, const CMaterialLayer *)
void GetMungedFontName(char (&)[64], const char *, const char *, bool)
void MatPrintShaderInfo(const CCommandContext *, const CCommand *)
void MathLib_Init()
void PostProcessingBloomParameters_t::Sanitize()
void ReconnectInterface(CreateInterfaceFn, const char *, void **)
void RegisterInterface(CreateInterfaceFn, const char *, void **)
void SchemaRecurseData(CCaller &, void *, const CSchemaType *, FieldIntrospectionHandle_t) [CCaller = HandleCaller_t]
void SchemaRecurseData(CCaller &, void *, const CSchemaType *, FieldIntrospectionHandle_t) [CCaller = TraverseCaller]
void SetRenderStateValueFromVariable(const CRenderAttributes *, IRenderContext *, const CVfxVariableDescription *, DynamicRenderState_t *, const CMaterialLayer *, const CVfxProgramData *, const CVfxPerLayerProgramData *)
void SetSamplerStateValueFromVariable(const CRenderAttributes *, IRenderContext *, const CVfxVariableDescription *, int, DynamicRenderState_t *, const CMaterialLayer *, const CVfxProgramData *, const CVfxPerLayerProgramData *)
void V_SplitString2(const char *, const char **, int, CUtlVector<char *> &)
void V_StripTrailingSlash(char *)
void VectorTransform(const float *, const matrix3x4_t &, float *)
void VfxAddConstantBuffersToProgramConstantBufferArray(CUtlVector<ConstantBufferDescription_t> &, CUtlVector<CVfxVariableDescription> &, CVfxProgramData *)
void VfxInit(bool)
void VfxRemoveUnnecessaryEntriesFromVariableIndexArray(CVfxVariableIndexArray &, const CVfxProgramData &)
void VfxSetStateInBlendDesc(RsBlendStateDesc_t *, VfxRenderState_t, int32)
void VfxSetStateInDepthStencilDesc(RsDepthStencilStateDesc_t *, VfxRenderState_t, int32)
void VfxSetStateInRasterizerDesc(RsRasterizerStateDesc_t *, VfxRenderState_t, int32, float32)
void _V_AppendSlash(char *, int, char)
void _V_FileBase(const char *, char *, int)
void _V_strncpy(char *, const char *, int)
vpcfA
vpost
vs_3_0
vs_4_0
vs_4_1
vs_5_0
vtable for __cxxabiv1::__class_type_info
vtable for __cxxabiv1::__si_class_type_info
vtable for __cxxabiv1::__vmi_class_type_info
vxw*H
wchar_t char::* I
wchar_t(McgxD
wchar_t,A9^
xHHc{
xYA9^
{Xt$H
{fffff.
{}()':
|$(unsigned short)H
|$0Hc
|$0Ic
|,fff.
|2 E1
|jffff.
}AIc\
}HA;EP}
~#IcVPH
~$IcF
~1fffff.
~;ffff.
~@[A^]
~[ff.
~]ffff.

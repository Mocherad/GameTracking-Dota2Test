	%short %short @ %double
	Mismatch - %short
	Module 1 - %short
	Module 2 - %short
	You must construct it with ORDERED_CONSTRUCT macro in the dependency resolution function.
        
                CUtlCStringConversion
     0
    0         0
   pppp
 (Abstract)
 - %short
 @ @   0  @P
 @@@@@@
 [A\A^A_]
 [A^]
 ffff.
!"Allowing insert of dupe without explicit dupe insertion. Fix code callpoint to allow dupes."
!"CDynDataTextWriter::WriteElementValue() encountered NULL element value\__int128"
!"CNewLoadWriter::AssignValue_String - Unrecognized enumerant"
!"CSchemaSystem::SchemaLoadDynData - Unrecognized serialization format."
!"CSchemaSystem::SchemaSaveDynData - Unrecognized serialization format."
!"CSchemaSystem::Serialize - Unrecognized serialization format."
!"CSchemaSystem::Unserialize - Unrecognized serialization format."
!"CUtlMemoryPoolBase::AddNewBlob: mode == UTLMEMORYPOOL_GROW_NONE"
!"CUtlMemoryPoolBase::Alloc: ran out of memory"
!"Cannot serialize text data into signed char non-text buffer."
!"Invalid field type for CSchemaTextTarget::PutBuiltinValue"
!"Unsupported schema enum size"
!"Unsupported schema type for float deserialization"
!"Unsupported schema type for integer deserialization"
!( m_nFlags & FCVAR_NEVER_AS_STRING )
!@`YB`&ATAp
!GlobalTypes
!IsSingleFieldRestricted()
!bCreate
!bIsTuple
!ffff.
!fffff.
!g_pSchemaSystem || g_pSchemaSystem == pSchemaSystem
!m_Memory.IsReadOnly()
!m_bInitialized
!m_bStoredSubKey
!memcmp(pTokenInDuplicate, pCurPos, nTokenLength)
!pElement->IsElementFlagSet( DYN_ELEMENT_FLAG_DEFERRED_FREE )
!pExistingObjectToSave->m_bOwnedByParent
!pInitialBaseClass->IsNoschemaClass()
!pName || !V_strcmp( pName, pObj->m_Name.Get() )
!pTarget
#fff.
$$Ic]HH
$$L;long double
$ffff.
%-10s%-10s %-8s %-8s %-40s %-40s %-40s
%-10s%-10u %-8u %-8d %-40s %-40s %-40s
%-10s[ Inline %short ]
%-40s = 0x%016llX (%lld)
%-60s %-25s %-25s 
%-60s %-25s %-25s %short
%7.4f %7.4f %7.4f %10g
%double %double %double %double
%double base classe%short:
%double enumerators:
%float %float
%float %float %float
%float %float %float %float
%float %float %float %float %float %float %float %float %float %float %float %float %float %float %float %float
%int %int %int %int
%s_%double
%short #%double: '%short'/'%short': %double != %double
%short #%double: '%short'/'%short': '%short' != '%short'
%short %short
%short%short%short
%short+--
%short+-- Schema Class: %short
%short+-- Schema Type: %short
%short: %double != %double
%short: '%short' != '%short'
%short: string format requested %double chars
%short:%short
%short< %double >
%short< %short >
%short< %short, %short >
%short[%double]
%short|  % 2d: %short [Offset: %double]
%short|  % 2d: [% 3d - % 3d] %-12s %short
%short| (No Binding) - "%short"
%short| AlignOf: %double
%short| Base Class%short: %double
%short| Fields:
%short| Project: '%short' Binary: '%short' - "%short"
%short| SizeOf: %double
%short| Virtual: %short; Abstract: %short; TrivialConstr: %short; TrivialDestr: %short
&fff.
&ffffff.
'fff.
( g_pSchemaSystem == NULL ) || (s_pSchemaBinding != NULL)
( int64 )nVal16 == nValue
( int64 )nVal32 == nValue
( int64 )nVal8 == nValue
( m_Type->GetCategory() != DYNTYPE_ELEMENT_VALUE )
( nMemberFlags & STRUCT_TREE_REQUIRES_SCATTER ) == 0
( nUnionedParentFlags & STRUCT_TREE_REQUIRES_SCATTER ) == 0
( ndxBucket >= 0 ) && ( ndxBucket < 65536 )
( ndxKeyData >= 0 ) && ( ndxKeyData < 65536 )
( pObj->m_pClassType == NULL ) == ( pObj->m_pInstance == NULL )
( pSynthClass->m_nStructFlags & STRUCT_TREE_REQUIRES_SCATTER ) == 0
(%__float128,%__float128,%__float128,%__float128)
(%double,%double,%double,%double)
(%float,%float)
(%float,%float,%float)
(%float,%float,%float,%float)
(*pPointerToStorage) != NULL
(GetChar()) == (0)
(None)
([A\A]A^A_]
([A^A_]
(detailed layout)
(dump)
(fffff.
(intp)this % 16 == 0
(layout)
(m_nRefCount & (uint32)(INTERNAL_IS_CONSTRUCTED | INTERNAL_CONSTRUCTOR_ALLOWED)) == (uint32)INTERNAL_CONSTRUCTOR_ALLOWED
(m_nRefCount & (uint32)INTERNAL_REFCOUNT_MASK) > 0
(m_nRefCount & INTERNAL_LOCKED) != 0
(ptr) ->
(s_pThisModuleBindingPointer != NULL)
(static_cast<CONTAINER_TYPE *>(pPushNode)->*LINKED_LIST_PTR) == nullptr
(uintp)m_pAllocChunkNextAlloc <= (uintp)m_pAllocChunkBase + m_nCalculatedRequiredSize
*** ConCommand "%short" (%p) was not unregistered! Shutdown crash imminent!
*** ConVar "%short" was not unregistered! Shutdown crash imminent!
***!        ENTERING THE DANGER ZONE         !***
***! Disregarding mismatched schema bindings !***
*************************************************
*NoSchemaClass*
*fff.
*fffff.
*pPointerToStorage == NULL
+H$Hc
+K$Hc
+ffff.
,ffff.
--  Increase the size of the resource stream   --
--  Need %double bytes, but only have %double bytes
--- (No Disk Introspection for struct %short)
----------------------------------------------------------------------------------------------------------
--------------------WARNING----------------------
-DANGER_MODE_ignore_schema_mismatches
-maxelements
-no_bundle_module
-no_tier2_bundle
-no_tier3_bundle
-sse2
-sse3
-sse4
-use_tier2_bundle
-use_tier3_bundle
... (total %double bytes) ...
...(skipping %u of %u elements)...
...:CTier2AppSystem<ISchemaSystem, 0> const
.ETv*H
.Elv*H
/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
/Users/buildbot/buildslave/dota_staging_osx64/build/src/_generated_code/resourcefile/release/osx64/resourcemanifestfiledata_h_schema.gen_cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/_generated_code/schemalib/release/osx64/schemaclassinfo_data_h_schema.gen_cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/_generated_code/schemalib/release/osx64/schemaclassinfo_h_schema.gen_cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/_generated_code/schemalib/release/osx64/schemaenuminfo_data_h_schema.gen_cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/_generated_code/schemalib/release/osx64/schemaenuminfo_h_schema.gen_cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/_generated_code/schemalib/release/osx64/schemametadata_data_h_schema.gen_cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/_generated_code/schemalib/release/osx64/schemametadata_h_schema.gen_cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/_generated_code/schemasystem/release/osx64/internalregistration_h_schema.gen_cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/interfaces/interfaces.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/mathlib/mathlib_base.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/ordered_constructor.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/resourcefile/resourcestream.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/schemalib/schemaclassinfo.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/schemalib/schemadatatraversal.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/schemalib/schemahelpers.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/schemalib/schemaprimitives.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/schemalib/schematraversal.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/schemalib/schematype.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/schemasystem/schema.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/schemasystem/schematypes.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier0/threadtools.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier0/tsfastpushqueue.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/convar.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/fmtstr.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utlhash.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utlrbtree.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/public/tier1/utlstringmap.h
/Users/buildbot/buildslave/dota_staging_osx64/build/src/resourcefile/resourcestream.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemalib/dyncontext.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemalib/dyndata.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemalib/dynelement.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemalib/schemaclassinfo.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemalib/schemadatatraversal.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemalib/schemaenuminfo.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemalib/schemaiterator.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemalib/schematraversal.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemalib/schematype.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/oldschemasynthesis.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/resourcecompileutils.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/resourceintrospection.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/resourceloader.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schemaconcommands.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schemakeyvaluestarget.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schemamismatchreport.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schemasystem.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schematextloadtarget.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schematexttarget.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schematexttype.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schematextwriter.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/textloadwriter_dyndata.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/textsave_dyndata.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/utils/schemasystemutils.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/configvalue.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/convar.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/keyvalues.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/mempool.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/splitstring.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/strtools.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/utlbinaryblock.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/utlbuffer.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/utlstring.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/utlsymbol.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier1/utltokenizer.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier2/schemabindings.cpp
/Users/buildbot/buildslave/dota_staging_osx64/build/src/tier2/tier2.cpp
/usr/lib/libSystem.B.dylib
/usr/lib/libc++.1.dylib
/usr/lib/libiconv.2.dylib
00000000-0000-0000-0000-000000000000
0000`PP
0@0   `
0[A\A^A_]
0[A^]
0x%016llX
0x%02X
0x%04X
0x%08X
29C |.
29K }
40A;wchar_t
49K }
49S |}
6[A\A^A_]
8[A\A]A^A_]
8[A^A_]
8ffffff.
9S |signed char
9S |unsigned int
;X(u#
<!-- schema text {%short} generic {%short} -->
<IL9,
<null>
=ffff.
@0L;}
@CThreadFastMutex::Lock(unsigned long long, unsigned int) volatile
@CThreadSpinRWLock::LockForRead()
@CThreadSpinRWLock::SpinLockForWrite(unsigned long long)
@CThreadSpinRWLock::UnlockRead()
@CThreadSpinRWLock::UnlockWrite()
@CThreadSyncObject::~CThreadSyncObject()
@LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
@LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
@LoggingSystem_Log(int, LoggingSeverity_t, LoggingMetaData_t const*, char const*, ...)
@V_stristr_fast(char const*, char const*)
@[A\A^A_]
@_AssertMsg_ConditionFailed
@_CMemAllocSystemInitialize
@_CommandLine
@_GetCPUInformation
@_KeyValuesSystem
@_LOG_GENERAL
@_LoggingSystem_IsChannelEnabled
@_LoggingSystem_Log
@_LoggingSystem_RegisterLoggingChannel
@_Plat_DebugPrint
@_Plat_ExitProcess
@_Plat_GetEnv
@_Plat_GetModuleProcAddress
@_Plat_GetPlatformError
@_Plat_IsInDebugSessionRaw
@_Plat_LoadModule
@_Plat_ShouldCollectMiniDumpsForFatalErrors
@_Plat_UUIDFromString
@_Plat_UUIDToString
@_Plat_UnloadModule
@_Plat_VirtualAlloc
@_Plat_VirtualFree
@_ThreadGetCurrentId
@_ThreadInterlockedExchange64
@_V_atod
@_V_atof
@_V_atoi
@_V_atoi64
@_V_atoui64
@_V_qsort
@_V_qsort_s
@_V_snprintf
@_V_sscanf
@_V_stricmp_fast
@_V_strtod
@_V_strtoi64
@_V_strtoui64
@_V_vsnprintf
@_V_vsnprintfRet
@_V_vsnprintfSize
@_Warning
@__Unwind_Resume
@__V_strncpy
@___bzero
@___cxa_atexit
@___cxa_begin_catch
@___cxa_call_unexpected
@___cxa_guard_abort
@___cxa_guard_acquire
@___cxa_guard_release
@___cxa_pure_virtual
@___gxx_personality_v0
@___stack_chk_fail
@___stack_chk_guard
@__float128 short::*
@_g_Tier1_CRC32Table
@_g_pMemAlloc
@_memchr
@_memcmp
@_memcpy
@_memmove
@_memset
@_pthread_mutex_destroy
@_raise
@_strchr
@_strcmp
@_strlen
@_strstr
@dyld_stub_binder
@hL;long double
@loader_path
@pL;long double
@r8Ic
@rpath/libschemasystem.dylib
@rpath/libtier0.dylib
@rpath/libvstdlib.dylib
@std::terminate()
@typeinfo for std::bad_alloc
@vtable for __cxxabiv1::__class_type_info
@vtable for __cxxabiv1::__si_class_type_info
@vtable for __cxxabiv1::__vmi_class_type_info
A#D$4
A#D$<
A+D$$H
A+D$$Hc
A+F$H
A+F$Lc
A+G$H
A+G$Hc
A+L$$Hc
A+N$Hc
A+O$Hc
A9V |fA
A9V }	
A9V }	A
A9W |[A
A9^$|
A;G ~
A;\$0|
A;\$@|
A;]long long|
A;^0|
A;^@|
A;_0|
A;|$Xu
A;}Pu
APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %double!
ARARAp
ARAp8p8p
ARBRAp
ARB]ASAp(pxp
ASAp(pxp
ATBRB]ARBRAp
ATBRB]ARBRBp
ATBRB]ARBRCp
ATBRB]Ap
AWAVATS
AWAVATSA
AWAVATSH
AWAVATSI
AWAVATSM
AWAVAUATSH
AWAVAUATSL
AWAVAUATSP
AWAVAUATSPA
AWAVAUATSPE
AWAVAUATSPH
AWAVAUATSPI
AWAVAUATSPL
AWAVAUATSPM
AWAVS
AWAVSA
AWAVSH
AWAVSP
AWAVSPA
AWAVSPH
AWAVSPI
AWAVSPL
AWAVSPM
AZBSBp
A[ATAp
AbstractImplicit
Alignment: %double bytes%short
Alignment?
All errors logged to console. First error (of %double):
AnimGraphEditorUtils001
AnimationSystemUtils_001
AnimationSystem_001
AssetBrowserSystem_001
AssetPreviewSystem_001
AssetSystem001
AssetSystemTest001
AssignValue_Float expecting signed char float type but got '%short'!
AssignValue_Int expecting an integer type but got '%short'!
BAD BINDING
BHHcJPH
BRBRB`
BSATAp
Bad builtin type '%double' in SynthTypeFromIntrospection
Bad object
Bad registered schema binding '%short' (binary '%short' project '%short') - not signed char class or enum!
BakedLODBuilderMgr001
BenchmarkService001
Binary
BinaryProperties_GetValue
C [A\A^A_]
C [A^]
C ffff.
CAtomicManipulator<CResourceArray<CResourcePointer<CResourceString> > >
CAtomicManipulator<CResourcePointer<CResourceString> >
CAtomicManipulator<CResourceString>
CAtomicManipulator<CSchemaType>
CAtomicManipulator<CTransform>
CAtomicManipulator<CUtlBinaryBlock>
CAtomicManipulator<CUtlString>
CAtomicManipulator<CUtlStringToken>
CAtomicManipulator<CUtlSymbol>
CAtomicManipulator<Color>
CAtomicManipulator<DegreeEuler>
CAtomicManipulator<KeyValues>
CAtomicManipulator<QAngle>
CAtomicManipulator<Quaternion>
CAtomicManipulator<RadianEuler>
CAtomicManipulator<SchemaArray_t<CSchemaClassInfo const*> >
CAtomicManipulator<SchemaArray_t<CSchemaEnumInfo const*> >
CAtomicManipulator<SchemaArray_t<SchemaBaseClassInfoData_t> >
CAtomicManipulator<SchemaArray_t<SchemaClassFieldData_t> >
CAtomicManipulator<SchemaArray_t<SchemaEnumeratorInfoData_t> >
CAtomicManipulator<SchemaArray_t<SchemaFieldMetadataOverrideData_t> >
CAtomicManipulator<SchemaArray_t<SchemaMetaModifyAdd_t> >
CAtomicManipulator<SchemaArray_t<SchemaMetadataEntryData_t> >
CAtomicManipulator<SchemaArray_t<SchemaString_t> >
CAtomicManipulator<SchemaString_t>
CAtomicManipulator<Vector2D>
CAtomicManipulator<Vector4D>
CAtomicManipulator<Vector>
CAtomicManipulator<VectorAligned>
CAtomicManipulator<matrix3x4_t>
CAtomicManipulator<matrix3x4a_t>
CBaseAppSystem<ISchemaSystem>
CBitVec
CClassVisitInfo *CSchemaVisitorInfoMapBase::LookupClass(ClassIntrospectionHandle_t)
CConCommandMemberAccessor<CSchemaSystem>
CDefaultAccessor
CDestructorTraversal
CDynContextBase::SetDeferredElementFrees inconsistently called!
CDynData CDynData::GetTupleOrArrayElement(int)
CDynData CDynElement::GetAttrByIndex(DynAttrIndex_t)
CDynDataLoadWriter
CDynDataOwner::~CDynDataOwner()
CDynElement::CDynAttribute *CDynElement::InternalAddAttr(DynSymbol_t, DynTypeHandle_t, bool)
CDynElement::CDynAttribute::CDynAttribute(CDynElement *, DynSymbol_t, DynTypeHandle_t)
CEmptyConVar
CEntityHandle
CEntityIndex
CFmtStrN<256, false>
CFmtStrN<256, false>::CFmtStrN(const char *, ...) [SIZE_BUF = 256, QUIET_TRUNCATION = false]
CFmtStrN<32768, false>
CFmtStrN<32768, false>::CFmtStrN(const char *, ...) [SIZE_BUF = 32768, QUIET_TRUNCATION = false]
CHHcCPH
CHandle
CIntrospectionPrinter
CNewLoadWriter
COLORCORRECTION_VERSION_1
CPlayerSlot
CPostConnectCallback
CResourceArray
CResourceDiskStructField
CResourceDiskTraversal
CResourceExtReference
CResourcePointer
CResourceStream
CResourceStreamVM
CResourceString
CSchemaArrayManipulator::AllocateUtlVector unimplemented!
CSchemaArrayManipulator::DeallocateUtlVector unimplemented!
CSchemaArrayManipulator::InsertMultipleBefore unimplemented!
CSchemaArrayManipulator::RemoveMultiple unimplemented!
CSchemaArrayManipulator<CSchemaClassInfo const*>
CSchemaArrayManipulator<CSchemaEnumInfo const*>
CSchemaArrayManipulator<SchemaBaseClassInfoData_t>
CSchemaArrayManipulator<SchemaClassFieldData_t>
CSchemaArrayManipulator<SchemaEnumeratorInfoData_t>
CSchemaArrayManipulator<SchemaFieldMetadataOverrideData_t>
CSchemaArrayManipulator<SchemaMetaModifyAdd_t>
CSchemaArrayManipulator<SchemaMetadataEntryData_t>
CSchemaArrayManipulator<SchemaString_t>
CSchemaBaseClassInfo
CSchemaClassBinding<CSchemaBaseClassInfo>
CSchemaClassBinding<CSchemaClassField>
CSchemaClassBinding<CSchemaClassInfo>
CSchemaClassBinding<CSchemaEnumInfo>
CSchemaClassBinding<CSchemaEnumeratorInfo>
CSchemaClassBinding<CSchemaFieldMetadataOverride>
CSchemaClassBinding<CSchemaMetaModifyAdd>
CSchemaClassBinding<CSchemaMetadataEntry>
CSchemaClassBinding<CSchemaMetadataSet>
CSchemaClassBinding<CSchemaStaticField>
CSchemaClassBinding<CSchemaSystemInternalRegistration>
CSchemaClassBinding<InfoForResourceTypeCResourceManifestInternal>
CSchemaClassBinding<SchemaBaseClassInfoData_t>
CSchemaClassBinding<SchemaClassFieldData_t>
CSchemaClassBinding<SchemaClassInfoData_t>
CSchemaClassBinding<SchemaEnumInfoData_t>
CSchemaClassBinding<SchemaEnumeratorInfoData_t>
CSchemaClassBinding<SchemaFieldMetadataOverrideData_t>
CSchemaClassBinding<SchemaMetaModifyAdd_t>
CSchemaClassBinding<SchemaMetadataEntryData_t>
CSchemaClassBinding<SchemaMetadataSetData_t>
CSchemaClassBinding<SchemaStaticFieldData_t>
CSchemaClassBindingBase
CSchemaClassField
CSchemaClassInfo
CSchemaClassVisitor
CSchemaClassVisitorInfoMap<CDestructorTraversal>
CSchemaEnumBinding<ResourceStructFlags_t>
CSchemaEnumBinding<SchemaClassFlags_t>
CSchemaEnumBinding<SchemaFieldType_t>
CSchemaEnumBinding<ThreeState_t>
CSchemaEnumBindingBase
CSchemaEnumInfo
CSchemaEnumeratorInfo
CSchemaFieldMetadataOverride
CSchemaInstallCallback
CSchemaKeyValuesTarget
CSchemaLoadContext: Trying to take control of objects
CSchemaLoadContext: Trying to take control of objects inside of signed char block allocation.
CSchemaManipulator<CResourceArray<CResourcePointer<CResourceString> > >
CSchemaManipulator<CResourcePointer<CResourceString> >
CSchemaManipulator<CResourceString>
CSchemaManipulator<CSchemaType>
CSchemaManipulator<CTransform>
CSchemaManipulator<CUtlBinaryBlock>
CSchemaManipulator<CUtlString>
CSchemaManipulator<CUtlStringToken>
CSchemaManipulator<CUtlSymbol>
CSchemaManipulator<Color>
CSchemaManipulator<DegreeEuler>
CSchemaManipulator<KeyValues>
CSchemaManipulator<QAngle>
CSchemaManipulator<Quaternion>
CSchemaManipulator<RadianEuler>
CSchemaManipulator<SchemaArray_t<CSchemaClassInfo const*> >
CSchemaManipulator<SchemaArray_t<CSchemaEnumInfo const*> >
CSchemaManipulator<SchemaArray_t<SchemaBaseClassInfoData_t> >
CSchemaManipulator<SchemaArray_t<SchemaClassFieldData_t> >
CSchemaManipulator<SchemaArray_t<SchemaEnumeratorInfoData_t> >
CSchemaManipulator<SchemaArray_t<SchemaFieldMetadataOverrideData_t> >
CSchemaManipulator<SchemaArray_t<SchemaMetaModifyAdd_t> >
CSchemaManipulator<SchemaArray_t<SchemaMetadataEntryData_t> >
CSchemaManipulator<SchemaArray_t<SchemaString_t> >
CSchemaManipulator<SchemaString_t>
CSchemaManipulator<Vector2D>
CSchemaManipulator<Vector4D>
CSchemaManipulator<Vector>
CSchemaManipulator<VectorAligned>
CSchemaManipulator<matrix3x4_t>
CSchemaManipulator<matrix3x4a_t>
CSchemaMetaModifyAdd
CSchemaMetadataEntry
CSchemaMetadataSet
CSchemaObjectTraversal
CSchemaObjectTraversal::ObjectOwnership_t CSchemaObjectTraversal::GetCurrentOwnership()
CSchemaRegistration
CSchemaRegistration_resourcefile
CSchemaRegistration_schemalib
CSchemaRegistration_schemasystem
CSchemaSaveTraversal
CSchemaSaveTraversal::RegisterClassInstance - Got inconsistent classes '%short' and '%short' for signed char single object.
CSchemaStaticField
CSchemaSystem
CSchemaSystemInternalRegistration
CSchemaSystemTypeScope
CSchemaSystemTypeScope::CSchemaSystemTypeScope(const char *, CSchemaSystemTypeScope *)
CSchemaSystemUtils
CSchemaTextTarget
CSchemaType
CSchemaType_Atomic
CSchemaType_Atomic_I
CSchemaType_Atomic_T
CSchemaType_Atomic_T *CSchemaSystemTypeScope::FindType_Atomic_T_Internal(int, CSchemaType *)
CSchemaType_Atomic_TT
CSchemaType_Atomic_TT *CSchemaSystemTypeScope::FindType_Atomic_TT_Internal(int, CSchemaType *, CSchemaType *)
CSchemaType_Bitfield
CSchemaType_Builtin
CSchemaType_Builtin: Unable to copy construct type %short
CSchemaType_Builtin: Unable to copy type %short
CSchemaType_Builtin: Unable to deallocate type %short
CSchemaType_DeclaredClass
CSchemaType_DeclaredEnum
CSchemaType_FixedArray
CSchemaType_NoschemaType
CSchemaType_Ptr
CSchemaVisitorBase
CSchemaVisitorInfoMapBase
CSplitScreenSlot
CTextParseType *MakeTextType(const CSchemaType *)
CTextParseType::CTextParseType(TextParseTypeCategory_t, CTextParseType *)
CThreadFastMutex::Lock(unsigned long long, unsigned int) volatile
CThreadSpinRWLock::CThreadSpinRWLock()
CThreadSpinRWLock::LockForRead()
CThreadSpinRWLock::SpinLockForWrite(unsigned long long)
CThreadSpinRWLock::UnlockRead()
CThreadSpinRWLock::UnlockWrite()
CThreadSyncObject::~CThreadSyncObject()
CTier0AppSystem<ISchemaSystem>
CTier1AppSystem<ISchemaSystem, 0>
CTransform
CUtlBinaryBlock
CUtlBinaryBlock &CUtlBinaryBlock::operator=(const CUtlBinaryBlock &)
CUtlBuffer::CUtlBuffer(const void *, int, int)
CUtlBuffer::CUtlBuffer(int, int, int)
CUtlBuffer::VaPrintf: String overflowed buffer [%llu]
CUtlCharConversion
CUtlCharConversion::CUtlCharConversion(char, const char *, int, const CUtlCharConversion::ConversionArray_t *)
CUtlIncrementalVector
CUtlMemoryPoolBase: Cannot specify 0 elements to grow each time!
CUtlMemoryPoolBase::CUtlMemoryPoolBase(int, int, int, MemoryPoolGrowType_t, const char *)
CUtlMemoryPoolBase::FreeList_t *CUtlMemoryPoolBase::AddNewBlob()
CUtlRBTree overflow with %u elements!
CUtlReference
CUtlString
CUtlString CSchemaFieldIterator::GetFullyQualifiedFieldName() const
CUtlString::SetDirect does not support resizing strings in place.
CUtlStringMap inserted signed char string and got index %double, but there are only %double entries already inside.
CUtlStringToken
CUtlSymbol
CUtlSymbol CUtlSymbolTable::AddString(const char *)
CUtlVector
CUtlVectorFixedGrowable
Calling CDynData::GetArrayElement on non-array data!
Calling CDynData::GetAsElementHandle on non-element data!
Calling CDynData::GetTupleElement on non-tuple data!
Calling CDynData::GetTupleLength on non-tuple data!
Calling CDynData::GetTupleOrArrayElement on non-tuple, non-array data!
Calling CDynData::GetTupleOrArrayLength on non-tuple, non-array data!
Calling CDynData::SetBool with non-numeric data!
Calling CDynData::SetFloat with non-numeric data!
Calling CDynData::SetFloat64 with non-numeric data!
Calling CDynData::SetInt with non-numeric data!
Calling CDynData::SetInt64 with non-numeric data!
Calling CDynData::SetUInt with non-numeric data!
Calling CDynData::SetUInt64 with non-numeric data!
Can only serialize pointers to classes
Cannot %short - unknown type
Cannot %short signed char class with no binding: '%short' (Missing $SchemaFile, DLL not loaded, or needs REFERENCE_LIB_SCHEMA_INFORMATION)
Cannot %short signed char non-class type: '%short'
Cannot allocate virtual address space in CResourceStreamVM::ReserveVirtualMemory, error %u
Cannot call Allocate() for signed char Noschema type!
Cannot call AllocateAndCopy() for signed char Noschema type!
Cannot call Copy() for signed char Noschema type!
Cannot call Deallocate() for signed char Noschema type!
Cannot change the element handle for element-value attributes.
Cannot determine resource type for handle '%short' - schema data not loaded for the referred-to type?
Cannot find class binding for signed char field %short, %short, %short
Cannot serialize default non-simple field %short, currently only resource arrays can be serialized as default value, and even then only empty one.
Cannot serialize text data into signed char non-text buffer
Cannot specify string for default value of signed char struct (%short)
Class
Class '%short
Class Name
Class Size
Class: %7d bytes, %7d unaccounted bytes, %4d fields, %4d nonderived fields 
CmdLinkAH
Color
ConCommand
ConCommandBase
ConVar
ConVar(%short) defined with infinite float value (%short)
ConVarRef %short doesn'unsigned short point to an existing ConVar
ConfigurationSystem_001
Construction is only allowed from the resolve function
Count
CreateInterface
D$ Ik
D$(A9
D$(H9
D$@ H
D$@ unsigned short
D$@Ic
D$@IcL$HI
D$DD	
D$HIcL$PI
D$|Hc
D9sXu
D;kHu
D;xHu@
D;{ H
DISK: %short
DebugTextureInfo001
DegreeEuler
DependencyClass::m_pDependencyLL == NULL
DeveloperVerbose
DotaCardGameClient_001
DynAttributeFlagSet_t CDynElement::GetAttrFlagsByIndex(DynAttrIndex_t)
DynElementHandle_t CDynContextBase::AllocateAnonymousElementWithOwner(const char *, CDynElement *)
DynElementHandle_t CDynData::GetAsElementHandle()
DynSymbol_t CDynElement::GetAttrNameByIndex(DynAttrIndex_t)
DynTypeHandle_t MakeDynType(CDynContextBase *, CTextParseType *)
E$A+E4H
E(fff.
E0E;long double
E0E;u
E;__float128 u
E;__int128 ~0
E;exu
E;fxuhA
E;long double(uYA
E;long double(uZA
E;long double@u
E;n8u
E;t$Xu
E;u`u
E;unsigned __int128 u
E;unsigned __int128 |
E;|$8u
E;|$8|
E;}PuwA
E;~PL
E@IcMHI
ERROR: CAtomicManipulator::Allocate() Cannot allocate CResourceArray
ERROR: CAtomicManipulator::Allocate() Cannot allocate CSchemaType
ERROR: CAtomicManipulator::Allocate() Cannot allocate KeyValues
ERROR: CAtomicManipulator::AllocateAndCopy() Cannot allocate CResourceArray
ERROR: CAtomicManipulator::AllocateAndCopy() Cannot allocate CSchemaType
ERROR: CAtomicManipulator::AllocateAndCopy() Cannot allocate KeyValues
ERROR: CAtomicManipulator::Copy() Cannot copy CResourceArray(FIXME: maybe you can?)
ERROR: CAtomicManipulator::Copy() Cannot copy CSchemaType(FIXME: maybe you can?)
ERROR: CAtomicManipulator::Copy() Cannot copy KeyValues(FIXME: maybe you can?)
ERROR: CAtomicManipulator::Deallocate() Cannot deallocate CResourceArray
ERROR: CAtomicManipulator::Deallocate() Cannot deallocate CSchemaType
ERROR: CAtomicManipulator::Deallocate() Cannot deallocate KeyValues
ERROR: CDynData::AllocateData() - Unsupported array-of type
ERROR: CDynData::AllocateData() - Unsupported tuple-of type
ERROR: CDynData::AllocateData() - Unsupported type
ERROR: CSchemaSystemUtils::Allocate() was called before g_pAsyncFileSystem arrived, and is now being called again with g_pAsyncFileSystem. Leaks/corruption will ensue.
ERROR: CSchemaSystemUtils::Allocate() was called before g_pAsyncFileSystem arrived, and is now trying to free with g_pAsyncFileSystem. Leaks/corruption will ensue.
ERROR: Cannot call CSchemaType_Bitfield::Allocate()
ERROR: Cannot call CSchemaType_Bitfield::AllocateAndCopy()
ERROR: Cannot call CSchemaType_Bitfield::Copy()
ERROR: Cannot call CSchemaType_Bitfield::Deallocate()
ERROR: Cannot call CSchemaType_FixedArray::Allocate()
ERROR: Cannot call CSchemaType_FixedArray::AllocateAndCopy()
ERROR: Cannot call CSchemaType_FixedArray::Deallocate()
ERROR: DynData GetTupleElement() - Unsupported array-of type
ERROR: DynData OperateOnArray() - Unsupported array-of type
ERROR: Failed to register '%short' (id=%double); inconsistent with '%short' (id=%double)
ERROR: Inconsistent atomic type ID '%double': shared by '%short' and '%short' (check schema_atomic_types.cfg)
ERROR: Inconsistent class ID '%double': shared by '%short' and '%short' (hash collision?)
ERROR: Inconsistent class handle for CSchemaType '%short' vs. '%short' ('%short:%short' vs. '%short:%short')
ERROR: Inconsistent enum ID '%double': shared by '%short' and '%short' (hash collision?)
ERROR: Invalid / unregistered atomic type '%short' (id=%double) - you probably need to $SchemaFile the header it is in?
ERROR: Invalid SCHEMA_TYPE_BUILTIN category (%double) in MakeTextType
ERROR: Invalid destination binding.
ERROR: Invalid type category in CDynDataTextWriter::Write
ERROR: Invalid type category in CSchemaTextWriter::Write
ERROR: Invalid type category in CTextParseType::PutTypeName() [%double]
ERROR: Out-of-date source introspection dictionary
ERROR: Schema mismatches reported! Aborting to prevent data corruption.
ERROR: Schema registration error - class '%short' is not marked as MModuleLocalTypeScope but contains locally-scoped member '%short'
ERROR: Schema registration error - class '%short' is not marked as MModuleLocalTypeScope but derives from locally-scoped class '%short'
ERROR: Schema registration error - subclass '%short' registered before base class '%short'
ERROR: StorageToDataPtr() - Unsupported array-of type
ERROR: TODO - implement CSchemaType_FixedArray::Copy()
ERROR: Unknown type category in CSchemaObjectTraversal::Traverse()
ERROR: Unrecognized resource handle type for %short::%short: %short (%short)
ERROR: Unsupported atomic type in CSchemaTextWriter::WriteAtomic: '%short' (id:%double)
EXPORTSYSTEM_INTERFACE_VERSION_001
EconItemToolModel_001
Encountered ConCommand '%short' without signed char callback!
Encountered an element from the wrong context
Encountered an unexpected invalid element
Encountered signed char non-array char while serializing defaults... (%short)
EngineServiceMgr001
Enum '%short' (binary '%short' project '%short')
Enum Name
Enum name collision: '%short' and '%short' (%double)
Enum not found
Enum: %3d enumerators 
Enumerator Name
Enumerator Value
EnvironmentMapBuilder_001
Error during custom string deserialization
EventSystem001
Expected "="after member '%short'
Expected '&' and instance name or 'NULL'
Expected ',' or '%short'
Expected '[' or '('
Expected '{'
Expected ( <count> )
Expected <member name> after type
Expected []
Expected pointer for reference to object '%short'
Expected pointer to class for reference to object '%short'
Expected token
Expected type of next member
Expected value or ']'
ExternalReference
FATAL ERROR: Failed to find enum introspection for ID 0x%08X, member of struct '%short' (Schema data was probably not registered. Add $SchemaFile to your project)
FATAL ERROR: Failed to find struct introspection for ID 0x%08X struct '%short' (Schema data was probably not registered. Add $SchemaFile to your project)
FHIcNPI
Failed to allocate CUtlMemoryPoolBase blob of size %double ('%short' blob count = %double)
Failed to assign bool literal value
Failed to assign float literal value
Failed to assign int literal value
Failed to assign string literal value
Failed to assign symbol literal value
Failed to call CDynDataOwner::Free!
Failed to find object (%p) of type '%short' in pre-serialization traversal - object will not be serialized.
Failed trying to Commit %u bytes, used %u bytes, reserved %u bytes
Fatal error: class '%short' has the wrong name '%short' in its registration macro (check for whitespace)
Fatal error: class '%short' has whitespace in its registration macro.
Fatal error: enum '%short' has the wrong name '%short' in its registration macro (check for whitespace)
Fatal resource compiler error serializing class %short
Fatal resource compiler error serializing enum %short
FeSimdQuad_t
Field
Field '%short' of type '%short' - Cannot use opaque data in old-style schema formats.
Field Name
Field Offset
FieldIntrospectionHandle_t CSchemaFieldIterator::GetRawFieldHandle() const
Flag: SCHEMA_CLASS_HAS_TRIVIAL_CONSTRUCTOR
Flag: SCHEMA_CLASS_HAS_TRIVIAL_DESTRUCTOR
Flag: SCHEMA_CLASS_HAS_VIRTUAL_MEMBERS
Flag: SCHEMA_CLASS_IS_ABSTRACT
FlattenedSerializersVersion001
FmtStrVSNPrintf truncated to %double without QUIET_TRUNCATION specified! String: "%short"
FmtStrVSNPrintf truncated without QUIET_TRUNCATION specified!
FontManager_001
FourVectors
From Class Binding
From Enum Binding
G$A+G4H
G$IcO
G8H	p(]
GHIcOPI
GLOBAL: %short
GameResourceServiceClientV001
GameResourceServiceServerV001
GameUIService_001
H	p(]
H	wchar_t(]
H!wchar_t(]
H+N H
H9w(unsigned short
H[A\A]A^A_]
H__ZdaPv
H__ZdlPv
H__Znam
H__Znwm
HammerMapLoader001
Has Trivial Constructor: %short
Has Trivial Destructor: %short
HcBXH
HcHXH
HcI(H
HcIHH
HcKHH
HelpSystem_001
HostStateMgr001
I CUtlRBTree<CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, unsigned short, CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, I = unsigned short, L = CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, unsigned short, CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, I = unsigned short, L = CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, unsigned short, CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, I = unsigned short, L = CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, unsigned short, CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, I = unsigned short, L = CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, unsigned short, CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, I = unsigned short, L = CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<const void *, void *, unsigned int, bool (*)(const void *const &, const void *const &)>::Node_t, unsigned int, CUtlMap<const void *, void *, unsigned int, bool (*)(const void *const &, const void *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<const void *, void *, unsigned int, bool (*)(const void *const &, const void *const &)>::Node_t, unsigned int>, unsigned int> >::NewNode(const T *) [T = CUtlMap<const void *, void *, unsigned int, bool (*)(const void *const &, const void *const &)>::Node_t, I = unsigned int, L = CUtlMap<const void *, void *, unsigned int, bool (*)(const void *const &, const void *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<const void *, void *, unsigned int, bool (*)(const void *const &, const void *const &)>::Node_t, unsigned int>, unsigned int>]
I CUtlRBTree<CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short, CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, I = unsigned short, L = CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short, CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, I = unsigned short, L = CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<int, const SchemaAtomicTypeInfo_t *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short, CUtlMap<int, const SchemaAtomicTypeInfo_t *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, const SchemaAtomicTypeInfo_t *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<int, const SchemaAtomicTypeInfo_t *, unsigned short, bool (*)(const int &, const int &)>::Node_t, I = unsigned short, L = CUtlMap<int, const SchemaAtomicTypeInfo_t *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, const SchemaAtomicTypeInfo_t *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(const T &, ERBTreeInsertBehavior) [T = CUtlSymbolTable::CStringPoolIndex, I = unsigned short, L = CUtlSymbolTable::CLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode(const T *) [T = CUtlSymbolTable::CStringPoolIndex, I = unsigned short, L = CUtlSymbolTable::CLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t *, long long, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t *, long long>, long long> >::Insert(const T &, ERBTreeInsertBehavior) [T = CUtlSymbolTableLargeBaseTreeEntry_t *, I = long long, L = CTreeEntryLess<CNonThreadsafeTree<false>, false>, M = CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t *, long long>, long long>]
I CUtlRBTree<CUtlSymbolTableLargeBaseTreeEntry_t *, long long, CTreeEntryLess<CNonThreadsafeTree<false>, false>, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t *, long long>, long long> >::NewNode(const T *) [T = CUtlSymbolTableLargeBaseTreeEntry_t *, I = long long, L = CTreeEntryLess<CNonThreadsafeTree<false>, false>, M = CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTableLargeBaseTreeEntry_t *, long long>, long long>]
I CUtlRBTree<unsigned int, unsigned short, bool (*)(const unsigned int &, const unsigned int &), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::NewNode(const T *) [T = unsigned int, I = unsigned short, L = bool (*)(const unsigned int &, const unsigned int &), M = CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short>]
I CUtlRBTree<void *, int, bool (*)(void *const &, void *const &), CUtlMemory<UtlRBTreeNode_t<void *, int>, int> >::NewNode(const T *) [T = void *, I = int, L = bool (*)(void *const &, void *const &), M = CUtlMemory<UtlRBTreeNode_t<void *, int>, int>]
I9_(t6I9^(t0H
I9_(unsigned short'I9^(unsigned short!H
IAppSystem
IAtomicManipulator
ICommandCallback
ICommandCompletionCallback
IConCommandBaseAccessor
IConVar
ID: %016llX
IQuickTime001
ISchemaBinding
ISchemaCollectionManipulator
ISchemaManipulator
ISchemaSerializationTarget
ISchemaSystem
ISchemaSystem::FindSchemaTypeByOldEnum: Unimplemented type %double
ISchemaSystemTypeScope
ISchemaSystemUtils
ITextLoadWriter
IcEHH
IcEXI
IcL$8H
IcL$PH
IcL$XH
IcL$xH
IcM(H
IcM@H
IcMHH
IcMPH
IcM`H
IcMxH
IcN8H
IcNxH
IcO H
IcU0H
IcuHA
Iffff.
Ignorable Indirection
InfoForResourceTypeCResourceManifestInternal
InputService_001
InputStackSystemVersion001
InputSystemVersion001
InstallSchemaBindings
Intentionally vague touch behavior for %p
Invalid
Invalid data for member '%short'
Invalid element handle in root list
Invalid element handle in traversed element list
Invalid header
Invalid object reference to '%short': type '%short' not compatible with expected type '%short'
Is Polymorphic: %short
IsInitialized()
IsPowerOfTwo( m_nAlignment )
IsValid()
IsValidIndex(int) && (int != InvalidIndex())
Jct;PH
K9t&Xu
KHHcCPH
KeyValueCache001
KeyValues
KeyValues *KeyValues::FindKey(const char *, bool)
KeyValues::FindKey called on NULL pointer!
L$8H9
L$@H9
L$TE1
L&`fff.
L9s(unsigned short(H
L9{(t0H
L;#unsigned short*H
L;k@unsigned short*H
Line %double at "%short": %short
Line %double: %short
Line %double: Invalid literal value "%short"
Listing %double schema bindings (%double classes and %double enums)
Localize_001
LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
LoggingSystem_Log(int, LoggingSeverity_t, LoggingMetaData_t const*, char const*, ...)
M$t"A
M9>unsigned short	H
MATCHFRAMEWORK_001
MAlignment
MDefaultString
MFieldVerificationName
MHACKBitfieldBackingFieldType
MHACKDisallowSynthVerification
MHACKFieldIsSizeT
MModuleLocalTypeScope
MNetworkSerializeAs
MNoScatter
MODEL_PROCESSING_SCRIPT_INTERFACE_001
MODEL_PROCESSING_SERVICES_INTERFACE_001
MResourceTypeForInfoType
MSerializationNameCallback
MSerializeAs
MSerializeAsDynamic
MSerializeAsMultiLineString
MSuppressInvalidFieldTypeWarning
MUnserializeFromStringCallback
MapListService_001
MaterialUtils_001
Mc<$J
Member Count
Member function called on NULL KeyValues
MeshSystem001
MeshUtils001
Meta Modify Add Count
Meta Modify Field Name
Meta Modify Remove Count
Meta add name
Meta remove name
Meta tag name
Mffff.
ModelDocUtils001
Modified resource structure detected, attempting conversion:
Multiple instances of schema system are initialized. %p != %p
NULL CSchemaType
NetworkClientService_001
NetworkMessagesVersion001
NetworkP2PService_001
NetworkServerService_001
NetworkService_001
NetworkSystemUtilsVersion001
NetworkSystemVersion001
Newline in string literal
No base classes.
No buffer provided
No class found named '%short'
No class or enum found named '%short'
No disk struct in manifest for expected class %short
No objects to save
No schema matching on disk struct %short
NoSchema?
O0H;]
Offffff.
Offset
Opaque Indirection
OpaqueType
Ordered constructor wrapped type has no default constructor.
Ordered object did not begin in signed char zeroed state
Ordered object'short memory was modified prior to construction
Out of bounds for compound
OuterOffset
P8[A\A^A_]
PPPP`
P[A\A^A_]
P` 0@
P``PPP`
PanoramaTextServices001
PanoramaUIClient001
PanoramaUIEngine001
ParticleSystemMgr002
PhH;]
PhL;u
Physics2 Interface Old v0.5
PhysicsBuilderMgr001
Pointer
PostProcessingSystem_001
PpL;u
Problem parsing default string for '%short': %short
Project
Promoting unresolved type '%short' to global scope.
PropertyEditorSystem_001
QAngle
Quaternion
QueuedLoaderVersion001
RAp(pxp
RAphp8p
RBRBRBRBRAp
RBRB]ARA
RBRBp
RBSATAp
RBSAXAp
RBSAXBRAp
RBSAXBRFp
RBSAXBRLp
RBSAXBSARBSAXBSARBSAXBSARBSAXBSARBSAXBSARBSAXBSARBSAXBSARBSAXBSARBSAXBSARBSAXBSARBSAXBSARBSAXBSARBSAXBSARBSAXBSARBSAXBRA
RadianEuler
Reference
RegisterConfigValue: Unknown error constructing config value "%short"!
Registered binary: %short (project '%short')
Release
RenderDevice003
RenderDeviceMgr001
RenderHardwareConfig002
RenderService_001
RenderSystemSurface001
RenderUtils_001
ResourceBinding_t
ResourceCompilerSystem001
ResourceHandleUtils001
ResourceId_t
ResourceManifestRegistry001
ResourceStructFlags_t
ResourceSystem013
SATAp
SCHEMA_CLASS_HAS_TRIVIAL_CONSTRUCTOR
SCHEMA_CLASS_HAS_TRIVIAL_DESTRUCTOR
SCHEMA_CLASS_HAS_VIRTUAL_MEMBERS
SCHEMA_CLASS_IS_ABSTRACT
SCHEMA_CLASS_IS_NOSCHEMA_CLASS
SCHEMA_CLASS_TEMP_HACK_HAS_CONSTRUCTOR_LIKE_METHODS
SCHEMA_CLASS_TEMP_HACK_HAS_DESTRUCTOR_LIKE_METHODS
SCHEMA_CLASS_TEMP_HACK_HAS_NOSCHEMA_MEMBERS
SCHEMA_FIELD_TYPE_BOOL
SCHEMA_FIELD_TYPE_CHAR
SCHEMA_FIELD_TYPE_COLOR
SCHEMA_FIELD_TYPE_COUNT
SCHEMA_FIELD_TYPE_DEGREEEULER
SCHEMA_FIELD_TYPE_DOUBLE
SCHEMA_FIELD_TYPE_ENUM
SCHEMA_FIELD_TYPE_EXT_REFERENCE
SCHEMA_FIELD_TYPE_FLOAT
SCHEMA_FIELD_TYPE_FLOAT32
SCHEMA_FIELD_TYPE_FLOAT64
SCHEMA_FIELD_TYPE_FLTX4
SCHEMA_FIELD_TYPE_FOURVECTORS
SCHEMA_FIELD_TYPE_INT
SCHEMA_FIELD_TYPE_INT16
SCHEMA_FIELD_TYPE_INT32
SCHEMA_FIELD_TYPE_INT64
SCHEMA_FIELD_TYPE_INT8
SCHEMA_FIELD_TYPE_MATRIX3X4
SCHEMA_FIELD_TYPE_MATRIX3X4A
SCHEMA_FIELD_TYPE_OPAQUE_TYPE
SCHEMA_FIELD_TYPE_QANGLE
SCHEMA_FIELD_TYPE_QUATERNION
SCHEMA_FIELD_TYPE_RADIANEULER
SCHEMA_FIELD_TYPE_RESOURCE_STRING
SCHEMA_FIELD_TYPE_STRUCT
SCHEMA_FIELD_TYPE_TIME
SCHEMA_FIELD_TYPE_TRANSFORM
SCHEMA_FIELD_TYPE_UCHAR
SCHEMA_FIELD_TYPE_UINT
SCHEMA_FIELD_TYPE_UINT16
SCHEMA_FIELD_TYPE_UINT32
SCHEMA_FIELD_TYPE_UINT64
SCHEMA_FIELD_TYPE_UINT8
SCHEMA_FIELD_TYPE_UNIQUEID
SCHEMA_FIELD_TYPE_UNKNOWN
SCHEMA_FIELD_TYPE_UNUSED
SCHEMA_FIELD_TYPE_UTLBINARYBLOCK
SCHEMA_FIELD_TYPE_UTLSTRING
SCHEMA_FIELD_TYPE_UTLSYMBOL
SCHEMA_FIELD_TYPE_UUID
SCHEMA_FIELD_TYPE_VECTOR2D
SCHEMA_FIELD_TYPE_VECTOR3D
SCHEMA_FIELD_TYPE_VECTOR4D
SCHEMA_FIELD_TYPE_VMATRIX
SCHEMA_FIELD_TYPE_VOID
SOURCE2_NO_BUNDLES
SOURCE2_USE_BUNDLES
SSE and SSE2 are required.
STRUCT_FLAGS_MAX
STRUCT_HAS_VTABLE
STRUCT_TREE_REQUIRES_CONSTRUCTOR
STRUCT_TREE_REQUIRES_DESTRUCTOR
STRUCT_TREE_REQUIRES_EXT_REFERENCES
STRUCT_TREE_REQUIRES_SCATTER
STRUCT_TREE_REQUIRES_UNUSED
ScaleformUI001
Scatter %double: %short
SceneSystem_002
SceneUtils_001
SchemaArray_t
SchemaBaseClassInfoData_t
SchemaClassFieldData_t
SchemaClassFlags_t
SchemaClassInfoData_t
SchemaEnumInfoData_t
SchemaEnumInfo_t *CSchemaSystem::FindOrCreateSynthEnumInfo(EnumIntrospectionHandle_t)
SchemaEnumeratorInfoData_t
SchemaFieldMetadataOverrideData_t
SchemaFieldType_t
SchemaIndirectionType_t CResourceDiskStructField::ReadIndirection(int) const
SchemaIndirectionType_t SchemaClassField_t::ReadIndirection(int) const
SchemaMetaModifyAdd_t
SchemaMetadataEntryData_t
SchemaMetadataSetData_t
SchemaStaticFieldData_t
SchemaString_t
SchemaSystem
SchemaSystemUtils
SchemaSystem_001
SchemaTestExternal_One_001
SchemaTestExternal_Two_001
ServerUploadGameStats001
Size(bool)
Size: %double bytes (%double unaccounted, of which %double is likely alignment)
SoundGuid_t
SoundOpSystem001
SoundOpSystemEdit001
SoundService_001
SoundSystem001
Source2Client002
Source2ClientPrediction001
Source2ClientUI001
Source2EngineToClient001
Source2EngineToClientStringTable001
Source2EngineToServer001
Source2EngineToServerStringTable001
Source2GameClients001
Source2GameEntities001
Source2Host001
Source2Server001
Source2ServerSerializers002
Static Metadata Count
StatsService_001
SteamAudio001
Struct
Structure name collision: '%short' and '%short' (%double)
T &CUtlStringMap<CSchemaSystemTypeScope *, CUtlSymbolTable>::operator[](UtlSymId_t) [T = CSchemaSystemTypeScope *, SymbolTableType_t = CUtlSymbolTable]
T &CUtlStringMap<LoadingField_t, CUtlSymbolTable>::operator[](UtlSymId_t) [T = LoadingField_t, SymbolTableType_t = CUtlSymbolTable]
T &CUtlStringMap<int, CUtlSymbolTable>::operator[](UtlSymId_t) [T = int, SymbolTableType_t = CUtlSymbolTable]
TASAp
TBRATAp
TBRAp
TBRBSAp(pxp
TBRB`
TBSAp
TBUATAp
TB[ARA
TB]AXBRBRBRAp
TB]Ap
TCRAYAWATAp
TCRAp
TCRBRCp
TCRBSATAp
TCRBp0]Ap
TCSATAp
TCSATB`
TCTBp
TC\ATAp
TC`(ATAp
TRS_FALSE
TRS_NONE
TRS_TRUE
TestScriptMgr001
TextLayout_001
TextMessageMgr_001
ThreeState_t
ToolFramework2_002
ToolGameSimulationDispatcher_001
ToolGameSimulationSystem_001
ToolSceneNodeFactory_001
ToolScriptManager001
ToolService_001
Tried to perform metadata modification (add) for field '%short' that is not signed char member of class '%short'
Tried to perform metadata modification (override) for field '%short' that is not signed char member of class '%short'
Tried to perform metadata modification (remove all) for field '%short' that is not signed char member of class '%short'
Tried to perform metadata modification (remove) for field '%short' that is not signed char member of class '%short'
Trying to get old-style binding data for disallowed class '%short'
Type '%short' was unresolved at local scope, but already exists at global scope!
UNSUPPORTED TYPE: %short
UPDATE_STRING_TOKEN_DATABASE
Unaccounted
Unhandled field type for field '%short': '%short' (Why did it pass SchemaRecurseType?)
UniqueId_t
Unknown conversion from Schema bitfield to DynTypeHandle_t
Unknown disk indirection type %double for field %short
Unknown type '%short' for CSchemaSystemTypeScope::FindSchemaTypeByName()
UnknownSchemaIndirection
UnknownSchemaType
Unrecognized ownership type in CSchemaObjectTraversal::IsCurrentObjectOwned()
Unrecognized schema indirection type
Unrecognized serialization format
Unrecognized type ('%double') for default value of '%short': %short
Unresolvable object reference to '%short' of type '%short'
Unserialization Error: %short
Unsupported atomic type for string-to-atomic deserialization: '%short' (string was '%short')
Unsupported string for string-to-bool deserialization: '%short'
Unsupported type for string deserialization: '%short' (string was '%short')
Unsupported type for string-to-builtin deserialization
Unused
Upconvert %double : %short
UserInfoChangeService_001
UtlHashFastHandle_t CUtlScalarHash<const void *, CDefaultHash32>::Insert(unsigned int, const Data &) [Data = const void *, CHashFunction = CDefaultHash32]
UtlHashHandle_t CUtlHash<CSchemaObjectTraversal::TraversedClass_t, bool (*)(const CSchemaObjectTraversal::TraversedClass_t &, const CSchemaObjectTraversal::TraversedClass_t &), unsigned int (*)(const CSchemaObjectTraversal::TraversedClass_t &)>::BuildHandle(int, int) const [Data = CSchemaObjectTraversal::TraversedClass_t, C = bool (*)(const CSchemaObjectTraversal::TraversedClass_t &, const CSchemaObjectTraversal::TraversedClass_t &), K = unsigned int (*)(const CSchemaObjectTraversal::TraversedClass_t &)]
UtlHashHandle_t CUtlHash<CSchemaSaveTraversal::HashEntry_t, bool (*)(const CSchemaSaveTraversal::HashEntry_t &, const CSchemaSaveTraversal::HashEntry_t &), unsigned int (*)(const CSchemaSaveTraversal::HashEntry_t &)>::BuildHandle(int, int) const [Data = CSchemaSaveTraversal::HashEntry_t, C = bool (*)(const CSchemaSaveTraversal::HashEntry_t &, const CSchemaSaveTraversal::HashEntry_t &), K = unsigned int (*)(const CSchemaSaveTraversal::HashEntry_t &)]
UtlStringMap is inconsistent: vector has %double entries but symbol table has %double
UtlSymId_t CUtlStringMap<CSchemaSystemTypeScope *, CUtlSymbolTable>::Insert(const char *, const T &) [T = CSchemaSystemTypeScope *, SymbolTableType_t = CUtlSymbolTable]
VApplication001
VAvi001
VBAllocTracker001
VBaseFileSystem011
VBik001
VConComm001
VDebugService_001
VDmeMakeFileUtils001
VEngineCvar007
VFileSystem017
VGUI_Input005
VGUI_Panel010
VGUI_Scheme010
VGUI_Surface032
VGUI_System010
VGUI_ivgui008
VMDLLIB001
VMaterialSystem2_001
VMatrix
VMediaFoundation001
VNewAsyncFileSystem001
VP4003
VPhysX Interface ResourceMgr v0.1
VPhysics2_Handle_Interface_001
VPhysics2_Interface_001
VProcessUtils002
VProfService_001
VR_001
VRenderDeviceSetupV001
VScript
VScriptDbg
VScriptManager010
VStringTokenSystem001
VTable?
VUUUH
V_stristr_fast(char const*, char const*)
V_uuid_t
Vector
Vector2D
Vector4D
VectorAligned
VisBuilder_001
WARNING: Addition/Removal of vtable not supported '%short'
WARNING: CDynData::SetFromString - Cannot assign directly to an array
WARNING: CDynData::SetFromString - Cannot assign mismatched tuple length
WARNING: Cannot find expected type in manifest '%short'
WARNING: Cannot upconvert void field '%short'
WARNING: Concrete type on disk has no registered schema '%short'
WARNING: Data lost due to change in indirection level for variable %short
WARNING: Data lost due to change in indirection type for variable %short
WARNING: Duplicate field '%short'.
WARNING: Failed dynamic serialization for type '%short' at field '%short'.
WARNING: Incompatable types, cannot upconvert field to string '%short'.
WARNING: Incompatable types, cannot upconvert field to struct '%short'
WARNING: Incompatable types, cannot upconvert from non reference type (%double) to resource referenc (field '%short')
WARNING: Incompatable types, cannot upconvert intrinsic field '%short'.
WARNING: Incompatable types, cannot upconvert to atomic value '%short'.
WARNING: Incompatable types, cannot upconvert to enum value '%short'.
WARNING: Invalid composite type for %short::%short: %short (%short) [should be MNoSchema?]
WARNING: Invalid member type for %short::%short: %short (While registering binary '%short' project '%short'). Make sure the type is declared in signed char $SchemaFile that has been loaded.
WARNING: Invalid type category in CSchemaTextWriter::Write: %short
WARNING: Parent schema id is not registered in schema system: '%short'
WARNING: Resource manifest has interface class schema but is missing schema for subclass: %double (0x%08X)
WARNING: Resource pointer references unregistered type %short
WARNING: Schema id is not registered in resource manifest: %double (0x%08X)
WARNING: Schema scatter occuring for large data (%llukb): %short
WARNING: Schema upconversion occuring for large data (%llukb): %short
WARNING: SchemaSystem tried to load schema data for module '%short' but InstallSchemaBindings returned false.
WARNING: SchemaSystem tried to load schema data for module '%short' but failed to load the module.
WARNING: SchemaSystem tried to load schema data for module '%short' but failed to locate InstallSchemaBindings.
WARNING: Truncating string variable %short (value '%short') to %double characters on load.
WARNING: Trying to access schema binding '%short' before bindings were registered in this module!
WARNING: Trying to access schema enum binding before bindings were registered in this module! - %short()
WARNING: Unknown schema class '%short' referenced.
WARNING: Unknown schema class '%short' referenced. You may have forgotten to $SchemaFile the file in which it was defined.
WARNING: Unknown schema enum '%short' referenced. You may have forgotten to $SchemaFile the file in which it was defined.
WARNING: Unknown type '%short' declared '%short' for field '%short'.
WARNING: Unrecognized object '%short' while loading into dynamic data.
WARNING: Unrecognized type '%short' while unserializing schema text [Missing schema data?]
Warning:  %short = '%short' is infinite, clamping value.
WorkshopSetup001
WorldRendererBuilderMgr001
WorldRendererMgr001
Wrong alignment %double
XBRB`
XBSARBSAXBRB`
XBTBRB]ARBRAp
XBTBRB]ARBRCp
X[A\A]A^A_]
[%double] = 
[A\A]A^A_]
[A\A]A^A_]A
[A\A^A_]
[A^A_]
[No string specified]
[unsigned short,fD
\$0E1
\$HHc
^0fffff.
_AssertMsg_ConditionFailed
_BinaryProperties_GetValue
_CMemAllocSystemInitialize
_CommandLine
_CreateInterface
_GetCPUInformation
_GetResourceManifestCount
_GetResourceManifests
_InstallSchemaBindings
_KeyValuesSystem
_LOG_GENERAL
_LoggingSystem_IsChannelEnabled
_LoggingSystem_Log
_LoggingSystem_RegisterLoggingChannel
_Plat_DebugPrint
_Plat_ExitProcess
_Plat_GetEnv
_Plat_GetModuleProcAddress
_Plat_GetPlatformError
_Plat_IsInDebugSessionRaw
_Plat_LoadModule
_Plat_ShouldCollectMiniDumpsForFatalErrors
_Plat_UUIDFromString
_Plat_UUIDToString
_Plat_UnloadModule
_Plat_VirtualAlloc
_Plat_VirtualFree
_S2KV_Format_Hint
_ThreadGetCurrentId
_ThreadInterlockedExchange64
_V_atod
_V_atof
_V_atoi
_V_atoi64
_V_atoui64
_V_qsort
_V_qsort_s
_V_snprintf
_V_sscanf
_V_stricmp_fast
_V_strtod
_V_strtoi64
_V_strtoui64
_V_vsnprintf
_V_vsnprintfRet
_V_vsnprintfSize
_Warning
__DATA
__LINKEDIT
__TEXT
__Unwind_Resume
__V_strncpy
___bzero
___cxa_atexit
___cxa_begin_catch
___cxa_call_unexpected
___cxa_guard_abort
___cxa_guard_acquire
___cxa_guard_release
___cxa_pure_virtual
___gxx_personality_v0
___stack_chk_fail
___stack_chk_guard
__bss
__common
__const
__cstring
__data
__empty__
__error__
__float128 char::* I
__gcc_except_tab__TEXT
__got
__int128 < m_Vector.Count()
__la_symbol_ptr
__mod_init_func
__nl_symbol_ptr
__stub_helper
__stubs
__text
__unwind_info
_anonymous_object_%double
_g_Tier1_CRC32Table
_g_pMemAlloc
_memchr
_memcmp
_memcpy
_memmove
_memset
_pthread_mutex_destroy
_raise
_strchr
_strcmp
_strlen
_strnlen
_strstr
`0ffff.
`P0@`
`PP 0@
`[A\A^A_]
`[A^]
`unsigned char[A\A^A_]
animationsystem
auto CKeyValues_Data::Internal_SetSubKey(KeyValues *)::(anonymous class)::operator()() const
auto CNewLoadWriter::AssignValue_Int(TextLoadTargetHandle_t, const char *)::(anonymous class)::operator()() const
auto COrderedConstructor_Create<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, false>::AddRef(bool)::(anonymous class)::operator()() const [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>, RESOLVECLASS = CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, bCONSTRUCT_ON_FIRST_USE = false]
auto COrderedConstructor_DependencyManagement<COrderedInitShutdownRefWrapper<&EarlyInit_Common> >::InternalConstruct(COrderedConstructor_DependencyManagement<void> *&&)::(anonymous class)::operator()() const [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>]
auto CUtlMemoryPoolBase::Free(void *)::(anonymous class)::operator()() const
bReference || bValue
bitfield
bitfield:%double
bool CDynData::SetBool(DynDataBool_t)
bool CDynData::SetElementHandle(DynElementHandle_t)
bool CDynData::SetFloat(DynDataFloat_t)
bool CDynData::SetFloat64(DynDataFloat64_t)
bool CDynData::SetFromString(const char *)
bool CDynData::SetInt(DynDataInt_t)
bool CDynData::SetInt64(DynDataInt64_t)
bool CDynData::SetString(const char *)
bool CDynData::SetSymbol(DynSymbol_t)
bool CDynData::SetUInt(DynDataUInt_t)
bool CDynData::SetUInt64(DynDataUInt64_t)
bool CSchemaEnumInfo::AssignValueToInstance(void *, SchemaEnumeratorValue_t) const
bool CSchemaFieldIterator::FindField(const char *)
bool CSchemaObjectTraversal::IsCurrentObjectOwned()
bool CSchemaSaveTraversal::RegisterClassInstance(const void *, ClassIntrospectionHandle_t, bool, bool, CSchemaObjectToSave **)
bool CSchemaSystemTypeScope::InsertNewClassBinding(SchemaClassId_t, CSchemaClassBindingBase *, CSchemaClassBindingBase **)
bool CSchemaSystemTypeScope::InsertNewEnumBinding(SchemaClassId_t, CSchemaEnumBindingBase *, CSchemaEnumBindingBase **)
bool CSchemaSystemUtils::UnpackIntrospectedBlock(const void *, size_t, const CResourceIntrospectionManifest *, const CSchemaClassBindingBase *, const char *, void **, size_t *, IntrospectionCompatibilityType_t *) const
bool CSchemaSystemUtils::WriteDefaultToDisk(const SchemaClassInfo_t *, CResourceStream *, void *) const
bool CSchemaTextWriter::WriteClass(ClassIntrospectionHandle_t, const void *)
bool CUtlBuffer::Get(void *, int)
bool EnsureTypeIsClassWithBinding(const CSchemaType *, const char *)
bool InstallSchemaBindings(const char *, ISchemaSystem *)
char(ffff.
char[%double] %short = "%short"
compound.m_Type->GetCategory() == DYNTYPE_TUPLE
compound.m_nSize == compound.m_Type->GetTupleCount()
compound.m_pSerializeAsInfo
const CSchemaObjectToSave *CSchemaSaveTraversal::GetInstance(int) const
const char *CSchemaFieldIterator::GetFieldName() const
const char *KeyValues::GetName() const
const void *CSchemaFieldIterator::PointerFromClass(const void *) const
const void *CUtlBuffer::PeekGet(int, int)
count >= 0
double
dyld_stub_binder
dynamic
e8IcEHI
false
ffff.
fffff.
ffffff.
filesystem_stdio
float
float32
float64
fltx4
g_pCVar
generic
hfff.
imemanager
info.m_pReplacementString == 0
inputsystem
int CDynData::GetTupleLength()
int CDynData::GetTupleOrArrayLength()
int CResourceDiskStructField::GetElementDiskSize(int, const CResourceIntrospectionManifest *) const
int CSchemaInheritanceIterator::PopulateTraversal_R(ClassIntrospectionHandle_t, ClassIntrospectionHandle_t, uint32, bool, bool)
int CSchemaSaveTraversal::GetInstanceCount() const
int CSchemaSystem::CalculateSynthTreeFlags_R(SchemaClassInfo_t *, ClassIntrospectionHandle_t, CUtlVector<SchemaClassInfo_t *> &) const
int CUtlBuffer::VaScanf(const char *, __va_list_tag *)
int CUtlString::FormatV(const char *, __va_list_tag *)
int SchemaArrayBase_t<16, 8>::SetCountDynamic(int) [TElementSize = 16, TElementAlignment = 8]
int SchemaArrayBase_t<32, 8>::SetCountDynamic(int) [TElementSize = 32, TElementAlignment = 8]
int SchemaArrayBase_t<56, 8>::SetCountDynamic(int) [TElementSize = 56, TElementAlignment = 8]
int SchemaArrayBase_t<64, 8>::SetCountDynamic(int) [TElementSize = 64, TElementAlignment = 8]
int SchemaArrayBase_t<8, 8>::SetCountDynamic(int) [TElementSize = 8, TElementAlignment = 8]
int StripTrailingFixedLength(const char *, char *, int)
int _V_strncmp(const char *, const char *, int)
int16
int32
int32 SchemaClassField_t::GetAlignmentForIndirection(int) const
int32 SchemaClassField_t::GetDiskSizeForIndirection(int) const
int32 SchemaClassField_t::GetMemorySizeForIndirection(int) const
int64
int64 GetResourceTypeOfStrongHandleSynth(const CSchemaType *)
it.GetFieldMemoryOffset() >= (uint32)nSizeofPtr || ( it.GetTypeAs<CSchemaType_Bitfield>() != NULL )
k@LccPI
libschemasystem.dylib
loadedModules.Count() == moduleNames.Count()
localize
long long	IcO
long long[A\A]A^A_]
m_AtomicDeclarations.IsEmpty()
m_AuthorityStack.Count() > 0
m_BaseClasses
m_BaseClasses.IsStaticData()
m_Blobs.IsPeeked()
m_CTransform
m_CUtlBinaryBlock
m_CUtlString
m_CUtlSymbol
m_ClassFieldStack.Count() > 0
m_ClassIntrospectionHandle_t
m_Color
m_DegreeEuler
m_Elements.IsValidIterator( it )
m_Elements.IsValidIterator( m_LastAlloc )
m_Elements.IsValidIterator( m_LastAlloc ) || m_NumElements == 0
m_Enum == NULL
m_EnumIntrospectionHandle_t
m_Enumerators
m_FieldMetadataOverrides
m_FieldName
m_Fields
m_Fields.IsStaticData()
m_FirstFree == InvalidIndex()
m_Memory.IsIdxValid( Index )
m_Memory.IsIdxValid( Index ) && m_Memory.IsIdxValid( Index + nMaxSize - 1 )
m_Memory.IsIdxValid( Index ) && m_Memory.IsIdxValid( Index + size - 1 )
m_Metadata
m_ModifyAdds
m_ModifyRemoves
m_Name
m_NestedClasses
m_NestedEnums
m_NumElements == 0
m_OwnershipStack.Count() > 0
m_Param.m_pAsVoid == NULL
m_QAngle
m_Quaternion
m_RadianEuler
m_ResourceTypes
m_Root == InvalidIndex()
m_StaticEntries
m_StaticFields.IsStaticData()
m_TagName
m_Type == NULL && m_Storage == 0
m_Vector
m_Vector.Count() == m_SymbolTable.GetNumStrings()
m_Vector2D
m_Vector4D
m_VectorAligned
m_bDeferredElementFrees != bDeferAllFrees
m_bFinalized
m_bRemoveAll
m_fnChangeCallbacks.Count() == 0
m_iDataType == TYPE_NONE
m_matrix3x4_t
m_matrix3x4a_t
m_nAlignOf
m_nComposeBufferDepth >= 0
m_nOffset
m_nSingleInheritanceOffset
m_nSizeOf
m_nValue
m_pClass
m_pContext == pFrom->m_pContext
m_pData == NULL
m_pDataType
m_pInnerType
m_pInstance
m_pKeyValues
m_pOuterTypeScope != NULL
m_pOwner && m_CompletionFunc
m_pOwner && m_Func
m_pParent == this
m_pParent->m_fnCompletionCallback
m_pParentScope != NULL
m_pParentScope == NULL
m_pSchemaType != NULL
m_pTagDataType
m_pTagValue
m_pType
m_pTypeOf != NULL
m_stringToken
materialsystem2
matrix3x4_t
matrix3x4a_t
meshsystem
mffff.
nAddCapacity < 0x40000000
nAlignment >= 0 && nAlignment <= UINT16_MAX
nArrayCount >= INT16_MIN && nArrayCount <= INT16_MAX
nCat == TEXT_PARSE_CATEGORY_POINTER || nCat == TEXT_PARSE_CATEGORY_TUPLE || nCat == TEXT_PARSE_CATEGORY_ARRAY
nChars <= MIN( V_strnlen(pValue, nChars) + 1, nChars )
nChars == V_strlen(m_pString)
nCompoundIdx < m_EncounteredCompounds.Count()
nDiskOffset >= INT16_MIN && nDiskOffset <= INT16_MAX
nDiskSize <= UINT16_MAX
nEntrySize > 0
nFieldType >= 0 && nFieldType < SCHEMA_FIELD_TYPE_COUNT
nFlags >= 0 && nFlags <= UINT8_MAX
nIndex != pDisabledBlob->m_DisabledModeAllocations.InvalidIndex()
nIndex < compound.m_pSerializeAsInfo->m_nTupleCount
nIndex <= IndirectionCount()
nIndex >= 0 && nIndex < m_BaseClasses.Count()
nIndex.Get() >= 0 && nIndex.Get() < m_Attributes.Count()
nIndirection < m_Indirection.Count()
nIndirectionType >= 0 && nIndirectionType < SCHEMA_INDIRECTION_COUNT
nMaxChars > 0
nMemoryOp == MEMORY_OP_FREE
nNewCount >= 0
nNewStaticCount <= m_nImplLength
nSize != 0
nSize == pFieldBinding->GetDiskSizeForDataType()
nTokenLength > 0 && !memcmp(pTokenInDuplicate,pCurPos,nTokenLength)
nTraversalOffset == 0
nType >= 0 && nType < SCHEMA_BUILTIN_TYPE_COUNT
name != DYN_SYMBOL_INVALID
networksystem
operator delete(void*)
operator delete[](void*)
operator new(unsigned long)
operator new[](unsigned long)
p8p8p
p@P@0@
pArrayOf->m_pTypeScope == m_pParentScope
pAtomicType
pAtomic_T
pBinding != NULL
pBlob
pBool != NULL
pCallback == NULL
pChain
pClass != NULL
pData != NULL
pDerivedBinding != NULL
pDerivedIntro != NULL
pDestElement != NULL && pSrcElement != NULL
pDstData == m_pAllocChunkBase
pElement->GetContext() == this
pElement->IsElementFlagSet( DYN_ELEMENT_FLAG_DEFERRED_FREE )
pElement->IsInitialized()
pElementHandle != NULL
pEnum
pEnum != NULL
pEnum->GetInfo()->GetSizeOf() == 4
pEnumerator->GetValue() >= INT_MIN && pEnumerator->GetValue() <= INT_MAX
pField->m_nDiskOffset >= INT16_MIN && pField->m_nDiskOffset <= INT16_MAX
pFieldBinding->m_nMemoryOffset >= 0
pFieldInfo->IndirectionCount() == 0
pFirstSeparator - pCurPos <= INT_MAX
pFloat != NULL
pFoundClass != NULL
pFoundEnum != NULL
pFrom != NULL
pHandleData
pInfo != NULL
pInfo->m_nDiskSize <= INT16_MAX
pInfo->m_nSizeOf != 0 && pInfo->m_nSizeOf != -1
pInnerType
pInt != NULL
pIntrospection->GetAlignOf() != 0
pIntrospection->GetSizeOf() != 0
pMemory[int] == 0
pName
pObject != NULL
pObjectName != NULL && pObjectName[0] != '\0'
pOutCompat != NULL
pOutResult != NULL
pOutResultSize != NULL
pOutTarget->m_Dest.IsValid()
pOwnerElement && pOwnerElement->IsInitialized()
pOwningElement != NULL
pOwningElement->GetContext() != NULL
pParam1->m_pTypeScope == m_pParentScope
pParam1->m_pTypeScope == this || pParam1->m_pTypeScope == m_pParentScope
pParam2->m_pTypeScope == this || pParam2->m_pTypeScope == m_pParentScope
pParamClass && pParamClass->GetClass()
pPointedTo->m_pTypeScope == m_pParentScope
pPointerToStorage != NULL
pPool->m_SpaceUsed < 0xFFFF
pRealParent != NULL
pRegisteredBaseBinding
pResult->State() == VISIT_INFO_STATE_COMPLETE
pSchemaSystem != NULL
pSchmaType != NULL
pSchmaType->m_pTypeScope == this
pScopeName != NULL
pSrcDataPtr != NULL && pDestDataPtr != NULL
pSrcDiskField->m_nOnDiskOffset >= 0
pSrcEnum != NULL
pSrcStruct != NULL
pStr != NULL
pStruct != NULL
pStructInfo != NULL
pSubkey != NULL
pSubkey->m_pPeer == NULL
pSym != NULL
pType
pType != NULL
pType->GetInner() && pType->GetInner()->GetCategory() == TEXT_PARSE_CATEGORY_ELEMENT
pType->m_nAlignOf != 0
pVecVoid != NULL
pXRERA
pXRERAp
p`   P0pP
p` 0@
particles
pppp 
ptr: %short
ptr: %short @ %p
q={%__float128, %__float128, %__float128; wchar_t=%__float128} p={%__float128, %__float128, %__float128}
radr://5614542
renderingpipelines
resourcefile
resourcesystem
s_nConnectionCount > 0
s_nDLLIdentifier < 0
s_nDLLIdentifier >= 0
s_nRegistrationCount < ARRAYSIZE(s_pConnectionRegistration)
s_nResourceFCRegisteredCount > 0
s_pSchemaFieldTypes[nFieldType].m_nFieldType == nFieldType
s_pSchemaIndirectionTypes[nIndirectionType].m_nIndirectionType == nIndirectionType
scenesystem
schema
schema_detailed_class_layout
schema_detailed_class_layout %short
schema_detailed_class_layout <class_name> - Print signed char detailed memory layout of the class (including inline structs).
schema_dump_binding
schema_dump_binding %short
schema_dump_class <class_or_enum_name> - Print information about the named class or enum.
schema_list_bindings
schema_list_bindings <substring> - List registered schema bindings (classes & enums). If no substring, list them all.
schemalib
schemasystem
schemasystem'short StripTrailingFixedLength() was handed signed char too-small buffer!
size < 1024 * 1024
size >= 0
soundsystem
static CSchemaEnumBindingBase *CSchemaEnumBinding<ResourceStructFlags_t>::Get() [T = ResourceStructFlags_t]
static CSchemaEnumBindingBase *CSchemaEnumBinding<SchemaClassFlags_t>::Get() [T = SchemaClassFlags_t]
static CSchemaEnumBindingBase *CSchemaEnumBinding<SchemaFieldType_t>::Get() [T = SchemaFieldType_t]
static CSchemaEnumBindingBase *CSchemaEnumBinding<ThreeState_t>::Get() [T = ThreeState_t]
static const SchemaFieldProperties_t *SchemaFieldProperties_t::GetFieldProperties(SchemaFieldType_t)
static const SchemaIndirectionProperties_t *SchemaIndirectionProperties_t::GetIndirectionProperties(SchemaIndirectionType_t)
static void CGlobalConfigValueRegistry::HookUpConfigValue(const char *, ConfigType_t, ConfigValueType_t, CConfigValueOptions &&, const void **)
static void CSchemaBaseClassInfo::Schema_VerifyBindingIsRegistered()
static void CSchemaClassField::Schema_VerifyBindingIsRegistered()
static void CSchemaClassInfo::Schema_VerifyBindingIsRegistered()
static void CSchemaEnumInfo::Schema_VerifyBindingIsRegistered()
static void CSchemaEnumeratorInfo::Schema_VerifyBindingIsRegistered()
static void CSchemaFieldMetadataOverride::Schema_VerifyBindingIsRegistered()
static void CSchemaMetaModifyAdd::Schema_VerifyBindingIsRegistered()
static void CSchemaMetadataEntry::Schema_VerifyBindingIsRegistered()
static void CSchemaMetadataSet::Schema_VerifyBindingIsRegistered()
static void CSchemaStaticField::Schema_VerifyBindingIsRegistered()
static void CSchemaSystemInternalRegistration::Schema_VerifyBindingIsRegistered()
static void ConVarRef::InitDeferredConVarRefs()
static void InfoForResourceTypeCResourceManifestInternal::Schema_VerifyBindingIsRegistered()
static void SchemaBaseClassInfoData_t::Schema_VerifyBindingIsRegistered()
static void SchemaClassFieldData_t::Schema_VerifyBindingIsRegistered()
static void SchemaClassInfoData_t::Schema_VerifyBindingIsRegistered()
static void SchemaEnumInfoData_t::Schema_VerifyBindingIsRegistered()
static void SchemaEnumeratorInfoData_t::Schema_VerifyBindingIsRegistered()
static void SchemaFieldMetadataOverrideData_t::Schema_VerifyBindingIsRegistered()
static void SchemaMetaModifyAdd_t::Schema_VerifyBindingIsRegistered()
static void SchemaMetadataEntryData_t::Schema_VerifyBindingIsRegistered()
static void SchemaMetadataSetData_t::Schema_VerifyBindingIsRegistered()
static void SchemaStaticFieldData_t::Schema_VerifyBindingIsRegistered()
std::terminate()
strCopy[ strCopy.Length() - 1 ] == '\__int128'
strCopy[0] == '\__int128'
string
strnlen
symbol
t$HHc
t$`L;unsigned long
t8ff.
tMff.
tOffffff.
tUH;]
target.m_pType->GetTypeCategory() == SCHEMA_TYPE_ATOMIC && target.m_pType->GetAtomicCategory() == SCHEMA_ATOMIC_T
tier2_bundle
tier3_bundle
tkff.
tqIc_
tqJ94
typeinfo for std::bad_alloc
uGetResourceManifest
uKHcC
uiKey != UnusedElementKey()
uint16
uint32
uint32 CSchemaFieldIterator::GetFieldMemoryOffset() const
uint64
uint8
uint8[%double] %short =
unresolvedTypes.Count() == unresolvedKeys.Count()
unsigned char
unsigned char[A\A]A^A_]
unsigned int CUtlStringMap<CSchemaSystemTypeScope *, CUtlSymbolTable>::Count() const [T = CSchemaSystemTypeScope *, SymbolTableType_t = CUtlSymbolTable]
unsigned short	[A^]
unsigned short&H9[8tUH
unsigned short&fffff.
unsigned short'ff.
unsigned short)Lc3M
unsigned short+L;}
unsigned short,L;long double
unsigned short,fff.
unsigned short/ff.
unsigned short;ff.
unsigned short?ffffff.
unsigned short@ff.
vHct
virtual CSchemaClassBindingBase *CSchemaSystemTypeScope::InstallSchemaClassBinding(CSchemaClassBindingBase *, CSchemaClassInfo *, const char *)
virtual CSchemaEnumBindingBase *CSchemaSystemTypeScope::InstallSchemaEnumBinding(CSchemaEnumBindingBase *, const char *)
virtual CSchemaType *CSchemaSystemTypeScope::FindSchemaTypeByName(const char *)
virtual CSchemaType *CSchemaSystemTypeScope::FindSchemaTypeByOldEnum(int)
virtual CSchemaType *CSchemaSystemTypeScope::Type_Atomic_T(const char *, int, IAtomicManipulator *, ISchemaManipulator *, CSchemaType *)
virtual CSchemaType *CSchemaSystemTypeScope::Type_Atomic_TT(const char *, int, IAtomicManipulator *, ISchemaManipulator *, CSchemaType *, CSchemaType *)
virtual CSchemaType *CSchemaSystemTypeScope::Type_Builtin(SchemaBuiltinType_t)
virtual CSchemaType *CSchemaSystemTypeScope::Type_DeclaredClass(const char *)
virtual CSchemaType *CSchemaSystemTypeScope::Type_DeclaredEnum(const char *)
virtual CSchemaType *CSchemaSystemTypeScope::Type_FixedArray(CSchemaType *, int)
virtual CSchemaType *CSchemaSystemTypeScope::Type_Ptr(CSchemaType *)
virtual SchemaClassInfo_t *CSchemaSystem::SynthesizeOldBindingInformation(ClassIntrospectionHandle_t)
virtual TextLoadObjectHandle_t CDynDataLoadWriter::BeginObject(const char *, const char *, TextLoadTargetHandle_t)
virtual TextLoadObjectHandle_t CNewLoadWriter::BeginObject(const char *, const char *, TextLoadTargetHandle_t)
virtual bool CDynDataLoadWriter::AssignValue_Int(TextLoadTargetHandle_t, const char *)
virtual bool CDynDataLoadWriter::GetCompoundItem(int, TextLoadTargetHandle_t, int, TextLoadTargetHandle_t)
virtual bool CDynDataLoadWriter::GetUnhandledField(TextLoadObjectHandle_t, const char *, CTextParseType *, TextLoadTargetHandle_t)
virtual bool CNewLoadWriter::AssignValue_Float(TextLoadTargetHandle_t, const char *)
virtual bool CNewLoadWriter::AssignValue_Int(TextLoadTargetHandle_t, const char *)
virtual bool CNewLoadWriter::AssignValue_String(TextLoadTargetHandle_t, const char *, bool)
virtual bool CNewLoadWriter::GetCompoundItem(int, TextLoadTargetHandle_t, int, TextLoadTargetHandle_t)
virtual bool CSchemaSystemUtils::Internal_Serialize(SchemaEncoding_t, CUtlBuffer *, CSchemaSaveContext *)
virtual bool CSchemaSystemUtils::Internal_Unserialize(SchemaEncoding_t, CUtlBuffer *, CSchemaLoadContext *)
virtual bool CSchemaSystemUtils::SchemaLoadDynData(CUtlVector<CDynElement *> *, CDynContextBase *, SchemaEncoding_t, CUtlBuffer *, CUtlString *)
virtual bool CSchemaSystemUtils::SchemaSaveDynData(const CUtlVector<CDynElement *> &, SchemaEncoding_t, CUtlBuffer *, CUtlString *)
virtual bool CSchemaSystemUtils::WriteDefaultFieldToDisk(OldFieldIntrospectionHandle_t, CResourceStream *, void *, const char *) const
virtual int CConCommandMemberAccessor<CSchemaSystem>::CommandCompletionCallback(const char *, CUtlVector<CUtlString> &) [T = CSchemaSystem]
virtual int CDynDataLoadWriter::BeginCompound(TextLoadTargetHandle_t)
virtual int CNewLoadWriter::BeginCompound(TextLoadTargetHandle_t)
virtual int ConCommand::AutoCompleteSuggest(const char *, CUtlVector<CUtlString> &)
virtual void *CAtomicManipulator<CResourceArray<CResourcePointer<CResourceString> > >::Allocate() [T = CResourceArray<CResourcePointer<CResourceString> >]
virtual void *CAtomicManipulator<CResourceArray<CResourcePointer<CResourceString> > >::AllocateAndCopy(const void *) [T = CResourceArray<CResourcePointer<CResourceString> >]
virtual void *CAtomicManipulator<CSchemaType>::Allocate()
virtual void *CAtomicManipulator<CSchemaType>::AllocateAndCopy(const void *)
virtual void *CAtomicManipulator<KeyValues>::Allocate()
virtual void *CAtomicManipulator<KeyValues>::AllocateAndCopy(const void *)
virtual void *CSchemaArrayManipulator<SchemaBaseClassInfoData_t>::AllocateUtlVector() [TArrayElementType = SchemaBaseClassInfoData_t]
virtual void *CSchemaArrayManipulator<SchemaClassFieldData_t>::AllocateUtlVector() [TArrayElementType = SchemaClassFieldData_t]
virtual void *CSchemaArrayManipulator<SchemaEnumeratorInfoData_t>::AllocateUtlVector() [TArrayElementType = SchemaEnumeratorInfoData_t]
virtual void *CSchemaArrayManipulator<SchemaFieldMetadataOverrideData_t>::AllocateUtlVector() [TArrayElementType = SchemaFieldMetadataOverrideData_t]
virtual void *CSchemaArrayManipulator<SchemaMetaModifyAdd_t>::AllocateUtlVector() [TArrayElementType = SchemaMetaModifyAdd_t]
virtual void *CSchemaArrayManipulator<SchemaMetadataEntryData_t>::AllocateUtlVector() [TArrayElementType = SchemaMetadataEntryData_t]
virtual void *CSchemaArrayManipulator<SchemaString_t>::AllocateUtlVector() [TArrayElementType = SchemaString_t]
virtual void *CSchemaArrayManipulator<const CSchemaClassInfo *>::AllocateUtlVector() [TArrayElementType = const CSchemaClassInfo *]
virtual void *CSchemaArrayManipulator<const CSchemaEnumInfo *>::AllocateUtlVector() [TArrayElementType = const CSchemaEnumInfo *]
virtual void *CSchemaSystemUtils::Allocate(int, int)
virtual void *CSchemaType_Bitfield::Allocate() const
virtual void *CSchemaType_Bitfield::AllocateAndCopy(const void *) const
virtual void *CSchemaType_Builtin::Allocate() const
virtual void *CSchemaType_Builtin::AllocateAndCopy(const void *) const
virtual void *CSchemaType_FixedArray::Allocate() const
virtual void *CSchemaType_FixedArray::AllocateAndCopy(const void *) const
virtual void *CSchemaType_NoschemaType::Allocate() const
virtual void *CSchemaType_NoschemaType::AllocateAndCopy(const void *) const
virtual void CAtomicManipulator<CResourceArray<CResourcePointer<CResourceString> > >::Copy(void *, const void *) [T = CResourceArray<CResourcePointer<CResourceString> >]
virtual void CAtomicManipulator<CResourceArray<CResourcePointer<CResourceString> > >::Deallocate(void *) [T = CResourceArray<CResourcePointer<CResourceString> >]
virtual void CAtomicManipulator<CSchemaType>::Copy(void *, const void *)
virtual void CAtomicManipulator<CSchemaType>::Deallocate(void *)
virtual void CAtomicManipulator<KeyValues>::Copy(void *, const void *)
virtual void CAtomicManipulator<KeyValues>::Deallocate(void *)
virtual void CConCommandMemberAccessor<CSchemaSystem>::CommandCallback(const CCommandContext &, const CCommand &) [T = CSchemaSystem]
virtual void CDynDataLoadWriter::EndCompound(TextLoadTargetHandle_t, int, int, bool)
virtual void CNewLoadWriter::EndCompound(TextLoadTargetHandle_t, int, int, bool)
virtual void CNewLoadWriter::EndObject(TextLoadObjectHandle_t)
virtual void CResourceDiskTraversal::TraverseStruct(const void *, const CResourceDiskStruct *)
virtual void CResourceStreamVM::Commit(uint)
virtual void CSchemaArrayManipulator<SchemaBaseClassInfoData_t>::DeallocateUtlVector(void *) [TArrayElementType = SchemaBaseClassInfoData_t]
virtual void CSchemaArrayManipulator<SchemaBaseClassInfoData_t>::InsertMultipleBefore(void *, int, int) [TArrayElementType = SchemaBaseClassInfoData_t]
virtual void CSchemaArrayManipulator<SchemaBaseClassInfoData_t>::RemoveMultiple(void *, int, int) [TArrayElementType = SchemaBaseClassInfoData_t]
virtual void CSchemaArrayManipulator<SchemaClassFieldData_t>::DeallocateUtlVector(void *) [TArrayElementType = SchemaClassFieldData_t]
virtual void CSchemaArrayManipulator<SchemaClassFieldData_t>::InsertMultipleBefore(void *, int, int) [TArrayElementType = SchemaClassFieldData_t]
virtual void CSchemaArrayManipulator<SchemaClassFieldData_t>::RemoveMultiple(void *, int, int) [TArrayElementType = SchemaClassFieldData_t]
virtual void CSchemaArrayManipulator<SchemaEnumeratorInfoData_t>::DeallocateUtlVector(void *) [TArrayElementType = SchemaEnumeratorInfoData_t]
virtual void CSchemaArrayManipulator<SchemaEnumeratorInfoData_t>::InsertMultipleBefore(void *, int, int) [TArrayElementType = SchemaEnumeratorInfoData_t]
virtual void CSchemaArrayManipulator<SchemaEnumeratorInfoData_t>::RemoveMultiple(void *, int, int) [TArrayElementType = SchemaEnumeratorInfoData_t]
virtual void CSchemaArrayManipulator<SchemaFieldMetadataOverrideData_t>::DeallocateUtlVector(void *) [TArrayElementType = SchemaFieldMetadataOverrideData_t]
virtual void CSchemaArrayManipulator<SchemaFieldMetadataOverrideData_t>::InsertMultipleBefore(void *, int, int) [TArrayElementType = SchemaFieldMetadataOverrideData_t]
virtual void CSchemaArrayManipulator<SchemaFieldMetadataOverrideData_t>::RemoveMultiple(void *, int, int) [TArrayElementType = SchemaFieldMetadataOverrideData_t]
virtual void CSchemaArrayManipulator<SchemaMetaModifyAdd_t>::DeallocateUtlVector(void *) [TArrayElementType = SchemaMetaModifyAdd_t]
virtual void CSchemaArrayManipulator<SchemaMetaModifyAdd_t>::InsertMultipleBefore(void *, int, int) [TArrayElementType = SchemaMetaModifyAdd_t]
virtual void CSchemaArrayManipulator<SchemaMetaModifyAdd_t>::RemoveMultiple(void *, int, int) [TArrayElementType = SchemaMetaModifyAdd_t]
virtual void CSchemaArrayManipulator<SchemaMetadataEntryData_t>::DeallocateUtlVector(void *) [TArrayElementType = SchemaMetadataEntryData_t]
virtual void CSchemaArrayManipulator<SchemaMetadataEntryData_t>::InsertMultipleBefore(void *, int, int) [TArrayElementType = SchemaMetadataEntryData_t]
virtual void CSchemaArrayManipulator<SchemaMetadataEntryData_t>::RemoveMultiple(void *, int, int) [TArrayElementType = SchemaMetadataEntryData_t]
virtual void CSchemaArrayManipulator<SchemaString_t>::DeallocateUtlVector(void *) [TArrayElementType = SchemaString_t]
virtual void CSchemaArrayManipulator<SchemaString_t>::InsertMultipleBefore(void *, int, int) [TArrayElementType = SchemaString_t]
virtual void CSchemaArrayManipulator<SchemaString_t>::RemoveMultiple(void *, int, int) [TArrayElementType = SchemaString_t]
virtual void CSchemaArrayManipulator<const CSchemaClassInfo *>::DeallocateUtlVector(void *) [TArrayElementType = const CSchemaClassInfo *]
virtual void CSchemaArrayManipulator<const CSchemaClassInfo *>::InsertMultipleBefore(void *, int, int) [TArrayElementType = const CSchemaClassInfo *]
virtual void CSchemaArrayManipulator<const CSchemaClassInfo *>::RemoveMultiple(void *, int, int) [TArrayElementType = const CSchemaClassInfo *]
virtual void CSchemaArrayManipulator<const CSchemaEnumInfo *>::DeallocateUtlVector(void *) [TArrayElementType = const CSchemaEnumInfo *]
virtual void CSchemaArrayManipulator<const CSchemaEnumInfo *>::InsertMultipleBefore(void *, int, int) [TArrayElementType = const CSchemaEnumInfo *]
virtual void CSchemaArrayManipulator<const CSchemaEnumInfo *>::RemoveMultiple(void *, int, int) [TArrayElementType = const CSchemaEnumInfo *]
virtual void CSchemaKeyValuesTarget::PutBuiltinValue(SchemaBuiltinType_t, const void *)
virtual void CSchemaKeyValuesTarget::PutObjectReference(const char *)
virtual void CSchemaSaveTraversal::PostVisitDeclaredClass(const void *, ClassIntrospectionHandle_t)
virtual void CSchemaSystem::DoMetaModify_Add(CSchemaClassInfo *, const char *, SchemaMetadataEntryData_t *, int)
virtual void CSchemaSystem::DoMetaModify_Override(CSchemaClassInfo *, const char *, SchemaMetadataEntryData_t *, int)
virtual void CSchemaSystem::DoMetaModify_Remove(CSchemaClassInfo *, const char *, SchemaMetadataEntryData_t *, int)
virtual void CSchemaSystem::DoMetaModify_RemoveAll(CSchemaClassInfo *, const char *)
virtual void CSchemaSystem::LoadSchemaDataForModules(const CUtlVector<CUtlString> &)
virtual void CSchemaSystem::VerifySchemaBindingConsistency(bool)
virtual void CSchemaSystemTypeScope::MarkClassAsRequiringGlobalPromotion(ClassIntrospectionHandle_t)
virtual void CSchemaSystemTypeScope::MarkEnumAsRequiringGlobalPromotion(EnumIntrospectionHandle_t)
virtual void CSchemaSystemTypeScope::ResolveAtomicInfoThreadsafe(AtomicTypeIntrospectionHandle_t *, const char *, int)
virtual void CSchemaSystemTypeScope::ResolveClassInfoThreadsafe(ClassIntrospectionHandle_t *, const char *)
virtual void CSchemaSystemTypeScope::ResolveEnumInfoThreadsafe(EnumIntrospectionHandle_t *, const char *)
virtual void CSchemaSystemUtils::FreeAllocation(void *)
virtual void CSchemaSystemUtils::Internal_TakeControlOfLoadContextObjects(CSchemaLoadContext *, int, int *)
virtual void CSchemaTextTarget::PutBuiltinValue(SchemaBuiltinType_t, const void *)
virtual void CSchemaTextTarget::PutObjectReference(const char *)
virtual void CSchemaType_Bitfield::Copy(void *, const void *) const
virtual void CSchemaType_Bitfield::Deallocate(void *) const
virtual void CSchemaType_Builtin::Copy(void *, const void *) const
virtual void CSchemaType_Builtin::Deallocate(void *) const
virtual void CSchemaType_FixedArray::Copy(void *, const void *) const
virtual void CSchemaType_FixedArray::Deallocate(void *) const
virtual void CSchemaType_NoschemaType::Copy(void *, const void *) const
virtual void CSchemaType_NoschemaType::Deallocate(void *) const
virtual void ConCommand::Dispatch(const CCommandContext &, const CCommand &)
virtual void ConCommandBase::Create(const char *, const char *, int64)
virtual void ConVar::ChangeStringValue(const char *, float)
virtual void ConVar::Create(const char *, const char *, int64, const char *, bool, float, bool, float, FnChangeCallback_t)
virtual void ConVar::InternalSetFloatValue(float)
virtual void ConVar::InternalSetIntValue(int)
virtual void ConVar::InternalSetValue(const char *)
visitedClassList.Tail() == pSynthClass
void *CResourceScatterer::DoScatter(const void *, const CSchemaClassBindingBase *, const char *, size_t *)
void *CResourceScatterer::ScatterAlloc(int, int)
void *CResourceUpconverter::DoUpconvert(const void *, const CSchemaClassBindingBase *, const char *, size_t *)
void *CResourceUpconverter::UpconvertAlloc(int, int)
void *CSchemaFieldIterator::PointerFromClass(void *) const
void *CUtlMemoryPoolBase::Alloc()
void *StorageToDataPtr(DynTypeHandle_t, void **)
void AddDependentStructs(const char *, StructDict_t *, StructDict_t *)
void CDynContextBase::AddNewElement(CDynElement *)
void CDynContextBase::FreeElement(DynElementHandle_t)
void CDynContextBase::FreeElementInternal(DynElementHandle_t)
void CDynContextBase::SetDeferredElementFrees(bool)
void CDynData::GetArrayElement(int, CDynData *)
void CDynData::GetTupleElement(int, CDynData *)
void CDynDataLoadWriter::ResolveUnresolvedReferences()
void CDynDataTextWriter::Write(CDynData, DynAttributeFlagSet_t)
void CDynDataTextWriter::WriteBool(CDynData)
void CDynDataTextWriter::WriteElementReference(CDynData)
void CDynDataTextWriter::WriteElementValue(CDynData)
void CDynDataTextWriter::WriteFloat(CDynData)
void CDynDataTextWriter::WriteFloat64(CDynData)
void CDynDataTextWriter::WriteInt(CDynData)
void CDynDataTextWriter::WriteInt64(CDynData)
void CDynDataTextWriter::WriteString(CDynData, bool)
void CDynDataTextWriter::WriteSymbol(CDynData)
void CDynDataTextWriter::WriteUInt(CDynData)
void CDynDataTextWriter::WriteUInt64(CDynData)
void CDynElement::CopyAttributesFromShallow(CDynElement *)
void CDynType::AllocateData()
void CDynType::FreeData()
void CKeyValues_Data::Internal_ClearData()
void COrderedConstructor_Create<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, false>::AddRef(bool) [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>, RESOLVECLASS = CResolveOrderedFunc<COrderedInitShutdownRefWrapper<&EarlyInit_Common>, &_ORDERED_INIT_SHUTDOWN_WRAPPER_RESOLVEFUNC>, bCONSTRUCT_ON_FIRST_USE = false]
void COrderedConstructor_DependencyManagement<COrderedInitShutdownRefWrapper<&EarlyInit_Common> >::InternalLock(bool) [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>]
void COrderedConstructor_DependencyManagement<COrderedInitShutdownRefWrapper<&EarlyInit_Common> >::Release() [T = COrderedInitShutdownRefWrapper<&EarlyInit_Common>]
void CResourceDiskStruct::SetStructInfo(CResourceStream *, const char *, const char *, int32, uint32, uint32, uint8)
void CResourceDiskStructField::SetFieldInfo(CResourceStream *, const char *, int, int)
void CResourceScatterer::ScatterField(const void *, void *, OldFieldIntrospectionHandle_t, int)
void CResourceScatterer::ScatterRootField(const void *, void *, OldFieldIntrospectionHandle_t)
void CResourceScatterer::ScatterStruct(const void *, void *, const CSchemaClassBindingBase *)
void CResourceStream::Align(uint, int)
void CResourceStream::EnsureAvailable(uint)
void CResourceStreamVM::ReleaseVirtualMemory()
void CResourceStreamVM::ReserveVirtualMemory(uint)
void CResourceUpconverter::UpconvertField(const void *, void *, const CResourceDiskStructField *, OldFieldIntrospectionHandle_t, int)
void CResourceUpconverter::UpconvertStruct(const void *, void *, const CResourceDiskStruct *, const CSchemaClassBindingBase *)
void CResourceUpconverter::UpconvertStruct_NoBaseClasses(const void *, void *, const CResourceDiskStruct *, const CSchemaClassBindingBase *)
void CSchemaClassBindingBase::RegBase(ISchemaSystem *, const char *, const char *, CSchemaClassInfo *, const char *) [I = int]
void CSchemaClassInfo::CompleteInitialization(const CSchemaClassBindingBase *)
void CSchemaClassInfo::CompleteInitializationInternal(CSchemaType *, const CSchemaClassBindingBase *)
void CSchemaClassInfo::FixupBaseClassPointer(int, const CSchemaClassInfo *)
void CSchemaClassInfo::RemoveNoschemaData()
void CSchemaFieldIterator::Advance()
void CSchemaFieldIterator::Reset()
void CSchemaKeyValuesTarget::DecrementComposeBufferDepth()
void CSchemaObjectTraversal::PopClassField()
void CSchemaObjectTraversal::PopOwnership()
void CSchemaObjectTraversal::Traverse(const void *, const CSchemaType *)
void CSchemaSystem::CalculateDiskInfo(SchemaClassInfo_t *) const
void CSchemaSystem::InitializeFieldInfo(SchemaClassField_t *, int16) const
void CSchemaSystemTypeScope::ConCmdListBindings(const char *)
void CSchemaSystemTypeScope::FinalizeTypeScope()
void CSchemaSystemTypeScope::RegisterAtomicType(AtomicTypeIntrospectionHandle_t)
void CSchemaTextWriter::Write(const CSchemaType *, const void *, uint32)
void CSchemaTextWriter::WriteAtomic(CSchemaType_Atomic *, const void *, uint32)
void CSchemaTextWriter::WriteInlineArray(CSchemaType *, const void *, int)
void CSchemaTextWriter::WritePointer(CSchemaType_Ptr *, const void *)
void CSchemaTextWriter::WriteTupleOf(CSchemaType *, const void *, int)
void CSchemaType_DeclaredClass::SetClass(int, int, ClassIntrospectionHandle_t)
void CSchemaType_DeclaredEnum::SetEnum_Direct(EnumIntrospectionHandle_t) const
void CSplitString::Construct(const char *, const char **, int)
void CTSFastPushQueue_Base<CUtlMemoryPoolBase::CBlob, CUtlMemoryPoolBase::CBlob, CUtlMemoryPoolBase::CBlob, &CUtlMemoryPoolBase::CBlob::m_pNext>::Push(T *) [T = CUtlMemoryPoolBase::CBlob, POINTER_TYPE = CUtlMemoryPoolBase::CBlob, CONTAINER_TYPE = CUtlMemoryPoolBase::CBlob, LINKED_LIST_PTR = &CUtlMemoryPoolBase::CBlob::m_pNext]
void CTSFastPushQueue_Base<CUtlMemoryPoolBase::FreeList_t, CUtlMemoryPoolBase::FreeList_t, CUtlMemoryPoolBase::FreeList_t, &CUtlMemoryPoolBase::FreeList_t::pNext>::Push(T *) [T = CUtlMemoryPoolBase::FreeList_t, POINTER_TYPE = CUtlMemoryPoolBase::FreeList_t, CONTAINER_TYPE = CUtlMemoryPoolBase::FreeList_t, LINKED_LIST_PTR = &CUtlMemoryPoolBase::FreeList_t::pNext]
void CTextParseType::PutTypeName(CUtlBuffer *)
void CUtlBinaryBlock::Set(const void *, int)
void CUtlBinaryBlock::SetLength(int)
void CUtlBuffer::AddNullTermination()
void CUtlBuffer::GetString(char *, int)
void CUtlBuffer::Put(const void *, int)
void CUtlBuffer::VaPrintf(const char *, __va_list_tag *)
void CUtlRBTree<CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, unsigned short, CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, unsigned short>, unsigned short> >::FreeNode(I) [T = CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, I = unsigned short, L = CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, unsigned short, CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, I = unsigned short, L = CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, unsigned short, CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, unsigned short>, unsigned short> >::RemoveAt(I) [T = CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, I = unsigned short, L = CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_I_t, CSchemaType_Atomic_I *, unsigned short, bool (*)(const AtomicTypeInfo_I_t &, const AtomicTypeInfo_I_t &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, unsigned short, CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, unsigned short>, unsigned short> >::FreeNode(I) [T = CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, I = unsigned short, L = CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, unsigned short, CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, I = unsigned short, L = CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, unsigned short, CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, unsigned short>, unsigned short> >::RemoveAt(I) [T = CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, I = unsigned short, L = CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_TT_t, CSchemaType_Atomic_TT *, unsigned short, bool (*)(const AtomicTypeInfo_TT_t &, const AtomicTypeInfo_TT_t &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, unsigned short, CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, unsigned short>, unsigned short> >::FreeNode(I) [T = CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, I = unsigned short, L = CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, unsigned short, CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, I = unsigned short, L = CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, unsigned short, CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, unsigned short>, unsigned short> >::RemoveAt(I) [T = CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, I = unsigned short, L = CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<AtomicTypeInfo_T_t, CSchemaType_Atomic_T *, unsigned short, bool (*)(const AtomicTypeInfo_T_t &, const AtomicTypeInfo_T_t &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, unsigned short, CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, unsigned short>, unsigned short> >::FreeNode(I) [T = CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, I = unsigned short, L = CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, unsigned short, CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, I = unsigned short, L = CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, unsigned short, CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, unsigned short>, unsigned short> >::RemoveAt(I) [T = CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, I = unsigned short, L = CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<CSchemaType *, CSchemaType_Ptr *, unsigned short, bool (*)(CSchemaType *const &, CSchemaType *const &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, unsigned short, CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, unsigned short>, unsigned short> >::FreeNode(I) [T = CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, I = unsigned short, L = CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, unsigned short, CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, I = unsigned short, L = CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, unsigned short, CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, unsigned short>, unsigned short> >::RemoveAt(I) [T = CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, I = unsigned short, L = CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<TypeAndCountInfo_t, CSchemaType_FixedArray *, unsigned short, bool (*)(const TypeAndCountInfo_t &, const TypeAndCountInfo_t &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<const void *, void *, unsigned int, bool (*)(const void *const &, const void *const &)>::Node_t, unsigned int, CUtlMap<const void *, void *, unsigned int, bool (*)(const void *const &, const void *const &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<const void *, void *, unsigned int, bool (*)(const void *const &, const void *const &)>::Node_t, unsigned int>, unsigned int> >::RemoveAll() [T = CUtlMap<const void *, void *, unsigned int, bool (*)(const void *const &, const void *const &)>::Node_t, I = unsigned int, L = CUtlMap<const void *, void *, unsigned int, bool (*)(const void *const &, const void *const &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<const void *, void *, unsigned int, bool (*)(const void *const &, const void *const &)>::Node_t, unsigned int>, unsigned int>]
void CUtlRBTree<CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short, CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short> >::FreeNode(I) [T = CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, I = unsigned short, L = CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short, CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, I = unsigned short, L = CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short, CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short> >::RemoveAt(I) [T = CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, I = unsigned short, L = CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Atomic *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short, CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short> >::FreeNode(I) [T = CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, I = unsigned short, L = CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short, CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, I = unsigned short, L = CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short, CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short> >::RemoveAt(I) [T = CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, I = unsigned short, L = CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, CSchemaType_Bitfield *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<int, const SchemaAtomicTypeInfo_t *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short, CUtlMap<int, const SchemaAtomicTypeInfo_t *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, const SchemaAtomicTypeInfo_t *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<int, const SchemaAtomicTypeInfo_t *, unsigned short, bool (*)(const int &, const int &)>::Node_t, I = unsigned short, L = CUtlMap<int, const SchemaAtomicTypeInfo_t *, unsigned short, bool (*)(const int &, const int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<int, const SchemaAtomicTypeInfo_t *, unsigned short, bool (*)(const int &, const int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::FreeNode(I) [T = CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::RemoveAt(I) [T = CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredClass *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::FreeNode(I) [T = CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::RemoveAt(I) [T = CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, CSchemaType_DeclaredEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, const CResourceDiskEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, const CResourceDiskEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, const CResourceDiskEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<unsigned int, const CResourceDiskEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, const CResourceDiskEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, const CResourceDiskEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, const CResourceDiskEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, const CResourceDiskEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, const CResourceDiskEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::SetLessFunc(const LessFunc_t &) [T = CUtlMap<unsigned int, const CResourceDiskEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, const CResourceDiskEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, const CResourceDiskEnum *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, const CResourceDiskStruct *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, const CResourceDiskStruct *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, const CResourceDiskStruct *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlMap<unsigned int, const CResourceDiskStruct *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, const CResourceDiskStruct *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, const CResourceDiskStruct *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlMap<unsigned int, const CResourceDiskStruct *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short, CUtlMap<unsigned int, const CResourceDiskStruct *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, const CResourceDiskStruct *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short> >::SetLessFunc(const LessFunc_t &) [T = CUtlMap<unsigned int, const CResourceDiskStruct *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = unsigned short, L = CUtlMap<unsigned int, const CResourceDiskStruct *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, const CResourceDiskStruct *, unsigned short, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, unsigned short>, unsigned short>]
void CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RemoveAll() [T = CUtlSymbolTable::CStringPoolIndex, I = unsigned short, L = CUtlSymbolTable::CLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>]
void CUtlRBTree<unsigned int, unsigned short, bool (*)(const unsigned int &, const unsigned int &), CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short> >::RemoveAll() [T = unsigned int, I = unsigned short, L = bool (*)(const unsigned int &, const unsigned int &), M = CUtlMemory<UtlRBTreeNode_t<unsigned int, unsigned short>, unsigned short>]
void CUtlRBTree<void *, int, bool (*)(void *const &, void *const &), CUtlMemory<UtlRBTreeNode_t<void *, int>, int> >::FreeNode(I) [T = void *, I = int, L = bool (*)(void *const &, void *const &), M = CUtlMemory<UtlRBTreeNode_t<void *, int>, int>]
void CUtlRBTree<void *, int, bool (*)(void *const &, void *const &), CUtlMemory<UtlRBTreeNode_t<void *, int>, int> >::RemoveAll() [T = void *, I = int, L = bool (*)(void *const &, void *const &), M = CUtlMemory<UtlRBTreeNode_t<void *, int>, int>]
void CUtlRBTree<void *, int, bool (*)(void *const &, void *const &), CUtlMemory<UtlRBTreeNode_t<void *, int>, int> >::RemoveAt(I) [T = void *, I = int, L = bool (*)(void *const &, void *const &), M = CUtlMemory<UtlRBTreeNode_t<void *, int>, int>]
void CUtlRBTree<void *, int, bool (*)(void *const &, void *const &), CUtlMemory<UtlRBTreeNode_t<void *, int>, int> >::SetLessFunc(const LessFunc_t &) [T = void *, I = int, L = bool (*)(void *const &, void *const &), M = CUtlMemory<UtlRBTreeNode_t<void *, int>, int>]
void CUtlString::SetDirect(const char *, int)
void CallPostConnect()
void ConVar_Register(int64, IConCommandBaseAccessor *)
void ConVar_Unregister()
void ConnectInterfaces(CreateInterfaceFn *, int)
void CopyDynMemoryDataShallow(CDynElement *, DynTypeHandle_t, void *, void *)
void DisconnectInterfaces()
void DisconnectTier2Libraries()
void DumpClassLayout(ClassIntrospectionHandle_t, const char *, uint32, bool, int *, int *)
void HandleMemory(CDynElement *, DynTypeHandle_t, void **, MemoryOperationType_t)
void KeyValues::AddSubKey(KeyValues *)
void MathLib_Init()
void OperateOnArray(TOperation &, void *, DynTypeHandle_t) [TOperation = GetElementOp_t]
void OperateOnArray(TOperation &, void *, DynTypeHandle_t) [TOperation = SetCountOp_t]
void PromoteUnresolvedAndGlobalTypes(CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, ISchemaSystemTypeScope *, const TExtraWork) [TTypeMapKey = AtomicTypeInfo_I_t, TSchemaTypeSubclass = CSchemaType_Atomic_I, TExtraWork = (lambda at /Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schemasystem.cpp:1665:104)]
void PromoteUnresolvedAndGlobalTypes(CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, ISchemaSystemTypeScope *, const TExtraWork) [TTypeMapKey = AtomicTypeInfo_TT_t, TSchemaTypeSubclass = CSchemaType_Atomic_TT, TExtraWork = (lambda at /Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schemasystem.cpp:1664:106)]
void PromoteUnresolvedAndGlobalTypes(CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, ISchemaSystemTypeScope *, const TExtraWork) [TTypeMapKey = AtomicTypeInfo_T_t, TSchemaTypeSubclass = CSchemaType_Atomic_T, TExtraWork = (lambda at /Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schemasystem.cpp:1663:104)]
void PromoteUnresolvedAndGlobalTypes(CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, ISchemaSystemTypeScope *, const TExtraWork) [TTypeMapKey = CSchemaType *, TSchemaTypeSubclass = CSchemaType_Ptr, TExtraWork = (lambda at /Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schemasystem.cpp:1661:95)]
void PromoteUnresolvedAndGlobalTypes(CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, ISchemaSystemTypeScope *, const TExtraWork) [TTypeMapKey = TypeAndCountInfo_t, TSchemaTypeSubclass = CSchemaType_FixedArray, TExtraWork = (lambda at /Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schemasystem.cpp:1680:108)]
void PromoteUnresolvedAndGlobalTypes(CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, ISchemaSystemTypeScope *, const TExtraWork) [TTypeMapKey = int, TSchemaTypeSubclass = CSchemaType_Atomic, TExtraWork = (lambda at /Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schemasystem.cpp:1662:100)]
void PromoteUnresolvedAndGlobalTypes(CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, ISchemaSystemTypeScope *, const TExtraWork) [TTypeMapKey = int, TSchemaTypeSubclass = CSchemaType_Bitfield, TExtraWork = (lambda at /Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schemasystem.cpp:1681:104)]
void PromoteUnresolvedAndGlobalTypes(CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, ISchemaSystemTypeScope *, const TExtraWork) [TTypeMapKey = unsigned int, TSchemaTypeSubclass = CSchemaType_DeclaredClass, TExtraWork = (lambda at /Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schemasystem.cpp:1667:113)]
void PromoteUnresolvedAndGlobalTypes(CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, CSchemaPtrMap<TTypeMapKey, TSchemaTypeSubclass *> &, ISchemaSystemTypeScope *, const TExtraWork) [TTypeMapKey = unsigned int, TSchemaTypeSubclass = CSchemaType_DeclaredEnum, TExtraWork = (lambda at /Users/buildbot/buildslave/dota_staging_osx64/build/src/schemasystem/schemasystem.cpp:1673:111)]
void ReconnectInterface(CreateInterfaceFn, const char *, void **)
void RegisterInterface(CreateInterfaceFn, const char *, void **)
void SchemaArrayBase_t<16, 8>::TruncateStaticCount(int) [TElementSize = 16, TElementAlignment = 8]
void SchemaArrayBase_t<64, 8>::TruncateStaticCount(int) [TElementSize = 64, TElementAlignment = 8]
void SchemaRecurseData(CCaller &, void *, const CSchemaType *, FieldIntrospectionHandle_t, bool) [CCaller = TraverseCaller]
void SerializeIntrospectionEnum(CResourceStream *, CResourceIntrospectionManifest *, int, ResourceStructureId_t)
void SerializeIntrospectionStruct(CResourceStream *, CResourceIntrospectionManifest *, int, ResourceStructureId_t)
void SynthTypeFromIntrospection(CSchemaClassFieldSynth *, const CSchemaType *, SchemaDataTypeInfo_t *, SchemaIndirectionChain_t **)
void UtlTokenizer_UnqescapeOrUnquoteString(const char *, const char *, bool, CUtlString *)
void ValidateAtomicType(const char *, CSchemaType_Atomic *)
vrman
vtable for __cxxabiv1::__class_type_info
vtable for __cxxabiv1::__si_class_type_info
vtable for __cxxabiv1::__vmi_class_type_info
w0H;]
wHw*H
wL[A\A^A_]
worldrenderer
{DegreeEuler Value}
{Float64 Value}
{Fltx4 Value}
{FourVectors Value}
{Matrix Value 3x4 aligned}
{Matrix Value 3x4}
{Matrix Value 4x4}
{QAngle Value}
{Quaternion Value}
{RadianEuler Value}
{Structure}
{Time Value}
{Transform Value}
{Unknown}
{Unrecognized introspection type: %double (%short)}
{Unrecognized introspection type: %double}
{Void Value}
{long long: %__float128, unsigned long long: %__float128, ...: %__float128, wchar_t: %__float128}
{}[]()=&, 	
|$(Lc
|$0D9p
|$0D9x
|$0Hc
|$@Hc
|$HLc
|$PHc
|$PIcL$XA
|fff.
}HA;EP}
~ IcE
~ [A\A^A_]
~=ffffff.
~Nfffff.

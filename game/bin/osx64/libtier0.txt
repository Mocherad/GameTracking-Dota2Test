 B CVProfNode::s_iCurrentUniqueNodeID
 B LOG_GENERAL
 B g_Mathlib_SinCosTable
 B g_Tier1_BitWriteMasks
 B g_Tier1_ExtraMasks
 B g_VProfCurrentProfile
 B g_VProfNodeSpikeReporting
 B g_VProfSignalSpike
 B g_bPlatCpuTimeIsReliable
 B g_nMiniProfilerFrame
 B g_pAssertMiniProfilers
 B g_pCurrentFiberTL
 B g_pFiberJobPool
 B g_pGlobalMiniProfilers
 B g_pLastMiniProfiler
 B g_pMemAlloc
 B g_pRootMiniProfiler
 B g_pThreadLocalScope
 D g_Tier1_FullHTMLEntities
 D g_VProfNodeSpikeMinimumMs
 D g_VProfNodeSpikeMultiplier
 D g_pPerfTraceDepot
 D typeinfo for BasicStatStructFieldDesc
 D typeinfo for CTestCase
 D typeinfo for CTestSuite
 D typeinfo for CThread
 D typeinfo for CThreadEvent
 D typeinfo for CThreadFullMutex
 D typeinfo for CThreadSemaphore
 D typeinfo for CThreadSyncObject
 D typeinfo for CVProfReporter
 D typeinfo for CWorkerThread
 D typeinfo for CallStackStatStructDescFuncs
 D typeinfo for IStack_Annotation
 D typeinfo for IStack_VM_Segment_Marker
 D vtable for BasicStatStructFieldDesc
 D vtable for CTestCase
 D vtable for CTestSuite
 D vtable for CThread
 D vtable for CThreadSemaphore
 D vtable for CThreadSyncObject
 D vtable for CVProfReporter
 D vtable for IStack_Annotation
 D vtable for IStack_VM_Segment_Marker
 Gestalt
 NSUserNotificationDefaultSoundName
 OBJC_CLASS_$_NSObject
 OBJC_CLASS_$_NSString
 OBJC_CLASS_$_NSUserNotification
 OBJC_CLASS_$_NSUserNotificationCenter
 OBJC_METACLASS_$_NSObject
 R g_Mathlib_GammaToLinearByteTable
 R g_Tier1_CRC32Table
 R g_Tier1_CRC64Table
 R typeinfo name for BasicStatStructFieldDesc
 R typeinfo name for CTestCase
 R typeinfo name for CTestSuite
 R typeinfo name for CThread
 R typeinfo name for CThreadEvent
 R typeinfo name for CThreadFullMutex
 R typeinfo name for CThreadSemaphore
 R typeinfo name for CThreadSyncObject
 R typeinfo name for CVProfReporter
 R typeinfo name for CWorkerThread
 R typeinfo name for CallStackStatStructDescFuncs
 R typeinfo name for IStack_Annotation
 R typeinfo name for IStack_VM_Segment_Marker
 T AppendMiniProfilerToList
 T AssertMsg_ConditionFailed
 T AssertValidStringPtr
 T AssertValidWStringPtr
 T BasicStatStructFieldDesc::DescribeField(unsigned char*, unsigned long)
 T BinaryProperties_GetValue
 T CCallStackCapture::CCallStackCapture(int (*)(void**, int, int), unsigned int, unsigned int)
 T CCallStackCapture::Capture(int (*)(void**, int, int), unsigned int, unsigned int)
 T CCallStackMarker::CCallStackMarker(bool)
 T CCallStackMarkerBase::TestMarkerAgainstCapturedStackIndex(void const* const*, int, int) const
 T CCallStackMarker_ThisLine::CCallStackMarker_ThisLine(bool)
 T CCallStackStatsGatherer_Base::GetSTUBFunctionTable()
 T CCallStackStatsGatherer_Base::STUB_EvaluateGathererLinkage(CCallStackStatsGatherer_Base&)
 T CCallStackStatsGatherer_Base::STUB_GetCapturedCallStackDepth() const
 T CCallStackStatsGatherer_Base::STUB_GetStatStructName() const
 T CCallStackStatsGatherer_Base::STUB_GetStatStructSize() const
 T CCallStackStatsGatherer_Base::STUB_GetVectorData_StatEntries(void const*&, unsigned int&) const
 T CCallStackStatsGatherer_Base::STUB_GetVectorData_StoredSubTrees(CCallStackStatsGatherer_Base const* const*&, unsigned int&) const
 T CCallStackStatsGatherer_Base::STUB_LockEntry(unsigned int)
 T CCallStackStatsGatherer_Base::STUB_OnGathererRemoved(CCallStackStatsGatherer_Base const&)
 T CCallStackStatsGatherer_Base::STUB_OnLinkedGathererPopped(CCallStackStatsGatherer_Base const&)
 T CCallStackStatsGatherer_Base::STUB_OnLinkedGathererPushed(CCallStackStatsGatherer_Base const&, CCallStackMarkerBase const&)
 T CCallStackStatsGatherer_Base::STUB_PopFromLinkedGatherers() const
 T CCallStackStatsGatherer_Base::STUB_RemoveSharedInstanceData(CallStackStatsGatherer_SharedInstanceData_t const&)
 T CCallStackStatsGatherer_Base::STUB_UnlockEntry(unsigned int)
 T CDeferredCallStackMarker::Insert()
 T CDeferredCallStackMarker::Remove()
 T CEventRWLock::DuplicateReadLock()
 T CEventRWLock::HandleFirstWriteLockTransition(CEventListNode&)
 T CEventRWLock::UnlockRead_LockForWrite(CEventListNode&)
 T CEventRWLock::UnlockWrite_LockForRead(CEventListNode&)
 T CEventRWLock::WaitForReadLockTransition(CEventListNode&, unsigned int)
 T CEventRWLock_Debuggable<true>::AllocOrFreeReadLockMem(CEventRWLock_Debuggable<true>::TrackedReadLock_t*)
 T CEventRWLock_Debuggable<true>::DoesHaveAnyReadLocks(CEventListNode&)
 T CEventRWLock_Debuggable<true>::DuplicateReadLock(CEventListNode&)
 T CFiber::AllocPooledFiber(CFiber::SizeBuckets_t, unsigned long)
 T CFiber::CFiber()
 T CFiber::ClearUnusedSpaceToFFEEFFEE(void*)
 T CFiber::DetachFromStackContext()
 T CFiber::EstimateBytesUsed(unsigned long) const
 T CFiber::FiberYield(bool (*)(void*), void*)
 T CFiber::InitStackContext(void*, unsigned long, bool, unsigned long)
 T CFiber::IsRunningInThreadMemory()
 T CFiber::ReleasePooledFiber()
 T CFiber::ResumeJob()
 T CFiber::RunInThreadMemory(long long (*)(void*), void*)
 T CFiber::SetFiberJob(void (*)(void*), void*, unsigned long)
 T CFiber::SetThreadFiberMemoryRange(unsigned long)
 T CFiber::WaitForJobCompletion(CEventListNode&)
 T CFiber::~CFiber()
 T CMemAllocSystemInitialize
 T COM_TimestampedLog
 T CRecursionCallStackMarker::CRecursionCallStackMarker(bool)
 T CStackTop_Base::CStackTop_Base()
 T CStackTop_Base::ChangeMarker(CCallStackMarkerBase const&)
 T CStackTop_Base::GetCurrentTop(bool)
 T CStackTop_Base::~CStackTop_Base()
 T CStackTop_CopyParentStack::CStackTop_CopyParentStack(CCallStackCapture const*, CCallStackMarkerBase const&)
 T CStackTop_CopyParentStack::CStackTop_CopyParentStack(void const* const*, int, CCallStackMarkerBase const&)
 T CStackTop_CopyParentStack::ChangeCopiedStack(void const* const*, int)
 T CStackTop_CopyParentStack::~CStackTop_CopyParentStack()
 T CStackTop_ReferenceParentStack::CStackTop_ReferenceParentStack(CCallStackCapture const*, CCallStackMarkerBase const&)
 T CStackTop_ReferenceParentStack::CStackTop_ReferenceParentStack(void const* const*, int, CCallStackMarkerBase const&)
 T CStackTop_ReferenceParentStack::ChangeReferencedStack(void const* const*, int)
 T CStackTop_ReferenceParentStack::ReleaseParentStackReferences()
 T CStackTop_ReferenceParentStack::~CStackTop_ReferenceParentStack()
 T CTestCase::CTestCase(char const*, ITestSuite*)
 T CTestCase::GetName()
 T CTestCase::~CTestCase()
 T CTestSuite::AddTest(ITestCase*)
 T CTestSuite::CTestSuite(char const*, ITestSuite*)
 T CTestSuite::GetName()
 T CTestSuite::RunTest()
 T CTestSuite::~CTestSuite()
 T CThread::CThread()
 T CThread::GetCurrentCThread()
 T CThread::GetName()
 T CThread::GetPriority() const
 T CThread::GetResult()
 T CThread::GetThreadHandle()
 T CThread::Init()
 T CThread::IsAlive()
 T CThread::IsThreadRunning()
 T CThread::Join(unsigned int)
 T CThread::OnExit()
 T CThread::Resume()
 T CThread::SetName(char const*)
 T CThread::SetPriority(int)
 T CThread::Sleep(unsigned int)
 T CThread::Start(unsigned int, ThreadPriorityEnum_t)
 T CThread::Stop(int)
 T CThread::Suspend()
 T CThread::Terminate(int)
 T CThread::ThreadProc(void*)
 T CThread::WaitForCreateComplete(CThreadEvent*)
 T CThread::~CThread()
 T CThreadEvent::CThreadEvent(bool)
 T CThreadEvent::CThreadEvent(char const*, bool, bool)
 T CThreadEvent::Check()
 T CThreadEvent::Reset()
 T CThreadEvent::Set()
 T CThreadEvent::WaitForMultiple(int, CThreadEvent**, bool, unsigned int)
 T CThreadEvent::WaitForMultiple(int, CThreadEvent*, bool, unsigned int)
 T CThreadFastMutex::Lock(unsigned long long, unsigned int) volatile
 T CThreadFullMutex::CThreadFullMutex(bool, char const*, bool, bool)
 T CThreadFullMutex::IsCreator() const
 T CThreadFullMutex::Release()
 T CThreadLocalScope::CScopeCreatedOrDestroyedHandler::CScopeCreatedOrDestroyedHandler(void (*)(CThreadLocalScope*, bool))
 T CThreadLocalScope::CScopeCreatedOrDestroyedHandler::~CScopeCreatedOrDestroyedHandler()
 T CThreadLocalScope::CThreadLocalScope(ThreadHandle_t__*)
 T CThreadLocalScope::FindScopeForThreadHandle(ThreadHandle_t__*)
 T CThreadLocalScope::GetScopeListMutex()
 T CThreadLocalScope::SetThreadName(char const*)
 T CThreadLocalScope::~CThreadLocalScope()
 T CThreadMultiWaitEvent::CThreadMultiWaitEvent(bool)
 T CThreadMultiWaitEvent::Reset()
 T CThreadMultiWaitEvent::Set()
 T CThreadMultiWaitEvent::~CThreadMultiWaitEvent()
 T CThreadMultiWaitObject::CThreadMultiWaitObject()
 T CThreadMultiWaitObject::~CThreadMultiWaitObject()
 T CThreadMultiWaitSemaphore::CThreadMultiWaitSemaphore()
 T CThreadMultiWaitSemaphore::Release()
 T CThreadMultiWaitSemaphore::~CThreadMultiWaitSemaphore()
 T CThreadMutex::TryLock()
 T CThreadRWLock::LockForWrite()
 T CThreadRWLock::TryLockForWrite()
 T CThreadRWLock::UnlockRead_LockForWrite()
 T CThreadRWLock::UnlockWrite()
 T CThreadRWLock::UnlockWrite_LockForRead()
 T CThreadRWLock::WaitForRead()
 T CThreadRWLock_FastRead::CThreadRWLock_FastRead()
 T CThreadRWLock_FastRead::HandleFirstWriteLockTransition()
 T CThreadRWLock_FastRead::UnlockReadAccounting(unsigned int)
 T CThreadRWLock_FastRead::UnlockRead_LockForWrite()
 T CThreadRWLock_FastRead::UnlockWrite_LockForRead()
 T CThreadRWLock_FastRead::WaitForReadLockTransition(unsigned int)
 T CThreadSemaphore::CThreadSemaphore(int, int, char const*, bool)
 T CThreadSemaphore::Release(int, int*)
 T CThreadSemaphore::WaitImpl(unsigned int)
 T CThreadSemaphore::~CThreadSemaphore()
 T CThreadSpinLock::CThreadSpinLock(int)
 T CThreadSpinLock::SetMaxSpins(int)
 T CThreadSpinRWLock::LockForRead()
 T CThreadSpinRWLock::SpinLockForWrite(unsigned long long)
 T CThreadSpinRWLock::UnlockRead()
 T CThreadSpinRWLock::UnlockRead_LockForWrite()
 T CThreadSpinRWLock::UnlockWrite()
 T CThreadSpinRWLock::UnlockWrite_LockForRead()
 T CThreadSyncObject::AcquireSemaphoreInternal(unsigned int)
 T CThreadSyncObject::AssertUseable()
 T CThreadSyncObject::CThreadSyncObject()
 T CThreadSyncObject::CloseSemaphoreInternal(int, bool, char const*)
 T CThreadSyncObject::CreateAnonymousSyncObjectInternal(int, bool)
 T CThreadSyncObject::CreateSemaphoreInternal(char const*, int, bool, bool*)
 T CThreadSyncObject::EnsureSemaphoreClearedInternal(int)
 T CThreadSyncObject::EnsureSemaphorePostedInternal(int)
 T CThreadSyncObject::IsSemaphoreOrphanedInternal(int, int)
 T CThreadSyncObject::OpenSemaphoreInternal(char const*, bool)
 T CThreadSyncObject::ReleaseSemaphoreInternal(int, int)
 T CThreadSyncObject::ResetThreadSyncObjectInternal()
 T CThreadSyncObject::SaveNameToFile(char const*)
 T CThreadSyncObject::SignalThreadSyncObjectInternal()
 T CThreadSyncObject::Wait(unsigned int)
 T CThreadSyncObject::WaitForMultiple(int, CThreadSyncObject**, bool, unsigned int)
 T CThreadSyncObject::WaitForMultiple(int, CThreadSyncObject*, bool, unsigned int)
 T CThreadSyncObject::WaitImpl(unsigned int)
 T CThreadSyncObject::operator!() const
 T CThreadSyncObject::~CThreadSyncObject()
 T CVProfNode::EnterScope()
 T CVProfNode::ExitScope()
 T CVProfNode::GetSubNode(char const*, int, char const*)
 T CVProfNode::GetSubNode(char const*, int, char const*, int)
 T CVProfNode::MarkFrame()
 T CVProfNode::Pause()
 T CVProfNode::Reset()
 T CVProfNode::ResetPeak()
 T CVProfNode::Resume()
 T CVProfNode::SetCurFrameTime(unsigned long)
 T CVProfNode::~CVProfNode()
 T CVProfReporter::CVProfReporter(char const*, int)
 T CVProfReporter::Clear()
 T CVProfReporter::GatherDataAndReport()
 T CVProfReporter::OnFrameBoundaryExecuteCallback(void*)
 T CVProfReporter::ScheduleVProfQuery(CVProfReporter*)
 T CVProfReporter::~CVProfReporter()
 T CVProfile::AddBudgetGroupName(char const*, int)
 T CVProfile::AddDeferredFunction(void (*)(void*), void*)
 T CVProfile::BudgetGroupNameToBudgetGroupID(char const*)
 T CVProfile::BudgetGroupNameToBudgetGroupID(char const*, int)
 T CVProfile::CVProfile()
 T CVProfile::CalcBudgetGroupL2CacheMisses_Recursive(CVProfNode*, unsigned int*, int, float)
 T CVProfile::CalcBudgetGroupLHS_Recursive(CVProfNode*, unsigned int*, int, float)
 T CVProfile::CalcBudgetGroupTimes_Recursive(CVProfNode*, unsigned int*, int, float)
 T CVProfile::DumpNodes(CVProfNode*, int, bool, CVProfSummingContext&)
 T CVProfile::ExecuteDeferredFunctions()
 T CVProfile::FindBudgetGroupName(char const*)
 T CVProfile::FindNode(CVProfNode*, char const*)
 T CVProfile::FindOrCreateCounter(char const*, CounterGroup_t)
 T CVProfile::FreeNodes_R(CVProfNode*)
 T CVProfile::GetBudgetGroupColor(int, int&, int&, int&, int&)
 T CVProfile::GetCounterGroup(int) const
 T CVProfile::GetCounterName(int) const
 T CVProfile::GetCounterNameAndValue(int, int&) const
 T CVProfile::GetCounterValue(int) const
 T CVProfile::GetNumBudgetGroups()
 T CVProfile::GetNumCounters() const
 T CVProfile::HideBudgetGroup(int, bool)
 T CVProfile::OutputReport(int, char const*, int)
 T CVProfile::RegisterNumBudgetGroupsChangedCallBack(void (*)())
 T CVProfile::RemoveDeferredFunction(void (*)(void*), void*)
 T CVProfile::ResetCounters(CounterGroup_t)
 T CVProfile::SetOutputStream(void (*)(char const*, ...))
 T CVProfile::SumTimes(CVProfNode*, int, CVProfSummingContext&)
 T CVProfile::SumTimes(char const*, int, CVProfSummingContext&)
 T CVProfile::Term()
 T CVProfile::~CVProfile()
 T CVirtualMachineCallStackTranslationEncoder::CVirtualMachineCallStackTranslationEncoder(char const*)
 T CVirtualMachineCallStackTranslationEncoder::DecodeFromNativePointer(void const*, char*, unsigned int, char*, unsigned int, int*)
 T CVirtualMachineCallStackTranslationEncoder::EncodeAsNativePointer(char const*, char const*, unsigned int)
 T CVirtualMachineCallStackTranslationEncoder::EnumerateEncodingIndices(bool (*)(CVirtualMachineCallStackTranslationEncoder*, unsigned int, char const*, char const*, unsigned int, void*), void*)
 T CVirtualMachineCallStackTranslationEncoder::GetCurrentIndexCount()
 T CVirtualMachineCallStackTranslationEncoder::GetIndexBitMask()
 T CVirtualMachineCallStackTranslationEncoder::GetIndexBitShift()
 T CVirtualMachineCallStackTranslationEncoder::GetLineOffsetBitMask()
 T CVirtualMachineCallStackTranslationEncoder::GetLineOffsetBitShift()
 T CVirtualMachineCallStackTranslationEncoder::GetLineOffsetPostShiftedSignBitMask()
 T CVirtualMachineCallStackTranslationEncoder::GetMappingBaseAddress()
 T CVirtualMachineCallStackTranslationEncoder::GetMappingSize()
 T CVirtualMachineCallStackTranslationEncoder::GetName()
 T CVirtualMachineCallStackTranslationEncoder::GetVMID()
 T CVirtualMachineCallStackTranslationEncoder::~CVirtualMachineCallStackTranslationEncoder()
 T CWorkerThread::BoostPriority()
 T CWorkerThread::CWorkerThread()
 T CWorkerThread::Call(unsigned int, unsigned int, bool, unsigned int (*)(unsigned int, CThreadEvent**, int, unsigned int))
 T CWorkerThread::CallMaster(unsigned int, unsigned int)
 T CWorkerThread::CallWorker(unsigned int, unsigned int, bool)
 T CWorkerThread::GetCallHandle()
 T CWorkerThread::GetCallParam() const
 T CWorkerThread::PeekCall(unsigned int*)
 T CWorkerThread::Reply(unsigned int)
 T CWorkerThread::WaitForCall(unsigned int*)
 T CWorkerThread::WaitForCall(unsigned int, unsigned int*)
 T CWorkerThread::WaitForReply(unsigned int)
 T CWorkerThread::WaitForReply(unsigned int, unsigned int (*)(unsigned int, CThreadEvent**, int, unsigned int))
 T CatchAndWriteMiniDump
 T CatchAndWriteMiniDumpEx
 T CatchAndWriteMiniDumpExForVoidPtrFn
 T CatchAndWriteMiniDumpExReturnsInt
 T CatchAndWriteMiniDumpForVoidPtrFn
 T CommandLine
 T ConColorMsg(Color const&, char const*, ...)
 T ConDMsg
 T ConMsg(char const*, ...)
 T CrackSmokingCompiler
 T CreateCommandLine
 T CreateSimpleProcess
 T CreateSimpleThread
 T DeclareCurrentThreadIsMainThread
 T DevMsg
 T DevMsg(char const*, ...)
 T DevWarning
 T DevWarning(char const*, ...)
 T EarlyInit_Tier0
 T FreeCommandLine
 T GenericThreadLocals::CThreadLocalBase::CThreadLocalBase()
 T GenericThreadLocals::CThreadLocalBase::~CThreadLocalBase()
 T GetAddressTranslationData
 T GetCPUFrequencyResults
 T GetCPUInformation
 T GetDefaultMiniDumpHandler
 T GetDefaultMiniDumpTypeFlags
 T GetFileAndLineFromAddress
 T GetHardwareClockReliably
 T GetInstructionPointer
 T GetLocalHostname
 T GetModuleNameFromAddress
 T GetNameFromOSType
 T GetOSDetailString
 T GetPlatformName
 T GetSymbolNameFromAddress
 T GetThreadedLoadLibraryFunc
 T GetUnitTest
 T GetVAtom
 T GetWin32ConsoleCursorColumnIndex
 T HangWatchdogInternal_BeginScope
 T HangWatchdogInternal_EndScope
 T HangWatchdog_IndicateActivity
 T HangWatchdog_Initialize
 T HangWatchdog_SetHangImageRGBA
 T HangWatchdog_SetMainThreadWindow
 T HangWatchdog_Shutdown
 T IStack_Annotation::IStack_Annotation(CCallStackMarkerBase const&)
 T IStack_Annotation::~IStack_Annotation()
 T IStack_VM_Segment_Marker::IStack_VM_Segment_Marker(CCallStackMarkerBase const&)
 T IStack_VM_Segment_Marker::~IStack_VM_Segment_Marker()
 T InitWin32ConsoleColorContext
 T InstallProgressReportHandler
 T InvokeMiniDumpHandler
 T IterateCapturedStackAnnotations
 T JmpToAlternateStack
 T KeyValuesSystem
 T LengthOfMatchingPaths
 T LoggingSystem_AddTagToChannel
 T LoggingSystem_CurrentStateIndex
 T LoggingSystem_EnableBackdoorLoggingListeners
 T LoggingSystem_FindChannel
 T LoggingSystem_FirstTag
 T LoggingSystem_GetChannel
 T LoggingSystem_GetChannelColor
 T LoggingSystem_GetChannelCount
 T LoggingSystem_GetChannelFlags
 T LoggingSystem_GetChannelVerbosity
 T LoggingSystem_GetFirstChannelID
 T LoggingSystem_GetNextChannelID
 T LoggingSystem_HasTag
 T LoggingSystem_InvalidTag
 T LoggingSystem_IsChannelEnabled
 T LoggingSystem_IsChannelEnabled(int, LoggingVerbosity_t)
 T LoggingSystem_Log
 T LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
 T LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, Color, char const*, ...)
 T LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, LoggingMetaData_t const*, Color, char const*, ...)
 T LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, LoggingMetaData_t const*, char const*, ...)
 T LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
 T LoggingSystem_Log(int, LoggingSeverity_t, LoggingMetaData_t const*, Color, char const*, ...)
 T LoggingSystem_Log(int, LoggingSeverity_t, LoggingMetaData_t const*, char const*, ...)
 T LoggingSystem_LogAssert
 T LoggingSystem_LogDirect
 T LoggingSystem_LogDirect(int, LoggingSeverity_t, Color, LoggingMetaData_t const*, char const*)
 T LoggingSystem_LogDirect(int, LoggingSeverity_t, Color, char const*)
 T LoggingSystem_LogDirect(int, LoggingSeverity_t, LeafCodeInfo_t const&, Color, LoggingMetaData_t const*, char const*)
 T LoggingSystem_LogDirect(int, LoggingSeverity_t, LeafCodeInfo_t const&, Color, char const*)
 T LoggingSystem_LogDirect(int, LoggingSeverity_t, LeafCodeInfo_t const&, LoggingMetaData_t const*, char const*)
 T LoggingSystem_LogDirect(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*)
 T LoggingSystem_LogDirect(int, LoggingSeverity_t, LoggingMetaData_t const*, char const*)
 T LoggingSystem_NextTag
 T LoggingSystem_PopLoggingState
 T LoggingSystem_PushLoggingState
 T LoggingSystem_RegisterBackdoorLoggingListener
 T LoggingSystem_RegisterLoggingChannel
 T LoggingSystem_RegisterLoggingListener
 T LoggingSystem_ResetBackdoorLoggingState
 T LoggingSystem_ResetCurrentLoggingState
 T LoggingSystem_SetChannelColor
 T LoggingSystem_SetChannelFlags
 T LoggingSystem_SetChannelVerbosity
 T LoggingSystem_SetChannelVerbosityByName
 T LoggingSystem_SetChannelVerbosityByTag
 T LoggingSystem_SetLoggingResponsePolicy
 T LoggingSystem_TagName
 T LoggingSystem_UnregisterLoggingListener
 T MemAllocScratch
 T MemAlloc_AllocFunc
 T MemAlloc_CallocFunc
 T MemAlloc_FreeFunc
 T MemAlloc_ReallocFunc
 T MemAlloc_StrDupWrapperFunc
 T MemFreeScratch
 T MemZeroMemory
 T MicroProfilerAddTS
 T MiniDumpExceptionHandler
 T MiniDumpRegisterForUnhandledExceptions
 T MiniDumpStandardData_t::HandlerQueueHeartBeat() const
 T MinidumpSetMiniDumpComment
 T MinidumpUserStreamInfoAppend
 T MinidumpUserStreamInfoGet
 T MinidumpUserStreamInfoSetHeader
 T Msg
 T OSTypesAreCompatible
 T Plat_ApproximateProcessMemoryUsage
 T Plat_AttachDebuggerToProcess
 T Plat_BeginWatchdogTimer
 T Plat_ChangeCurrentFrame
 T Plat_CheckSDL
 T Plat_CollectMiniDumpsForFatalErrors
 T Plat_ConvertToLocalTime
 T Plat_CreateGameInstanceMutex
 T Plat_CreateUUIDImpl
 T Plat_CreateWindow
 T Plat_DebugPrint
 T Plat_DebugString
 T Plat_DesktopNotify
 T Plat_DestroyGameInstanceMutex
 T Plat_DestroyWindow
 T Plat_DisableIOBuffering
 T Plat_EnableCustomerMachineMode
 T Plat_EnableHeadlessMode
 T Plat_EndWatchdogTimer
 T Plat_ExitProcess
 T Plat_FastVerifyHardwareKey
 T Plat_FileExists
 T Plat_FileIsReadOnly
 T Plat_FileSize
 T Plat_FindModuleByAddress
 T Plat_FlashWindow
 T Plat_FloatTime
 T Plat_GetCPUFrequency
 T Plat_GetCPUUsage
 T Plat_GetClockStart
 T Plat_GetComputerName
 T Plat_GetCurrentDate
 T Plat_GetCurrentFrame
 T Plat_GetCurrentRSS
 T Plat_GetDPI
 T Plat_GetDefaultMonitorIndex
 T Plat_GetDesktopBounds
 T Plat_GetDesktopResolution
 T Plat_GetDocumentDirectory
 T Plat_GetEnv
 T Plat_GetExecutablePath
 T Plat_GetExecutablePathUTF8
 T Plat_GetLocalTime
 T Plat_GetMemPageSize
 T Plat_GetModuleFilename
 T Plat_GetModuleInterfaceFactory
 T Plat_GetModuleProcAddress
 T Plat_GetMonitorBounds
 T Plat_GetMonitorIndexFromName
 T Plat_GetMonitorName
 T Plat_GetMonitorResolution
 T Plat_GetOSDescriptionString
 T Plat_GetOSType
 T Plat_GetPagedPoolInfo
 T Plat_GetPeakRSS
 T Plat_GetPlatformError
 T Plat_GetProcAddress
 T Plat_GetProcAddresses
 T Plat_GetRawCallStack
 T Plat_GetShellWindow
 T Plat_GetThreadIndex
 T Plat_GetTime
 T Plat_GetTimeString
 T Plat_GetUserName
 T Plat_GetWindowBounds
 T Plat_GetWindowClientBounds
 T Plat_GetWindowClientSize
 T Plat_GetWindowMonitorIndex
 T Plat_GlobalMemoryStatus
 T Plat_HasDefaultMonitorIndexChanged
 T Plat_IgnoreContentAsserts
 T Plat_InitializeCOM
 T Plat_InstallControlCHandler
 T Plat_InstallUrlHandler
 T Plat_Is64BitOS
 T Plat_IsConsoleApplication
 T Plat_IsDirectory
 T Plat_IsHighDPI
 T Plat_IsInBenchmarkMode
 T Plat_IsInDebugSessionRaw
 T Plat_IsInHeadlessMode
 T Plat_IsInTestMode
 T Plat_IsModuleLoaded
 T Plat_IsRunningOnCustomerMachine
 T Plat_IsWindowFocused
 T Plat_IsWindowMinimized
 T Plat_IsWindowVisible
 T Plat_LoadInterface
 T Plat_LoadModule
 T Plat_LoadModuleRaw
 T Plat_LoadSDL
 T Plat_MSTime
 T Plat_MSTime64
 T Plat_MessageBox
 T Plat_MicroSecTickDiff
 T Plat_MicroSecTickDiffF
 T Plat_MilliSecTickDiff
 T Plat_MilliSecTickDiffF
 T Plat_MinimizeWindow
 T Plat_NeedsLowFragmentation
 T Plat_OsSpecificHandleToPlatWindow
 T Plat_Printf
 T Plat_PutEnv
 T Plat_ReconfigureWindow
 T Plat_RefreshDPI
 T Plat_RelativeTickFrequency
 T Plat_RelativeTicks
 T Plat_ReleaseMouseCapture
 T Plat_RequireSDL
 T Plat_RunningWithDebugModules
 T Plat_ScreenToWindowCoords
 T Plat_SecTickDiff
 T Plat_SecTickDiffF
 T Plat_SetActiveWindow
 T Plat_SetBenchmarkMode
 T Plat_SetClipboardText
 T Plat_SetCpuTimeIsReliable
 T Plat_SetCurrentFrame
 T Plat_SetDefaultMonitorIndex
 T Plat_SetForegroundWindow
 T Plat_SetFullscreenMinimizeOnFocusLoss
 T Plat_SetIsConsoleApplication
 T Plat_SetModuleFilename
 T Plat_SetMouseCapture
 T Plat_SetVirtualReserveFailLimit
 T Plat_SetVirtualReserveWarnLimit
 T Plat_SetWatchdogHandlerFunction
 T Plat_SetWindowBorder
 T Plat_SetWindowFullscreenState
 T Plat_SetWindowIcon
 T Plat_SetWindowPos
 T Plat_SetWindowSize
 T Plat_SetWindowTitle
 T Plat_SetWindowTitleW
 T Plat_SetupFPUControlWord
 T Plat_ShouldCollectMiniDumpsForFatalErrors
 T Plat_ShowWindow
 T Plat_ShutdownCOM
 T Plat_TickDiffMicroSec
 T Plat_TickDiffMicroSecF
 T Plat_TickDiffMilliSec
 T Plat_TickDiffMilliSecF
 T Plat_TickDiffSec
 T Plat_TickDiffSecF
 T Plat_TicksAfterMicroSecs
 T Plat_TicksAfterMicroSecsF
 T Plat_TicksAfterMilliSecs
 T Plat_TicksAfterMilliSecsF
 T Plat_TicksAfterSecs
 T Plat_TicksAfterSecsF
 T Plat_TranslateSymbolicLinks
 T Plat_USTime
 T Plat_UUIDFromString
 T Plat_UUIDToString
 T Plat_UnloadModule
 T Plat_UnloadSDL
 T Plat_VerifyHardwareKey
 T Plat_VerifyHardwareKeyDriver
 T Plat_VerifyHardwareKeyPrompt
 T Plat_VirtualAccessFlags
 T Plat_VirtualAlloc
 T Plat_VirtualFree
 T Plat_VirtualProtect
 T Plat_WindowToOsSpecificHandle
 T Plat_WindowToScreenCoords
 T Plat_chdir
 T Plat_chmod
 T Plat_ctime
 T Plat_getwd
 T Plat_gmtime
 T Plat_localtime
 T Plat_timegm
 T PopMiniProfilerTS
 T PushMiniProfilerTS
 T Qt_GetCustomAllocators
 T RegisterAssertionFailureListener
 T RegisterKeyValuesSystem
 T ReleaseThreadHandle
 T RemoveAssertionCallback
 T RemoveMiniProfilerFromList
 T ReportProgress
 T RestoreWin32ConsoleColor
 T RunTSListTests
 T RunTSQueueTests
 T RunWithAlternateStack
 T SeriousWarning
 T SeriousWarning(int, Color, char const*, ...)
 T SeriousWarning(int, char const*, ...)
 T SetAssertionCallback
 T SetAssertionPrompt
 T SetCPUMonitoringInterval
 T SetDefaultMiniDumpHandler
 T SetThreadedLoadLibraryFunc
 T SetWin32ConsoleColor
 T SetupWin32ConsoleIO
 T StackMarkup_RestoreState
 T StackMarkup_SaveState
 T StackStats_DumpNamedInstance
 T StackStats_EnumerateRegisteredInstances
 T StackStats_GathererRegistration
 T StackStats_GetSymbolTranslationDefault
 T StackToolsNotify_BeginLoadingModule
 T StackToolsNotify_EndLoadingModule
 T StackToolsNotify_LoadedModule
 T StackToolsNotify_SetSymbolSearchPath
 T StackToolsNotify_UnloadedModule
 T StackTools_EnumerateKnownLoadedModules
 T StackTools_EnumerateVirtualMachineEncoders
 T StackTools_InstallModuleMappingListener
 T StackTools_RemoveModuleMappingListener
 T StackTools_VerifyLoadedModuleMappings
 T ThreadCloseProcess
 T ThreadFinishInitOnce
 T ThreadGetCurrentHandle
 T ThreadGetCurrentId
 T ThreadGetCurrentProcessHandle
 T ThreadGetCurrentProcessId
 T ThreadGetPriority
 T ThreadGetProcessExitCode
 T ThreadInMainThread
 T ThreadInitOnce
 T ThreadInitOnceCall
 T ThreadInterlockedExchange64
 T ThreadIsProcessActive
 T ThreadIsProcessIdActive
 T ThreadJoin
 T ThreadMultiWait
 T ThreadNanoSleep
 T ThreadSetAffinity
 T ThreadSetDebugNameS2
 T ThreadSetPriority
 T ThreadSetProcessPriority
 T ThreadShellExecute
 T ThreadShellExecuteEx
 T ThreadSleep
 T ThreadTerminateProcessCode
 T ThreadWaitForProcessExit
 T ThreadYield
 T Tier0DebugDraw3DLine
 T Tier0DebugDrawAge
 T Tier0DebugDrawLockLines
 T Tier0DebugDrawLockedQueryLine
 T Tier0DebugDrawUnlockLines
 T Tier0GenericMiniDumpHandler
 T Tier0GenericMiniDumpHandlerEx
 T Tier0GenericMiniDumpHandler_SetFilenamePrefix
 T Tier0GenericMiniDumpHandler_SetGetAdditionalFileAttachmentCallback
 T Tier0GenericMiniDumpHandler_SetOptions
 T Tier0GenericMiniDumpHandler_SetPreHandlerCallback
 T TranslateStackInfo
 T UnitTestCount
 T UnitTestInstallTestCase
 T UnregisterAssertionFailureListener
 T VCRT_isalnum
 T VCRT_isalpha
 T VCRT_isdigit
 T VCRT_isprint
 T VCRT_tolower
 T VCRT_toupper
 T V_AbbreviatePathInPlace
 T V_AddBackSlashesToSpecialChars
 T V_AreFileNamesEqual
 T V_AreSlashesCorrect
 T V_BBCodeToHTML
 T V_BasicHtmlEntityEncode
 T V_BoyerMooreSearch
 T V_CopyMemory3D
 T V_DecodeBackslashSequencesInString
 T V_ExtractDomainFromURL
 T V_FixDoubleSlashes
 T V_FixInvalidPathCharacters
 T V_FixSlashes
 T V_FixupPathCharToUnderscore
 T V_FixupPathSpaceToUnderscore
 T V_GetErrno
 T V_GetFileExtension
 T V_GetFileExtensionSafe
 T V_Get_stderr
 T V_Get_stdin
 T V_Get_stdout
 T V_HtmlEntityDecodeToUTF8
 T V_IndexAfterPrefix
 T V_IsAbsolutePath
 T V_IsDeprecatedW
 T V_IsFakePath
 T V_IsMeanSpaceW
 T V_IsValidDomainNameCharacter
 T V_IsValidURLCharacter
 T V_MakeAbsoluteVPKPathName
 T V_ParseLine
 T V_PathContainsPath
 T V_PathNamesAreEquivalent
 T V_PathsMatch
 T V_RemoveDotSlashes
 T V_SetErrno
 T V_StrTrim
 T V_StringToColor
 T V_StringToFloatArray
 T V_StringToIntArray
 T V_StringToVector
 T V_StripFilename
 T V_StripLeadingWhitespace
 T V_StripSurroundingQuotes
 T V_StripSurroundingWhitespace
 T V_StripTrailingSlash
 T V_StripTrailingWhitespace
 T V_TokenWaiting
 T V_URLContainsDomain
 T V_URLDecode
 T V_URLDecodeRaw
 T V_URLEncode
 T V_URLEncodeRaw
 T V_UTF16CharsToUTF32
 T V_UTF16CharsToUTF8
 T V_UTF16ToUTF16
 T V_UTF16ToUTF32
 T V_UTF16ToUTF8
 T V_UTF32CharsToUTF16
 T V_UTF32CharsToUTF8
 T V_UTF32ToUTF16
 T V_UTF32ToUTF32
 T V_UTF32ToUTF8
 T V_UTF8CharsToUTF16
 T V_UTF8CharsToUTF32
 T V_UTF8ToUTF16
 T V_UTF8ToUTF32
 T V_UnicodeAdvance(char*, int)
 T V_UnicodeAdvance(unsigned short*, int)
 T V_UnicodeAdvance(wchar_t*, int)
 T V_UnicodeCaseCompare(char const*, char const*, int, EStringConvertErrorPolicy)
 T V_UnicodeCaseCompare(unsigned short const*, unsigned short const*, int, EStringConvertErrorPolicy)
 T V_UnicodeCaseCompare(wchar_t const*, wchar_t const*, int, EStringConvertErrorPolicy)
 T V_UnicodeCaseConvert(char const*, char*, int, int, EStringConvertErrorPolicy)
 T V_UnicodeCaseConvert(unsigned short const*, unsigned short*, int, int, EStringConvertErrorPolicy)
 T V_UnicodeCaseConvert(wchar_t const*, wchar_t*, int, int, EStringConvertErrorPolicy)
 T V_UnicodeCaseStringInString(char const*, char const*, int, EStringConvertErrorPolicy)
 T V_UnicodeCaseStringInString(unsigned short const*, unsigned short const*, int, EStringConvertErrorPolicy)
 T V_UnicodeCaseStringInString(wchar_t const*, wchar_t const*, int, EStringConvertErrorPolicy)
 T V_UnicodeLength(char const*)
 T V_UnicodeLength(unsigned short const*)
 T V_UnicodeLength(wchar_t const*)
 T V_UnicodeRepair(char*, EStringConvertErrorPolicy)
 T V_UnicodeRepair(unsigned short*, EStringConvertErrorPolicy)
 T V_UnicodeRepair(wchar_t*, EStringConvertErrorPolicy)
 T V_UnicodeValidate(char const*)
 T V_UnicodeValidate(unsigned short const*)
 T V_UnicodeValidate(wchar_t const*)
 T V_UnqualifiedFileName
 T V_abort
 T V_acos
 T V_acosf
 T V_asin
 T V_asinf
 T V_atan
 T V_atan2
 T V_atan2f
 T V_atanf
 T V_atod
 T V_atof
 T V_atoi
 T V_atoi64
 T V_atoui64
 T V_clearerr
 T V_cos
 T V_cosf
 T V_cosh
 T V_coshf
 T V_exp
 T V_exp2
 T V_exp2f
 T V_expf
 T V_fclose
 T V_feof
 T V_ferror
 T V_fflush
 T V_fgetc
 T V_fgets
 T V_fileno
 T V_fmod
 T V_fmodf
 T V_fopen
 T V_fprintf
 T V_fputc
 T V_fputs
 T V_fread
 T V_freopen
 T V_frexp
 T V_frexpf
 T V_fscanf
 T V_fseek
 T V_fseeki64
 T V_ftell
 T V_ftelli64
 T V_fwrite
 T V_get_crt_longjmp_fn
 T V_get_crt_setjmp_fn
 T V_hypot
 T V_isbreakablewspace
 T V_isbreakablewspace32
 T V_isstrlower_fast
 T V_iswalnum
 T V_iswalpha
 T V_iswcntrl
 T V_iswdigit
 T V_iswlower
 T V_iswspace
 T V_iswupper
 T V_localeconv
 T V_log
 T V_log10
 T V_log10f
 T V_log2
 T V_log2f
 T V_logf
 T V_longjmp
 T V_normalizeFloatString
 T V_normalizeFloatWString
 T V_pow
 T V_powf
 T V_pretifymem
 T V_pretifynum
 T V_qsort
 T V_qsort_s
 T V_rand
 T V_setjmp
 T V_setvbuf
 T V_sin
 T V_sinf
 T V_sinh
 T V_sinhf
 T V_snprintf
 T V_snwprintf
 T V_sscanf
 T V_strchr32
 T V_strcmp32
 T V_stricmp_fast
 T V_stricmp_fast_NegativeForUnequal
 T V_stristr_fast(char const*, char const*)
 T V_strlower_fast
 T V_strspn
 T V_strstr32
 T V_strtod
 T V_strtoi64
 T V_strtok
 T V_strtoui64
 T V_strupper_fast
 T V_swscanf
 T V_tan
 T V_tanf
 T V_tanh
 T V_tanhf
 T V_tier0_ceil
 T V_tier0_ceilf
 T V_tier0_crc32
 T V_tier0_fabs
 T V_tier0_fabsf
 T V_tier0_floor
 T V_tier0_floorf
 T V_tier0_isgraph
 T V_tier0_ispunct
 T V_tier0_memcmp
 T V_tier0_memcpy
 T V_tier0_memmove
 T V_tier0_memset
 T V_tier0_sqrt
 T V_tier0_sqrtf
 T V_tmpnam
 T V_towlower
 T V_towlower32
 T V_towupper
 T V_towupper32
 T V_vfprintf
 T V_vscprintf
 T V_vsnprintf
 T V_vsnprintfRet
 T V_vsnprintfSize
 T V_vsnwprintf
 T V_vsnwprintfRet
 T V_wcsicmp
 T V_wcsistr(wchar_t const*, wchar_t const*)
 T V_wcsnicmp
 T V_wcstod
 T V_wcstoi64
 T V_wcstoui64
 T VoidFnPtrLookup_Tier0
 T Warning
 T _AssertValidReadPtr
 T _AssertValidReadWritePtr
 T _AssertValidWritePtr
 T _CCallStackStatsGatherer_GetSharedGlobalInstance
 T _CCallStackStatsGatherer_Internal_DumpStatsToFile
 T _CCallStackStatsGatherer_ReleaseSharedGlobalInstance
 T _CCallStackStatsGatherer_Write_EmbeddedScript
 T _CCallStackStatsGatherer_Write_FieldDescriptions
 T _Error_AlwaysSpewCallStack_Enable
 T _Error_AlwaysSpewCallStack_Length
 T _GetCallStack
 T _GetCallStackForThread
 T _GetCallStackForThread_Fast
 T _GetCallStack_Fast
 T _V_AppendSlash
 T _V_ComposeFileName
 T _V_DefaultExtension
 T _V_ExtractFileExtension
 T _V_ExtractFilePath
 T _V_FileBase
 T _V_FixupPathName
 T _V_GetFirstDir
 T _V_MakeAbsolutePath
 T _V_MakeRelativePath
 T _V_SetExtension
 T _V_StrLeft
 T _V_StrRight
 T _V_StrSlice
 T _V_StrSubst
 T _V_StringAfterLeadingWhitespace
 T _V_StringAfterPrefix
 T _V_StringAfterPrefixCaseSensitive
 T _V_StripExtension
 T _V_StripLastDir
 T _V_strcspn
 T _V_strncat
 T _V_strncpy
 T _V_strnicmp_fast
 T _V_strnistr_fast
 T _V_wcsncat
 T _V_wcsncpy_bytes
 T _Warning_AlwaysSpewCallStack_Enable
 T _Warning_AlwaysSpewCallStack_Length
 T nexttoken
 T vtune
 _DefaultRuneLocale
 _NSGetArgc
 _NSGetArgv
 _NSGetExecutablePath
 _Unwind_Resume
 __CFConstantStringClassReference
 __bzero
 __cxa_allocate_exception
 __cxa_atexit
 __cxa_begin_catch
 __cxa_end_catch
 __cxa_guard_abort
 __cxa_guard_acquire
 __cxa_guard_release
 __cxa_pure_virtual
 __cxa_rethrow
 __cxa_throw
 __error
 __gxx_personality_v0
 __maskrune
 __stack_chk_fail
 __stack_chk_guard
 __stderrp
 __stdinp
 __stdoutp
 __tolower
 __toupper
 _dyld_get_image_header
 _dyld_get_image_name
 _dyld_image_count
 _exit
 _objc_empty_cache
 abort
 acos
 acosf
 alarm
 asctime
 asin
 asinf
 atan
 atan2
 atan2f
 atanf
 atof
 atoi
 atoll
 backtrace
 calloc
 ceil
 ceilf
 chdir
 chmod
 clearerr
 close
 cos
 cosf
 cosh
 coshf
 ctime_r
 dladdr
 dlclose
 dlerror
 dlopen
 dlsym
 dyld_stub_binder
 exp
 exp2
 exp2f
 expf
 fchmod
 fclose
 fcntl
 feof
 ferror
 fflush
 fgetc
 fgets
 fileno
 floor
 floorf
 fmod
 fmodf
 fopen
 fork
 fprintf
 fputc
 fputs
 fread
 free
 freopen
 frexp
 frexpf
 fseek
 fseeko
 ftell
 ftello
 ftime
 fwrite
 getcwd
 getenv
 gethostname
 getloadavg
 getpid
 getrlimit
 getrusage
 gettimeofday
 gmtime_r
 hypot
 kill
 localeconv
 localtime
 localtime_r
 log
 log10
 log10f
 log2
 log2f
 logf
 longjmp
 mach_absolute_time
 mach_task_self_
 mach_timebase_info
 malloc
 malloc_size
 memchr
 memcmp
 memcpy
 memmove
 memset
 memset_pattern16
 mmap
 mprotect
 munmap
 nanosleep
 objc_msgSend
 open
 operator delete(void*)
 operator delete[](void*)
 operator new(unsigned long)
 operator new[](unsigned long)
 pclose
 pipe
 poll
 popen
 pow
 powf
 printf
 pthread_attr_destroy
 pthread_attr_init
 pthread_attr_setstacksize
 pthread_cond_broadcast
 pthread_cond_destroy
 pthread_cond_init
 pthread_cond_signal
 pthread_cond_timedwait
 pthread_cond_wait
 pthread_create
 pthread_from_mach_thread_np
 pthread_getschedparam
 pthread_getspecific
 pthread_join
 pthread_key_create
 pthread_key_delete
 pthread_kill
 pthread_mutex_destroy
 pthread_mutex_init
 pthread_mutex_lock
 pthread_mutex_trylock
 pthread_mutex_unlock
 pthread_mutexattr_destroy
 pthread_mutexattr_init
 pthread_mutexattr_settype
 pthread_self
 pthread_setspecific
 pthread_yield_np
 putenv
 puts
 qsort
 qsort_r
 raise
 rand
 read
 realloc
 remove
 rewind
 semctl
 semget
 semop
 setjmp
 setpriority
 setvbuf
 sigaction
 signal
 sigprocmask
 sin
 sinf
 sinh
 sinhf
 snprintf
 sprintf
 srand
 sscanf
 stat$INODE64
 std::__1::__vector_base_common<true>::__throw_length_error() const
 std::terminate()
 strchr
 strcmp
 strcpy
 strcspn
 strerror
 strlen
 strncat
 strncmp
 strncpy
 strrchr
 strspn
 strstr
 strtod
 strtok
 strtoll
 strtoull
 sysconf
 sysctl
 sysctlbyname
 system
 tan
 tanf
 tanh
 tanhf
 task_info
 time
 timegm
 tmpnam
 typeinfo for int
 unlink
 usleep
 vfprintf
 vfscanf
 vprintf
 vsnprintf
 vsprintf
 vsscanf
 vswprintf
 vswscanf
 vtable for __cxxabiv1::__class_type_info
 vtable for __cxxabiv1::__si_class_type_info
 waitpid
 wcschr
 wcsdup
 wcslen
 wcsncat
 wcsncpy
 wcstod
 wcstoll
 wcstoull
 write
